[
  {
    "seconds": 1,
    "text": ""
  },
  {
    "seconds": 2,
    "text": ""
  },
  {
    "seconds": 3,
    "text": "X X 06_music_design.md — Skill_Challenges =i TR\ng .N_mllq_ﬂcigmdu. veo- 8 Blew +~ 8 ¥ x\n¥ 06_music_design.md .\np 1 1. Describe the Problem 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nb —_\n-\n& 4 2, Design the Class Interface\ngs 5\n[\n@ 7\nI O of - ) {8 6T 1) C o (13\n]\n10\n11\n12 [N\n@ 06 music design_challinge.specib U &\nspec > @ 06_music_design_challenge_spec.rb\n.|\n@\n& |\n"
  },
  {
    "seconds": 4,
    "text": "XX} 06_music_design.md — Skill_Challenges Ing=hn fi\nT sso- @ Bon -8 5\n¥ 08_music_design,md A\no 1 1. Describe the Problem ~ 0swinpintogMASTUDENT-Oswin-Pinto-C17GHAZ4Q6L4 Skill_Challenges % []\n2 —_\n-\n& 4 2, Design the Class Interface\ngy 5\n[\ne 7\nI O of - ) {8 56T ) E T (13 4\n]\n10\n11\n12\nN\n@ 08 musicdesign_challange.specrb U @\nspec > @ 0&_music_design_challenge_spec.tb\nO\n@\nﬁ} |\n"
  },
  {
    "seconds": 5,
    "text": "(-N N 06_music_design.md — Skill_Challenges =N g\n@ s o [ RE] oo @ B 5 4\n¥ 06 music_design.md .\n0 1 1. Describe the Problem ~ 0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n2\nZ& 3\n& 4 2, Design the Class Interface\n5\nBg!\ns N\ne 7\n8 3. Create Examples as Tests\n]\n10\n11\n12\n@ 06.musicdesign_challinge.specib U @\nspec > @ 06_music_design_challange_spec.tb\nO\n@\n{3} |\n"
  },
  {
    "seconds": 6,
    "text": "- N J 06_music_design.md — Skill_Challenges =N g\n(G *omesesanndy o | 8 Obmisc sy chalengess U UED - o Bon +v 8 ¥ x\n& 08_music_designmd .\np 1 1. Describe the Problem 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n2\nx‘ 3\n& 4 2, Design the Class Interface\nas 5\n[\ne 7\nI T of ) (0 ST T TR (13 4\n]\n10\n11\n12\n@ 06.music design_challnge.specib U &\nspec > @ 06_music_design_challange_spec.tb\n.|\n@\n‘3} |\n"
  },
  {
    "seconds": 7,
    "text": "- N J 06_music_design.md — Skill_Challenges =N g\n(G *omesesanndy o | 8 Obmisc sy chalengess U UED - o Bon +v 8 ¥ x\n& 08_music_designmd .\np 1 1. Describe the Problem 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n2\nx‘ 3\n& 4 2, Design the Class Interface\nas 5\n[\ne 7\nI T of ) (0 ST T TR (13 4\n]\n10\n11\n12\n@ 06.music design_challnge.specib U &\nspec > @ 06_music_design_challange_spec.tb\n.|\n@\n‘3} |\n"
  },
  {
    "seconds": 8,
    "text": "- N J 06_music_design.md — Skill_Challenges =N g\n(G *omesesanndy o | 8 Obmisc sy chalengess U UED - o Bon +v 8 ¥ x\n& 08_music_designmd .\np 1 1. Describe the Problem 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n2\nx‘ 3\n& 4 2, Design the Class Interface\nas 5\n[\ne 7\nI T of ) (0 ST T TR (13 4\n]\n10\n11\n12\n@ 06.music design_challnge.specib U &\nspec > @ 06_music_design_challange_spec.tb\n.|\n@\n‘3} |\n"
  },
  {
    "seconds": 9,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\no s | i seo- o ot\n¥ 08_music_design,md\nJel 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| :\n% 2 As a user\n3 So that I can keep track of my music listerling\n& 4 I want to add tracks I‘ve listened to.and see a list of them.\na9 5\n6\ne 7 2. Design the Class Interface\n8\n9\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 10,
    "text": "(Y X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\nG % x |4 it seo- o ot\n¥ 08_music_design,md\nJel 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I‘ve listened to.and see a list of them.\na9 -3\n6\ne 7 2. Design the Class Interface\n8\n9\n10\n11 3. Create Examples as Tests ][\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 11,
    "text": "(Y X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% ool_mslul--'smwx wEm- 8 =R\n¥ 08_music_design,md\nJel 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\nG |\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 12,
    "text": "(Y X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% ool_mslul--'smwx wEm- 8 =R\n# 06_music_design.md .\nJel 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\nG |\n6\ne 7 2. Design the Class Iﬂterface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 13,
    "text": "(Y X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\nG % x |4 it seo- B o teo s\n¥ 08_music_design,md\nJel 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| :\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\nG |\n6\ne 7 2. Design the Class Ipterface\n8\n9\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 14,
    "text": "(Y X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% ool_mskul--'smwx wEm - 8 Boh ++ B ¥\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\na9 5\n6\ne 7 2. Design the Class Ipterface\n8\n9\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06.music design_challnge.specib U &\nspec > @ 0&_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 15,
    "text": "(Y X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * oumsksinnas X @ O om0 soo- 8 Hen 25 8 x\n¥ 08_music_design,md\nJel 1 1. Describe the Problem 2 03winpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ :\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\na9 5\n6\ne 7 2. Design the Class Ipterface\n-]\n9\n10\n11 3. Create Examples as Tests\n12\nk]\n14\n15\n@ 06.music design_challnge.specib U &\nspec > @ 0&_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 16,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ oumksinnas o @ G soo- 8 Hen 25 8 x\n¥ 08_music_design,md\nJel 1 1. Describe the Problem 2 03winpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ :\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n]\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06.music design_challnge.specib U &\nspec > @ 0&_music_design_challenge_spec.tb\n- |\n@\n&\n"
  },
  {
    "seconds": 17,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ oumksinnas o @ G soo- 8 Hen 25 8 x\n¥ 08_music_design,md\nJel 1 1. Describe the Problem 2 03winpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ :\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06.music design_challnge.specib U &\nspec > @ 0&_music_design_challenge_spec.tb\n- |\n@\n&\n"
  },
  {
    "seconds": 18,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 19,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 20,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 21,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 22,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 23,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 24,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 25,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 26,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 27,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8\n]\n10\n11 3. Create Examples as Tests\n12\n13\n14\n15\n@ 06 music.design_challange.specrb U\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 28,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 06_music_design.md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_mwsic design_challinge._specrb U @\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 29,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 06_music_design.md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_mwsic design_challinge._specrb U @\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 30,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne AT 5 T R T BT 4 g T\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_mwsic design_challinge._specrb U @\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 31,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_mwsic design_challinge._specrb U @\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 32,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n% # 08 misk_desgnnd v & | @ 08 music_sesgn.challengesb U vEem- 8 Blor +v B ¥ x\n¥ 08_music_design,md\n0 1 1. Describe the Problem  0SwinpintogMASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ne )\n6\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_mwsic design_challinge._specrb U @\nspec > @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 33,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n@ ¥ ki monnas » |8 s weo- 8 L\n¥ 06.music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\n% 2 As a user\nT ATl T T R A T O I TTES TR ST TR ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n6\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n[\n&\n"
  },
  {
    "seconds": 34,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n§ % oertmnney o 4o i sco- ® N\n¥ 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nT Tl T YT R A T O I TTES TR ST TR ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n(3\n% 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_nwsic_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 35,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nh 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngs 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\nbk\n14\n15\n16\n@ 06_msic_design_challenge_spec.b U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 36,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nIR Tl T T R A T A I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_msic_design_challenge_spec.b U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 37,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 38,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 39,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 40,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 41,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 42,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n% 06_music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 43,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 44,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 45,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_music_design_challenge_specb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 46,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n]\n10\n11\n12 3. Create Examples as Tests\n13\n14\n15\n16\n@ 06_mwsic_design_challenge_spec.rb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 47,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=gn Ji\n§ % oertmnney o 4o it wea- @ Do+ 58 5\n% 06_music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\nIR Tl T T R A T A I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11\n12\n13 3. Create Examples as Tests\n14\n15\n16\n12\n@ 06_mwsic_design_challenge_spec.rb U @\nspec > @ 08_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 48,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=gn Ji\nL IPP TSP o B B8 8 x\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 g R\n11\n12\n13\n14 3. Create Examples as Tests\n15\n16\n12\n168\n@ 06_wsic_design_challange_spec.rb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 49,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn g\n%ot o 8 o iy o B B8 8 x\n& 06_music_design.md .\nJ) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 R\n11\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n168\n@ 06_mwsic_design_challenge_spec.rb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 50,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn g\n%ot o 8 o iy o B B8 8 x\n& 06_music_design.md .\nJ) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 R\n11\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n168\n@ 06_mwsic_design_challenge_spec.rb U @\nspec) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 51,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=gn Ji\n§ % oertmnney o 4o it sco- @ N\n® 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10\n11\n12\n13\nb S T of Y1 W STET TR -1 £\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\nspec > @ 08_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 52,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\n§ % oertmnney o 4o it sco- @ N\n% 06_music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10\n11\n12\n13\nB0 S T of =) () SE T ) C T (3 £\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n- |\n®\n&\n"
  },
  {
    "seconds": 53,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\n§ % oertmnney o 4o it sco- @ N\n% 06_music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10\n11\n12\n13\nB0 S T of =) () SE T ) C T (3 £\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n- |\n®\n&\n"
  },
  {
    "seconds": 54,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\nL IPP TSP o B B8 8 x\n® 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n190\n11\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 55,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=Nn g\n%ot o 8 o iy sco- @ N\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n190\n11\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_mwsic_design_challenge_spec.rb U @\nspec) @ 08 music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 56,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=Nn g\n%ot o 8 o iy sco- @ N\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n190\n11\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_mwsic_design_challenge_spec.rb U @\nspec) @ 08 music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 57,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nLR T sco- @ N\n% 06_music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n190\n11\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 58,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\no 5 i o B B8 8 x\n% 06_music_design.md\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\ni 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n190\n11\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n.|\n®\nB\n"
  },
  {
    "seconds": 59,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\no 5 i o B B8 8 x\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n1 end\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 60,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\no 5 i o B B8 8 x\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11| end\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 61,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\no 5 i o B B8 8 x\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\nR Tl T T R A T O I TTES TR ST T ]\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\n5p6C) @ 08 music_design_chalengs_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 62,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn g\nQ@ *omemnesy o | i o B B8 8 x\n& 06_music_design.md .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end\n12\n13\nB0 S T of -1 {1 S ET 1) C T (1 4\n15\n16\n17\n18\n@ 06_wsic_design_challange_spec.rb U @\nspec) @ 08 music_design_challenge_spec.rb\n.|\n®\nB\n"
  },
  {
    "seconds": 63,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n] def initalize\n10\n11 [0\n12\n13\nJU I P of /Y W ST T 1 £\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 64,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 65,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ Oomesesnndy & @ 06 mskc s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > EI ¥ :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 66,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ Oomesesnndy & @ 06 mskc s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > EI ¥ :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 67,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 mskc s cholergesty weo- @ Do+~ B & x\nJel * mﬁ”’a:; cE:\"ibe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n\n[3\n2 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 def initalize\n\n10\n\n11 [0\n\n12\n\n13\n\n14 3. Create Examples as Tests\n\n15\n\n16\n\n17\n\n18\n\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n\n.|\n®\n&\n"
  },
  {
    "seconds": 68,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 mskc s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > EI ¥ :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 69,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 mskc s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > EI ¥ :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 70,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmuo weo - @ BDen +- B & x\nJel * 1 1. n:;f:.';::' the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n\n[3\n2 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 def initalize\n\n10\n\n11 [0\n\n12\n\n13\n\n14 3. Create Examples as Tests\n\n15\n\n16\n\n17\n\n18\n\n@ 06_misic_design_challenge_spec.b U @\nspec ) @ 0&_music_design_challenge_spec.rb\n\n.|\n®\n&\n"
  },
  {
    "seconds": 71,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmuo weo - @ BDen +- B & x\nJel * 1 1. n:;f:.';::' the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n\n[3\n2 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 def initalize\n\n10\n\n11 [0\n\n12\n\n13\n\n14 3. Create Examples as Tests\n\n15\n\n16\n\n17\n\n18\n\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n\n.|\n®\n&\n"
  },
  {
    "seconds": 72,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores rack :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 73,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores rack :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 74,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores rack :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 75,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores rack :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 76,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores tracks. :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 77,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores tracks. :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 78,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\nJel * mﬁ”’a:; cE:\"i‘::'mh;mblel © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n\n[3\n2 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 def initalize\n\n10\n\n11 [0\n\n12\n\n13\n\n14 3. Create Examples as Tests\n\n15\n\n16\n\n17\n\n18\n\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n\n.|\n®\n&\n"
  },
  {
    "seconds": 79,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmuo weo - @ BDen +- B & x\nJel * 1 1. D:;S:'Y::'mh;mblel © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n\n[3\n2 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 def initalize\n\n10\n\n11 [0\n\n12\n\n13\n\n14 3. Create Examples as Tests\n\n15\n\n16\n\n17\n\n18\n\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n\n.|\n®\n&\n"
  },
  {
    "seconds": 80,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores racks in an :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 81,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores racks in an .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 82,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores racks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 83,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay & @ 06 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 ¥ stores racks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 84,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmux weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores racks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 85,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmux weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores racks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 end B\n12 IE\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 86,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmux weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores racks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 (0]\n12 b\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 87,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmux weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores racks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 def initalize\n10\n11 (0]\n12 i\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\npec) @ 08_music_design_challenge_spec.r\n.|\n®\n&\n"
  },
  {
    "seconds": 88,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(G * Oomesdesnnd U X | @ 08 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores tracks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 stores tracks in an array\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_spec.rb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 89,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(G * Oomesdesnnd U X | @ 08 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores tracks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 stores tracks in an array\n11 [0\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_spec.rb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 90,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(G * Oomesdesnnd U X | @ 08 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores tracks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 [L0]\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_spec.rb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 91,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n(G * Oomesdesnnd U X | @ 08 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores tracks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_spec.rb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 92,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n(G * Oomesdesnnd U X | @ 08 msic s cholergesty weo- @ Do+~ B & x\n¥ 06_music_design.md > (5 # stores tracks in an aray .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ns 5\n[3\n2 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_spec.rb U @\nspec ) @ 0&_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 93,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\nG ¥ oo smnes x |4 i | nen- o D to5 8 x\n¥ 06_music_design.md > (=) # stores tracks in an amey .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_spec.srb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n@\n&\n"
  },
  {
    "seconds": 94,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n¥ s ¢ [ G e we0- o Do o5 8 %\n¥ 06_music_design.md > (=) # stores tracks in an amey\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 95,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\nG ¥ oo smnes x |4 i | nen- o D to5 8 x\n¥ 06_music_design.md > (=) # stores tracks in an amey .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 [0\n12\n13 IE\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 96,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\nG ¥ oo smnas o |4 i | wea- @ D to5 8 x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 [0\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 97,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n[ * s o o e we0- o Do o5 8 %\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 98,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n[ * s o o e we0- o Do o5 8 %\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 99,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 100,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 101,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 102,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 103,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 104,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 105,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12\n13\n14 3. Create Examples as Tests\n15\n16\n17\n18\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 106,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n¥ cemsnnsy o | o | we0- o I\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 | end\n12 def add(track}\n13\nL I,\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 107,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n¥ cemsnnsy o | o | we0- o I\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12 def add(track}\n13\n14\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_spec.srb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 108,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n(@ ¥ cmesesonnd v o |8 08l desn shalenget v | neo- @ Doa +- 8 & x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 jef add(tracl\n13\n14 IEend\n15\nP P of ) (- S € T ) R R (5\n17\n18\n19\nb}\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 109,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n¥ cemsnnsy o | o | we0- o I\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12 def add(track}\n13\n14 end\n15\nP P of ) (- S € T ) R R (5\n17\n18\n19\nb}\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 110,
    "text": "- X N skill_Challenges Ing=Nn R\n@ *cemesmnnsy o |4 Ot - = D+ 88 x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ng° 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12 def add(track}\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_mwsic_design_challenge_spec.rb U & .\npec ) @ 08 music_design_challenge_spec.b\n1\n®\n&\n"
  },
  {
    "seconds": 111,
    "text": "- X N skill_Challenges Ing=Nn R\n@ *cemesmnnsy o |4 Ot - = D+ 88 x\n¥ 06_music_design.md > (5) # stores tracks in an amey .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ng° 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 end\n12 def add(track}\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_mwsic_design_challenge_spec.rb U & .\npec ) @ 08 music_design_challenge_spec.b\n1\n®\n&\n"
  },
  {
    "seconds": 112,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nG ¥ miesmonna o |8 W | sea- @ L\n¥ 06_music_design.md > (5) # stores tracks in an amey .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 ' end\n12 def add(track}\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_mwsic_design_challenge_spec.rb U & .\nspec > @ 08_music_design_challenge_spec.tb\n1\n®\n&\n"
  },
  {
    "seconds": 113,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 oo @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 | end\n12 def add(track}\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_mwsic_design_challenge_spec.rb U & kx\nspec > @ 08_music_design_challenge_spec.tb\n.|\n®\n&\n"
  },
  {
    "seconds": 114,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 ‘ end\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests IE\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rb\n.|\n@\n&\n"
  },
  {
    "seconds": 115,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_chalenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 116,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E) ¥\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_chalenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 117,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E) ¥\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 118,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 119,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 120,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add(track)\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 121,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 ‘ end\n12 | def add(track}\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 122,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\n[ ¥ Oomesesunndy ¢ @ 08 msic s chalergest 0 v - @ Do+ B & x\n¥ 06_music_design.md > E ¥ .\nJo) 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[3\ne 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 ‘ end\n12 | def add(track}\n13\n14 end\n15\n16 3. Create Examples as Tests\n17\n18\n19\n20\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 123,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-ou-uu-wmu. nEo- B Do +- B & x\n0 * \"\"1\"' “1'_' 'n':s’ 5,'1“ the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\nk 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n\n[\n? 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 | def initalize\n\n10 # stores tracks in an array\n\n11 end\n\n12 def add{track}\n\n13\n\n14 end\n\n15\n\n16 3. Create Examples as Tests\n\n17\n\n18\n\n19\n\n20\n\n@ 06_music_design_challenge_specsb U @\nSpec) @ 06_music_design_challenge_spec.id\n\n. |\n@\n&\n"
  },
  {
    "seconds": 124,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-wmut weo- @ Do+~ B & x\n0 * \"\"1“' “1'_' 'n':s’ 5,'1“ the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\nk 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n\n[\n? 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 |  def initalize\n\n10 # stores tracks in an array\n\n11 end\n\n12 def add{track}\n\n13\n\n14 end\n\n15\n\n16 3. Create Examples as Tests\n\n17\n\n18\n\n19\n\n20\n\n# 06_music_design_challenge._specsb U &\nS00c) @ 06_music_design_challenge_spec.d\n\n. |\n@\n&\n"
  },
  {
    "seconds": 125,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-on.m-‘u-hw“’ weo- o Bon -8 & x\no * °\"1\"\"‘1'_\"n‘:s’5_\"1';:':::;bl - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nk 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n\n[\n? 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 |  def initalize\n\n10 # stores tracks in an array\n\n11 end\n\n12 def add{track}\n\n13\n\n14 0]\n\n15\n\nP P of ) o S 6 1) R TR (5\n\n17\n\n18\n\n19\n\n20\n\n@ 06_muskc_design_challenge_specrb U\nspec ) @ 06_music_design_challenge_spec.ib\n\n. |\n@\n&\n"
  },
  {
    "seconds": 126,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\nQ ot » [ aco- @ e\no * °\"1\"\"‘1'_\"n‘:s’5_\"1';:':::;bl - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nk 2 As a user\n\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n\n[\n? 7 2. Design the Class Interface\n\n8 class MusicTracker\n\n9 |  def initalize\n\n10 # stores tracks in an array\n\n11 end\n\n12 def add{track}\n\n13\n\n14 0]\n\n15\n\n16 3. Create Examples as Tests\n\n17\n\n18\n\n19\n\n20\n\n@ 06_music_design_challenge_specrb U @\nspoc > @ 08_music_desion._chaeng_ipac.b\n\n. |\n@\n&\n"
  },
  {
    "seconds": 127,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-ou-uu-wmu. nEo- B Bwn +- B & x\n¥ 06_music_design.md > (5 # adcs the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 128,
    "text": "LY X 06_music_design.md — Skill_Challenges =gy Ji\ng-ou-uu-wmu. nEo- B Bwn +- B & x\n¥ 0B_music_design.md > (5 ¥ adcs the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 129,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 130,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 131,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 132,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 133,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 134,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (hw arce .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 135,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (he arcay .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 136,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ * i smnnas » 8 G s weo- ® N LE\n¥ 06_music_design.md > (5 ¥ adds the tracks 10 (he arcay .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 137,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ@ *mismnnas » 8 G s weo- ® N LE\n¥ 0B_music_design.md > (5 ¥ adds the tracks 10 (he arcay &8 .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 138,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-.-u-umu. nEo- B Do+~ B & x\n¥ 0B_music_design.md > (5 ¥ adds the tracks 10 (he arcay &8\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_rmisic_design_challenge_spec.ib U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 139,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-.-u-umu. nEo- B Do+~ B & x\n¥ 0B_music_design.md > (5 ¥ adds the tracks 10 (he arcay &8\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_rmisic_design_challenge_spec.ib U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 140,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Sicay &9 STHings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 141,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Sicay &9 STHings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 142,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 143,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n[} 15\nb PO of ) (W S €T T R T 1 £\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 144,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15 IE\nb PO of ) (W S €T T R T 1\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 145,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15 X\nb PO of ) (W ST T R T 1\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 146,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track)\n13\n14 end\n15\nb PO of ) (W ST T R T 1\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 147,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12 def add{track}\n13\n14 end\n15 I[\nb PO of ) (W S €T T R T 1\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 148,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-m.:-uu-h\"\"“‘\" neo- @ Don +~ B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n1 ‘ end\n12 def add{track}\n13 # adds the tracks to the array as strings\nW [ ed\n15\nb PO of ) (W S €T T R T 1\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n@\n&\n"
  },
  {
    "seconds": 149,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-m.:-uu-h\"\"“‘\" neo- @ Don +~ B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n11 ‘ end\n12 def add{track}\n13 # adds the tracks to the array as strings\n@ [ oed\n15\nb PO of ) (W ST T R T 1\n17\n18\n19\n20\n#.06_music_design_challenge_specsb U @\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n@\n&\n"
  },
  {
    "seconds": 150,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-m.:-uu-h\"\"“‘\" neo- @ Don +~ B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Srcay &8 strings .\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 |  def initalize\n10 # stores tracks in an array\n-\n12 def add{track}\n13 # adds the tracks to the array as strings\nT\n15\nb PO of ) (W ST T R T 1\n17\n18\n19\n20\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n@\n&\n"
  },
  {
    "seconds": 151,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmu. neo - @ BDen +- B & x\n¥ 06_music_design.md > (5 # stores tracks in an amay :\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end .\n12\n13 def add(track)\n14 # adds the tracks ? the array as strings\n15 | end\n16\nA PO of ) W ST T R T 1\n18\n19\n20\n21\n# 06_music_design_challenge_spec.rb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 152,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmu. neo - @ BDen +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Sicay &5 strings :\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 | end -\n12 .\n13 | def add(track)\n14 # adds the tracks to the array as strings\n15 end\n16\n17\n18 3. Create Examples as Tests\n19\n20\n21\n22\n# 06_music_design_challenge_spec.rb U &\n4pec ) @ 06_music_design_challenge_spec.i\n. |\n®\n&\n"
  },
  {
    "seconds": 153,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn R\ng-ou-uu-wmu. neo - @ BDen +- B & x\n¥ 06_music_design.md > (5 # adds the tracks 10 (hw Sicay &5 strings :\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nE 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n1 | end N\n12 | p— —\n13 | def add(track)\n14 # adds the tracks to the array as strings\n15 end\n16\n17\nT PO of C) S SE T R (5\n19\n20\n21\n22\n# 06_rmisic_design_challenge_spec.ib U @\n4pec ) @ 06_music_design_challenge_spec.i\n. |\n®\n&\n"
  },
  {
    "seconds": 154,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\nG * s o G we0- o I\n¥ 06_music_design.md > (5] # acics the tracks 10 the Srcxy &5 strings .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 end\n16\n17\n18\nb T TR of /Y0 L 6T 1) (T (T 8\n20\nP23\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.>\n- |\n®\n&\n"
  },
  {
    "seconds": 155,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn Rt\nG * s o G we0- o I\n¥ 06_music_design.md > (5] ¥ acids the tracks 10 (he Srcxy 5 strings .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 end\n16\n17\n18\n19 3. Create Examples as Tests\n20\n21\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n- |\n®\n&\n"
  },
  {
    "seconds": 156,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn Rt\nG * s o G we0- o I\n¥ 06_music_design.md > (5] ¥ acids the tracks 10 (he Srcxy 5 strings .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 (0]\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18\n19\n20 3. Create Examples as Tests\n21\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n- |\n®\n&\n"
  },
  {
    "seconds": 157,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn R\n¥y & 8 bt neo- @ NLE\n¥ 06_music_design.md > (5] # acids the tracks 10 (hw Srcxy 5 strings .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19\n20\n21 3. Create Examples as Tests\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 158,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn R\nG * s o G we0- o I\n¥ 06_music_design.md > (5] ¥ acdids the tracks 10 (he Srcxy 5 Strings .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 [ [5 R B T3\n18\n19 end\n20\nP2 S P ol -1 I S 6T T R T (1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 159,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn R\nG * s o G we0- o I\n¥ 06_music_design.md > (5] ¥ acdids the tracks 10 (he Srcxy 5 Strings .\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 [ [5 R B T3\n18\n19 end\n20\nP2 S P ol -1 I S 6T T R T (1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 160,
    "text": "oee Skill_Challenges oDemlos\n(@ ®mesmnnst o 8 Gt et - m Do 45 8 x\n¥ 06_music_design.md > (5] ¥ acdids the tracks 10 (he Srcxy 5 Strings .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 [ [ R B T3\n18\n19 end\n20\nP2 S P ol -1 S €T T - N (1 £\n22\n@ 06_mwsic_design_challenge_spec.rb U @ \"\nspec > @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 161,
    "text": "oee Skill_Challenges oDemlos\n(@ ®mesmnnst o 8 Gt et - m Do 45 8 x\n¥ 06_music_design.md > (5] ¥ acdids the tracks 10 (he Srcxy 5 Strings .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 [ [ R B T3\n18\n19 end\n20\nP2 S P ol -1 S €T T - N (1 £\n22\n@ 06_mwsic_design_challenge_spec.rb U @ \"\nspec > @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 162,
    "text": "cee 06_music_design.md — Skill_Challenges In=Nn Rl\n@ *Omsmsmnnd ¢ |8 G| veo- @ D 48 4 x\n¥ 06_music_design.md > (5] ¥ acdids the tracks 10 (he Srcxy 5 Strings .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -1 3 5 €1 T ) T T 1 £\n22\n@ 06_mwsic_design_challenge_spec.rb U @ *\nspec > @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 163,
    "text": "cee 06_music_design.md — Skill_Challenges In=Nn Rl\n@ *Omsmsmnnd ¢ |8 G| veo- @ D 48 4 x\n¥ 06_music_design.md > (5] ¥ acdids the tracks 10 (he Srcxy 5 Strings .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_mwsic_design_challenge_spec.rb U @ il\nspec > @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 164,
    "text": "cee 06_music_design.md — Skill_Challenges In=Nn Rl\n(g ¥ ook smirands @ e e s L LR Do+ 8 8 x\n¥ 06_music_design.md > E)# :\nfel 1 1. Describe the Problem o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker .\n9 | def initalize i\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_mwsic_design_challenge_spec.rb U @ kx\nspec > @ 06_music_design_challenge_spec.rb\n.. |\n®\n&\n"
  },
  {
    "seconds": 165,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\nQ¢ ey o [ soa- © Do+ 8 4 x\n¥ 06_music_design.md > E)# :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 166,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\nQ¢ ey o [ soa- © Do+ 8 4 x\n¥ 06_music_design.md > E)# :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 167,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\nQ¢ ey o [ soa- © Do+ 8 4 x\n¥ 06_music_design.md > E)# :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 168,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\nQ¢ ey o [ soa- © Do+ 8 4 x\n¥ 06_music_design.md > E)# :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 169,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\nQ¢ ey o [ soa- © Do+ 8 4 x\n¥ 06_music_design.md > E)# :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 (0]\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 170,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\nQ¢ ey o [ soa- © Do+ 8 4 x\n¥ 06_music_design.md > E)# :\nJel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 171,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ ¥ ourmsesmionns o |8 Gk | veo- @ O 45 4 x\n¥ 06_music_design.md > E)# :\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 172,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ ¥ ourmsesmionns o |8 Gk | veo- @ O 45 4 x\n¥ 06_music_design.md > E)# :\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 173,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng.ou-.-u-umu. wEo- 8 Don ++ B § x\n¥ 06_music_design.md > (5 ¥ returns list of :\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 174,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng.ou-.-u-umu. wEo- 8 Don ++ B § x\n¥ 06_music_design.md > (5 ¥ returns list of :\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 175,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng.ou-.-u-umu. wEo- 8 Don ++ B § x\n¥ 06_music_design.md > (5 ¥ returns list of :\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 176,
    "text": "X X 06_music_design.md — Skill_Challenges DEm]os\nlg.ou-n-h.d-hmu. weo - @ BDen +- B & x\n¥ 06_music_design.md > (5 ¥ returns list of &8 music tracks :\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 177,
    "text": "X X 06_music_design.md — Skill_Challenges DEm]os\nlg.ou-n-h.d-hmu. weo - @ BDen +- B & x\n¥ 06_music_design.md > (5 ¥ returns list of o8 music tracks added :\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 178,
    "text": "X X 06_music_design.md — Skill_Challenges DEm]os\nlg.ou-n-h.d-hmu. weo - @ BDen +- B & x\n¥ 06_music_design.md > (5 ¥ returns list of o8 music tracks added :\n0 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 179,
    "text": "X X 06_music_design.md — Skill_Challenges DEm]os\n(3 messannso o | @ e st veo- o Do+ 8 8 x\n¥ 0B_music_design.md > (5 ¥ returns list of &8 music tracks added | .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 180,
    "text": "X X 06_music_design.md — Skill_Challenges DEm]os\n(3 messannso o | @ e st veo- o Do+ 8 8 x\n¥ 0B_music_design.md > (5 ¥ returns list of &8 music tracks added | .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 181,
    "text": "X X 06_music_design.md — Skill_Challenges DEm]os\n(3 rmesannso o | @ e st veo- o Do+ 8 8 x\n¥ 0B_music_design.md > (5 ¥ returns list of o8 music tracks added Yo amay .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 def list\n18\n19 end\n20\nP2 S P of -} I 5 €1 T TR TR 1 £\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 182,
    "text": "(X X 06_music_design.md — Skill_Challenges DEm]os\n[ ¥ oo smana X @ e s e veo- o Do+ 8 8 x\n¥ 06_music_design.md > (5 ¥ returns list of &8 music tracks added Yo amay .\nfel 1-1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 - 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 -# stores tracks in an array\n11 end\n12\n13 def add(track)\n14 - # adds the tracks to the array as strings\n15 0]\n16\n17 [ [ SRS L1\n18\n19 end\n20\n21 - 3. Create Examples as Tests\n22 X\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 183,
    "text": "(X X 06_music_design.md — Skill_Challenges DEm]os\n[ ¥ oo smana X @ e s e veo- o Do+ 8 8 x\n¥ 06_music_design.md > (5 ¥ returns list of &8 music tracks added Yo amay .\nfel 1 1. Describe the Problem © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them,\ngo 5\n[3\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 0]\n16\n17 [ [ SRS L1\n18\n19 end\n20 I\n21 - 3. Create Examples as Tests\n22\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 184,
    "text": "o000 06_music_design.md — Skill_Challenges DEmlos\nQ.ou-n-u-hmux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 ¥ returns list of S8 music tracks. added 10.array .\npel 1 1. Describe the Problem  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 end\n17 def list\n18 —\n19 end\n20 b\n21 3. Create Examples as Tests\n22\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_chalienge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 185,
    "text": "o000 06_music_design.md — Skill_Challenges DEmlos\nQ.ou-n-u-hmux nEo- B Do +- B & x\n¥ 06_music_design.md > (5 ¥ returns list of S8 music tracks. added 10.array :\npel 1 1. Describe the Problem  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 2 As a user\n3 So that I can keep track of my music listening\n& 4 I want to add tracks I've listened to and see a list of them.\ng° 5\n[\n? 7 2. Design the Class Interface\n8 class MusicTracker\n9 | def initalize\n10 # stores tracks in an array\n11 end\n12\n13 def add(track)\n14 # adds the tracks to the array as strings\n15 end\n17 def list\n18 —\n19 (0]\n20 b4\n2 S P of -1 8 S €1 T T T 113 £\n22\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_chalenge_spec.r>\n- |\n®\n&\n"
  },
  {
    "seconds": 186,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-w-uu-h\"\"“'\" uEo- 8/ Do +- B & x\n0 e ass ﬁn’s\"ﬁ'ﬂ\"s’éﬁ@?‘\"‘”‘\"‘”\"‘ © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| ’\n9 |  def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\nB 13 def add(track)\n% 14 # adds the tracks to the array as strings\n15 end -\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 end\nPl\nP S P of -} (-l 5 €1 [ R TR (3 £\n22\n23\n2 b\n25\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n@\n&\n"
  },
  {
    "seconds": 187,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-w-uu-h\"\"“'\" uEo- 8/ Do +- B & x\no TN e o1 s e Vags b s v © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 |  def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\nB 13 def add(track)\n% 14 # adds the tracks to the array as strings\n15 end )\ni ‘\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\nPl .\n21 3. Create Examples as Test: L\n22\n23\nb2\n25\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.r>\n. |\n@\n&\n"
  },
  {
    "seconds": 188,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ-w-uu-h\"\"“'\" uEo- 8/ Do +- B & x\n0 S LBy MUSIC racKar e e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\ni 11 ‘ end\n12\ni 13 def add(track)\n% 14 # adds the tracks to the array as strings\n15 [0 ]\nv ‘\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20 .\n22\npx)\nP23\npi)\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.\n.|\n(@)\n&\n"
  },
  {
    "seconds": 189,
    "text": "(X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-w-uu-h\"\"“'\" uEo- 8/ Do +- B & x\n¥ 06_music_design.md > (5] # returns list of &l music tracks added 1o sy N\n0 8 CLass MuslCiracker © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\ni 11 ‘ end\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 [0 ]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20 .\n21 3, Create Examples as L\n22\n23\n24\npA)\n@ 06_music_design_challange_specrb U @\nspec ) @ 06_music_design_challenge_spec.\n.|\n(@)\n&\n"
  },
  {
    "seconds": 190,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmux weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\n0 ¥ CLasS MUSLCIracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21\n22\npxi\np2\n25\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 191,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmux weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21\n22\npxi\np2\n25\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n(@)\n&\n"
  },
  {
    "seconds": 192,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmux weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21\n22\npxi\np2\n25\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n(@)\n&\n"
  },
  {
    "seconds": 193,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmux weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21\n22\npxi\np2\n25\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n(@)\n&\n"
  },
  {
    "seconds": 194,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmux weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21\n22\npxi\np2\n25\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n(@)\n&\n"
  },
  {
    "seconds": 195,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmut weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\npxi\np2\n25\npid\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n®\n&\n"
  },
  {
    "seconds": 196,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmut weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\npxi\np2\n25\npid\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n®\n&\n"
  },
  {
    "seconds": 197,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmut weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\nb B T of ) (- T 1) - R (5 £\npri\npxi\np2\n25\n26\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n®\n&\n"
  },
  {
    "seconds": 198,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmut weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\nb B T of ) (- T 1) - R (5 £\npri\npxi\np2\n25\n26\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n®\n&\n"
  },
  {
    "seconds": 199,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=Nn R\ng-w-uu-wmut weo- @ Don ++ B & x\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\nfel % CLasS MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\npri\n23—\np2\n25\n26\npird\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 200,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n@ ¥k mnna o 8 i s wso- @ Do 5 8 %\n¥ 0B_music_design.md > (5] # returns list of all music tracks added 10 aey .\n0 ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nA B T of /) (W ST R 0\n22\ney /|\n24\npis)\n26\npird\n@ 06_mwsic_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 201,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ ¥ ke o 8 G wso- @ Do 5 8 %\n¥ 06_music_design.md > I ¥ :\n0 ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\ne\n24\npis)\n26\n27\n@ 06_mwsic_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.r>\n- |\n@\n&\n"
  },
  {
    "seconds": 202,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(¥ Oomesesnndy ¢ @ 08 msic desn cholergesty weo- @ Do+~ B & x\n'mm>mlnwmlln«ammlrmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\nI D\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 203,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(¥ Oomesesnndy ¢ @ 08 msic desn cholergesty weo- @ Do+~ B & x\n'mm>mlnwmlln«ammlrmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\npri\n2z @A\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 204,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnndy ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'ouwmm>®'mmunu-mumumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n2 FEEIIISISISSISSSSSISISSSSShShhhhhhhhh\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 205,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mm>mtmllnu-mlrmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 )=,\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 206,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mm>mtmllnu-mlrmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 @)=\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 207,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 E =\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 208,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 E e,\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 209,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 smymsy\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 210,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 #) mesictrad\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 211,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker<\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 212,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker<\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 213,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn R\n(@ ¥ Oomesesnnay ¢ @ 08 msic s cholergesty weo- @ Do+~ B & x\n'mu>mnmund-mmmumnm .\nfel ¥ CLasS MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\ni 11 ‘ end\n12\n& 13 def add(track)\n2 14 # adds the tracks to the array as strings\n15 [0\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker <\np2\n25\n26\n27\n@ 06_music_design_challange_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 214,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-w-uu-v\"\"“\" neo- = Don +~ B & x\n¥ 08 music_design.md >Elrlwmlll\"fﬂlmliellm.mb“ .\np T (VR R R - To g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\nS 11 end\n12\nB 13 | def add(track)\nVg 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP3O T of 53 -0 ST T R T 115 8\n22\n23 #1) music_tracker 5\n24\n25\n26\n27\n@ 06_music_design_challenge.specrb U\nspec > @ 06_music_design_chalienge_spec.m\n.|\n®\n&\n"
  },
  {
    "seconds": 215,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-w-uu-v\"\"“\" neo- = Don +~ B & x\n¥ 06 music_design.md >Elrlwmlll\"fﬂlmﬂellm.~lh“ .\np LT (VR R R - To g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\nS 11 end\n12\nB 13 | def add(track)\nVg 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker 5\n24\n25\n26\n27\n@ 06_music_design_challenge.specrb U\nspec > @ 06_music_design_chalienge_spec.m\n.|\n®\n&\n"
  },
  {
    "seconds": 216,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-w-uu-v\"\"“\" neo- = Don +~ B & x\n¥ 06 music_design.md >Elrlwmlll\"fﬂlmﬂellm.~lh“ .\np LT (VR R R - To g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\nS 11 end\n12\nB 13 | def add(track)\nVg 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) msic_tracker 5\n24\n25\n26\n27\n@ 06_music_design_challenge.specrb U\nspec > @ 06_music_design_chalienge_spec.m\n.|\n®\n&\n"
  },
  {
    "seconds": 217,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-w-uu-v\"\"“\" neo- = Don +~ B & x\n0 e MU LCI TacRar oo s tesrs © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 def initalize\nB 10 # stores tracks in an array\n> 11 ‘ end\n- 12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\nb1\n21 3, Create Examples as Tests\n22\n23 #1) msic_tracker<\n24\nVi)\n26\n27\n@ 06_music_desian_challenge_spec.ib U @\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 218,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ¥ mnna o 8 G s wso- @ Do 8 ¥ x\n¥ 0B.music_design.md > (5] # returns list of &l music tracks added 10 aray N\n0 © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\n% 10 # stores tracks in an array\nS 11 end\n12\nB 13 | def add(track)\nd 14 # adds the tracks to the array as strings\n15 (0]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) musictracker s\n24\n25\n26\n27\n@ 06_music_design_challenge_specsb U ®\nspec > @ 06_music_design_chalenge_spec.s\n.|\n®\n&\n"
  },
  {
    "seconds": 219,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ¥ mnna o 8 G s wso- @ Do 8 ¥ x\n¥ 0B.music_design.md > (5] # returns list of &l music tracks added 10 aray N\n0 © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\n% 10 # stores tracks in an array\nS 11 end\n12\nB 13 | def add(track)\nd 14 # adds the tracks to the array as strings\n15 (0]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) musictracker s\n24\n25\n26\n27\n@ 06_music_design_challenge_specsb U ®\nspec > @ 06_music_design_chalenge_spec.s\n.|\n®\n&\n"
  },
  {
    "seconds": 220,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) msic_tracker =\nb2\npi\n26\n27\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 221,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker =M\nb2\npi\n26\n27\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 222,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker =Musid\nb2\npi\n26\n27\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 223,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = Musictrd\nb2\npi\n26\n27\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 224,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker\nb2\npi\n26\n27\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 225,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.|\nb2\npi\n26\n27\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 226,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n@ |\npi\n26\n27\np1:]\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 227,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPEINE DR TS Ul 4o Tl CLE [TE Doy =T G Y\n@ |\ni\n26\n27\np1:]\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 228,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\ns - - - |\npi\n26\n27\n]\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 229,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\ng-w-uu-h\"\"“\" weo - @ Qe+ B & x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\nVg 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | owmesy\npi\n26\n27\n28\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 230,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | omsictd\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 231,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE QNN VTS Dol =T T E L (T U o Tl T T\n24 | music_tracker=\npi\n26\n27\npi:}\n@ 06_music_designchalienge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 232,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | musictracker=\npi\n26\n27\npi:}\n@ 06_music_designchalienge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 233,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE QNN VTS Dol =T L L (T U o Tl T T\n24 | musictracker=\npi\n26\n27\npi:}\n@ 06_music_designchalienge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 234,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | musictracker=\npi\n26\n27\npi:}\n@ 06_music_designchalienge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 235,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE QNN VTS Dol =Tl L L T U o Tl T T\n24 | musictracker=\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 236,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | musictracked\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 237,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE QNN VTS Dol - Tel T | (T U o Tl (T T\n24 | music_trackerd\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 238,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE DN VTS Dol - Tel T E L (1T Ul o Tl T T\n24 | music_tracker.add)\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 239,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE QNN VTS Dol - Tel L L (1T U o Tl T T\n24 | music_tracker.add)\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 240,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\n0 © CLa8ss MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPAIE QNN VTS Dol - Tel T L (1T U o Tl T T\n24 | music_tracker.add)\npi\n26\n27\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 241,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\no) 8 CLass MuSlClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPERE BB (VS Kol o o= Tl 1 TTES Doy =Tl T T\n24 | music_tracker.add(heltd)\npi\n26\ni\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 242,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\no) 8 CLass MuSlClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPERE BB (VS Kol o o= Tel 1 TTES Koy =Tl T W)\n24 | music_tracker.add(hell)\npi\n26\ni\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 243,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn Rt\n@ * e smnnss o 8 O s s noo- @ Bun 4 @ x\n¥ 06_music_design.md > (5 # returns list of all music lracks acded 1o aray .\no) 8 CLass MuSlClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 def initalize\nB 10 # stores tracks in an array\no 11 end\n12\n;) bk def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPEIE B BN (TS Kol o o= Tel (L TTES Uy = Tel T T\n24 | music_tracker.add(‘heltd)\npi\n26\ni\npi:}\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalenge_spec.s\n2|\n®\n&\n"
  },
  {
    "seconds": 244,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-oumm\"\"“\" neo- 8 Don ++ B & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nAR W I TES ol 4 Te L (TR Xl f T L Y\n24 | music_tracker.add(‘hell)\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 245,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-oumm\"\"“\" neo- 8 Don ++ B & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | music_tracker.add(‘hellh)\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 246,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-oumm\"\"“\" neo- 8 Don ++ B & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPR S WIS U 45T LR L [T T T T T\n24 | music_tracker.add(‘Hello)\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 247,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 (0]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPR A BI(TES Ui 4 - Te LR | (TES Ul f =T o =]\n2 | msictracker.add(‘hello -\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 248,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.“ﬂmmui neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nfel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 (0]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPERE A O R (TES Dol d - T LR L (TES U f =T T o =)\n24 | music_tracker.add('fello -adele)\n25\n26\n27\n]\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 249,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ol.m-ul-hmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | music_tracker.add('fello - adelen\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 250,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ol.m-ul-hmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | music_tracker.add('fello - adelen\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 251,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ol.m-ul-hmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | music_tracker.add('fello - adelen\n25\n26\n27\n28\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 252,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.olﬂmmuo neo- 8 Beos +- 8 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 (0]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\npL]\n21 3. Create Examples as Tests\n22\n23 #1) music_tracker = MusicTracker.new\n24 | music_tracker.add('Hello - adele’)\n25\n26\n27\npi:}\npi]\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n- |\n®\n&\n"
  },
  {
    "seconds": 253,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-oumm\"\"“\" neo- 8 Don ++ B & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPAREE SO RN [TT-3 Uoih {-Tel (I L [T Tl T T o T\nbz} music_tracker.add('Hello - adele’)\n25\n26\n27\npi:}\nil\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 254,
    "text": "coee 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-oumm\"\"“\" neo- 8 Don ++ B & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJel © CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPAIEE SO RN [TT-3 Dol 4= Tel (I L [TES Tl - Tel T o T )\nb music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 255,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\n24 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 256,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 257,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 258,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 259,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 260,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 261,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 262,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 263,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 264,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.nﬂmmuo neo- 8 Do ++ 5 & x\n¥ 06_music_design.md > (5 # returns list of all music tracks acded to aray .\nJo) 8 Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 |  def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB 13 def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\nPEREE QNN TS Kol J - Tl 1O R (TS Ul f=Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 265,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\na.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%ie\"r*mw'“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 LUTES Rl =T LT [ T T A T [ (A )\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 266,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\na.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%ie\"r*mw'“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 0]\n12\nB bk def add(track)\ng 14 # adds the tracks to the array as strings\n15 (0]\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 LUTES Rl T LT [ L R G R [ (A )\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 267,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey >-uEu]\"'s\"ﬂ':\"n''r'f;o:':?c'e\"'r\"‘\"'°\"\"“'\"'°\"\" © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 268,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\na.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%ie\"r*mw'“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 LUTES TR T LT T L TR G R [ (A )\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 269,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\na.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%ie\"r*mw'“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 270,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\na.ou-n-h.d-hmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%:e\"r*mm“\" © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 LUTES R T LT T L TR T [ (A )\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 271,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\na.ou-n-h.d-hmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%:e\"r*mm“\" © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 LUTES TR T LT [ L T R T, [ (A )\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 272,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%:e\"r*mw'“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 LUTES TR T LT [ L TR T [ (A )\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 273,
    "text": "X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng.mﬂmmuo neo- 8 Do ++ 5 & x\nfel ey ﬁ's'fé’?'r'&%:e\"r*mw'“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n9 | def initalize\n% 10 # stores tracks in an array\no 11 end\n12\nB bk} def add(track)\ng 14 # adds the tracks to the array as strings\n15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nP2 SR P of /) 0 5 €1 I R T (5\n22\nPEREE QBN TS Kol - Tl (O R (TS Ul fg-Tel T T2\nb2 music_tracker.add('Hello - adele')\n25\n26\n27\npi:}\ni)\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 274,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\nQ *cemesmmney o [ weo- @ B +o5 8 %\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\np LR - L [V R R y-Tol g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPN DI TES ol 4 Ted CLE | IS e f =Tl T T\n24 music_tracker.add('Hello — adele')\n25\n26\n27\np:]\n29\n@ 06_music_design.chalienge_spec.rb U ®\nspec > @ 06_music_design_challenge_spec.l\n.|\n@\n&\n"
  },
  {
    "seconds": 275,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\n@ * Mmsesennes o [ S | weo- @ B+ 5 8 x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPR 5 QI [T Ui 4= Te CTE | [TES U =Tl (T )\n24 nusic_tracker.add('Hello — adele')\n25\n26\n27\np:]\n29\n@ 06_music_design.chalienge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 276,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\nG * oumsnney o |6 | ns0- ® Do o8 ¥ x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nA DN TS Calh 4 Tel (T E | [TTES Kol f =Tl T T\n24 LUES G4 Te U [ T L R T A A\n25\n26\n27\npi:]\n29\n@ 06_music_design.chalienge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 277,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nAR AONN TE5 Colh £ Tel (T E | ITTES Kol f o= Tel T T\n24 music_tracker.add('Hello — adele')\n25\n26\n27\np2:]\npi:)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 278,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\nb2 music_tracker.add('Hello — adele')\n1 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 279,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\nb2 music_tracker.add('Hello — adele')\n1 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 280,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\nb2 LU R T LT T T A T [ U\n1 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 281,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\nb2 music_tracker.add('Hello — adele')\n1 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 282,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo nEo- B Do +- B & x\n¥ 0Bmusic_design,md > (=) # returns list of &l music tracks added 1o arey )\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nAR AONN (TE5 Uolh 4 Tel (T E | ITTES Kol f =Tl T T\nb2 music_tracker.add('Hello — adele')\nb3 —\n26\n27\ni}\npi)\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 283,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo nEo- B Do +- B & x\n¥ 0Bmusic_design,md > (=) # returns list of &l music tracks added 1o arey )\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nAR AONN (TE5 Uolh 4 Tel (T E | ITTES Kol f =Tl T T\nb2 LU T T LT LT A T [ U\nb3 —\n26\n27\ni}\npi)\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 284,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo nEo- B Do +- B & x\n¥ 0Bmusic_design,md > (=) # returns list of &l music tracks added 1o arey )\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nAR AONN (TE5 Uolh 4 Tel (T E | ITTES Kol f =Tl T T\nb2 music_tracker.add('Hello - adele')\nb3 —\n26\n27\ni}\npi)\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 285,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo nEo- B Do +- B & x\n¥ 0Bmusic_design,md > (=) # returns list of &l music tracks added 1o arey )\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nAR AONN (TE5 Uolh 4 Tel (T E | ITTES Kol f =Tl T T\nb2 music_tracker.add('Hello - adele')\nb3 —\n26\n27\ni}\npi)\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 286,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\nb2 LU R T LT LT T A T L T\n1 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 287,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\nb2 music_tracker.add('Hello — adele')\n1 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 288,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\np * %: ’-ﬁ].'s\"ﬁ'??'a‘é:e\"?\"mm\"“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\nb2 LUTES (R T LT [ T A =T Y (A\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 289,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\np * %: ’-ﬁ].'s\"ﬁ'??'a‘é:e\"?\"mm\"“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\nb2 LUTES (R T TP [ T A =T S (A\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 290,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\np * %: ’ﬁ%ﬁ??aﬁe’?’mm\"“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\n24 LTES (R =T T [ T A -t S (A\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 291,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\np * %: ’ﬁ%ﬁ??aﬁe’?’mm\"“ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\n24 LS Rl =Tl LT [ T A T L T\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 292,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\nJo) b i T g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\n24 LS Tl T LT L T A T L T\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 293,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\nJo) b i T g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\n24 LU Tl Tl LT T A T L T\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 294,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\nJo) b i T g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\nb2 LUTES R =T LT [ T A =T S (A\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 295,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\nJo) b i T g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\nb2 LUTES (R T LT [ T A =T Y (A\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 296,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\nJo) b i T g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\n24 LTS TR =T G [ T AR G Y A T3 ]\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 297,
    "text": "(X X} 06_music_design.md — Skill_Challenges Ing=Nn g\ng-ou-uu-v\"\"““ neo- @ Den ++ B & x\nJo) b i T g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE SOIN [TT-3 Dol 4= Tel (T E L [TES el f Yol T O T\n24 music_tracker.add('Hello - adele')\n25\n26\n27\ni}\npi)\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_challenge_spec.i.\n.|\n@\n&\n"
  },
  {
    "seconds": 298,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\n24 LTS TR =T G [ T A G -T2 ]\n25 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 299,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\n24 music_tracker.add('Hello - adele')\n25 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 300,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\n24 LTS TR =T CLPET [ T A G -T2 ]\n25 _\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 301,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\n24 LTS TR =T CLPET [ T A G E-Y A T2 ]\n25 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 302,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo nEo- B Do +- B & x\n¥ 0Bmusic_design,md > (=) # returns list of &l music tracks added 1o arey )\nJo) o Class MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nAR AONN (TE5 Uolh 4 Tel (T E | ITTES Kol f =Tl T T\n24 LTS TR =T CLET [ T A E Y A T3 ]\n25 _\n26\n27\ni}\npi)\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 303,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAINE DI [TT-3 Dol 4= Tel (T L [TES Ul f Tl T TP\n24 LTS TR =T CLPET [ T A E Y A T2 ]\n25 —\n26\n27\ni}\npi)\n@ 06_music_design.chalienge_spec.rb U ®\nSpec > @ 06_music_design_challenge_spec. i\n.|\n@\n&\n"
  },
  {
    "seconds": 304,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-.-u-tumuo weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPR DN TES ol £ Tel (T E | ITES Kol f =Tl TN T\nb2} music_tracker.add('Hello — adele')\n25 _\n26\n27\ni}\ni)\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 305,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng * i smonnay o [ W wea- o Do -8 4 %\n¥ 0Bmusic_design,md > (5 # returns list of all music tracks acded 1o sy .\nJo) 5 CLass MUSLClracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nIR DI (VT3 Dol 4= Tel (T L [TES el f Tl TN T\n24 music_tracker.add('Hello — adele')\n25\n26\n27\n2]\ni)\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 306,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng * ey o [ S | weo- @ B+ 5 8 x\n¥ 0B.music_design,md > (5 # returns list of all music tracks acded 1o arsy .\nJo) o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nIR DI (VT3 Dol 4= Tel (T L [TES el f Tl TN T\n24 music_tracker.add('Hello — adele')\n25 music.list => ['Hello - adele'l\n26\n27\n2]\ni)\n2\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 307,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-uu-v\"\"“\" neo- @ Den ++ B & x\n¥ 0B.music_design,md > (5 # returns list of all music tracks acded 1o arsy .\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list I[\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (S\n22\nPAIE DN TES ol £ Tel (T E L TTTS Ko =Tl T Y\n24 ‘ music_tracker.add('Hello - adele')\n25 music.list => ['Hello - adele'l\n26 B\n27 |\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 308,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-uu-v\"\"“\" neo- @ Den ++ B & x\n¥ 0B.music_design,md > (5 # returns list of all music tracks acded 1o arsy .\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n2 X\nAR DN TES Ul £ Tel (T E L TS Ko =Tl T Y\n24 ‘ music_tracker.add('Hello - adele')\n25 music.list => ['Hello - adele'l\n26 B\n27\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 309,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng-ou-uu-v\"\"“\" neo- @ Den ++ B & x\n¥ 0Bmusic_design,md > () # returns list of &l music tracks added 1o arey .\nJo) o CLass MUSLCITracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\nZz |\nAR DN (TES ol £ Tel (T E L TTTS Ko =Tl T Y\n24 ‘ music_tracker.add('Hello - adele')\n25 music.list => ['Hello - adele’']\nb1 '\n27\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 310,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-uu-v\"\"“\" neo- @ Den ++ B & x\n¥ 0B.music_design,md > (5 # returns list of all music tracks acded 1o arsy .\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23\nPLZIE DN TES Uolh £ Tel (T JE L TS e - Tel T 1Y)\n25 |  music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 311,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-uu-v\"\"“\" neo- @ Den ++ B & x\n¥ 0B.music_design,md > (5 # returns list of all music tracks acded 1o arsy .\nJel 5 CLass MUSLClracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR TR (5\n22\nz\nPLZIE DN TES Uolh £ Tel (T E TS K =Tl T 1Y)\n25 |  music_tracker.add('Hello - adele')\n26 | music.list => ['Hello - adele'l\n27\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 312,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-ou-uu-v\"\"“\" neo- @ Den ++ B & x\n¥ 0B.music_design,md > (5 # returns list of all music tracks acded 1o arsy .\n0 o Class MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPLZIE DN TES Uolh £ Tel (T E L TS K - Tel T 1Y)\n25 |  music_tracker.add('Hello - adele')\nPI I 173 T S 13 e A AR T Y\n27\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 313,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=Nn g\n(G ¥ Oomksesanndy & @ 06 misc s habergesh weo- @ Do+ B & x\nJo) e MUSLCI raCKer © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5 &\n22\n23\nPLZIE DN TES Ul £ Tel (T E L TS K - Tel T 1Y)\n25 |  music_tracker.add('Hello - adele')\n26 = music.list => ['Hello - adele'l\n27\n2]\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 314,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > EI ¥ .\n0 o Class Musiciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPLZIE DN (TES ol £ Tol (T E | IS K - Tel T T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 315,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > EI ¥ .\n0 o Class Musiciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPLIE DN (TES ol £ Tol (T E | IS Kl - Tel T T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 316,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > EI ¥ .\n0 o Class Musiciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPL R DI [TT-3 Dol £g-Tel (T L [TES el f Tl TN T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 317,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > 5 ¥ Asd )\n0 o Class Muslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPL R DI [TT-3 Dol {g-Tel (T L [TES e f o Tl TN T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 318,
    "text": "cee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # Asding 50 )\nJo) © CLass MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPO DN (TES ol £ Tol (T E | IS Kl - Tel T T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 319,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.mmmu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5 # Aading 50 )\nJo) © CLass MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nP2 DI [TT-3 Dol 4g-Tel CT | [TES el f Tl T N T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 320,
    "text": "X X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.mmu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > (5] # Adding tracks to .\n0 o cClass Musilciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nPL I DI [TT-3 Dol 40-Tel T | [TES e f Yol TN T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 321,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > () # Adding tracks to .\n0 o cClass Muslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\nP2 DI [TT-S Dol 4g-Tel T | [TES e f Tl TN T\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 322,
    "text": "XX} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.mmu. weo- @ Do+ B & x\n¥ 0Bmusic_design,md > () # Adding tracks to )\nJo) © CLass MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\n24 #1) music_tracker = MusicTracker.new\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 323,
    "text": "(XX} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\nJo) © CLass MUSLCIracKer © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\n24 #1) music_tracker = MusicTracker.n\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 324,
    "text": "(XX} 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumux nEo- B Do +- B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\nJo) © CLass MUSLCIracKer © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR (5\n22\n23\n24 #1) music_tracker = MusicTracker.new\n25 |  music_tracker.add('Hello - adele')\nPI I 17T T 613 SEC A A IR G I A O I\n27\n2]\ni)\n20\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 325,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0Bmusic_design,md > (5 # Adding tracks to trackes :\n0 o Class MuUs1lciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker .\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add( Hello - adele')\n26 music.list = ['Hello - adele'l\n27\n2 IO\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 326,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\n0 o Class MUS1lCiracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker A\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add( Hello - adele')\n26 LTES TR 6T S R T AT I T T A\n27\n28 .\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 327,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\n0 © CLass MUSLCIracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n2 e\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 328,
    "text": "(X X ] 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\n0 o Class MuUslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\ni\nI\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 329,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\n0 o Class MuUslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 mysic.list => ['Hello - adele']\n27\nEEA\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 330,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] # Adding tracks to tracker .\n0 o Class MuUslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 mysic.list => ['Hello - adele']\n27\nEIE\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 331,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-ou-.-u-tumut weo- @ Do+ B & x\n¥ 0Bmusic_designmd > EI# .\n0 o Class Musiciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 mysic.list => ['Hello - adele']\n27\nEIE D\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 332,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] ¥ Adding tracks t tracker .\n0 o Class Muslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 mysic.list => ['Hello - adele']\n27\nELIE VR\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 333,
    "text": "(X X ) 06_music_design.md — Skill_Challenges Ing=Nn RNt\ng-m-:m\"‘“‘\" wEeEo- o B ++ B & x\n¥ 0B.music_design,md > (5] ¥ Adding tracks t tracker .\n0 o Class Muslciracker © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET TR (5\n22\n23 ‘ # Adding tracks to tracker i\n24 #1) music_tracker = MusicTracker.new\n25 ‘ music_tracker.add('Hello - adele')\n26 mysic.list => ['Hello - adele']\n27\nPV\ni)\n20\n@ 06_mwsic_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.i>\n.|\n@\n&\n"
  },
  {
    "seconds": 334,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ \" omemannay o 4ot soa- o B o 8 x\nfel g lass ’lﬁn's?c'.\"fm::r\" © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele'])\n27\n28 @)\nP}\n220\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 335,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ \" omemannay o 4ot soa- o B o 8 x\nfel g lass ’lﬁn's?c'.\"fm::r\" © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 end\n16\n17 ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele'])\n27\n28 @)\nP}\n220\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 336,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo nEo- B8 Don ++ 8 & x\n¥ 06_music_design,md > () # Alding tracks t tracker :\nJel 6 CLass MUSLCIracKer  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\n23 ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list = ['Hello - adele']\n27\n28 @) IS\nP}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 337,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. neo- @ Dor ++ B & x\n¥ 06_music_design,md > () # Adding tracks 1 tracker :\nJo) 8 CLass MUS1CIracker © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\n23 ‘ # Adding tracks to tracker ‘\nPLIE DI (T3 (R d - Te TTE TTES U =T T o )\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n28 @) eSS\nb}\n20\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.id\n.|\n@\n&\n"
  },
  {
    "seconds": 338,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. neo- @ Dor ++ B & x\n¥ 06_music_design,md > () # Adding tracks 1 tracker :\nJo) 8 CLass MUS1CIracker © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\n23 ‘ # Adding tracks to tracker ‘\nPLIE DI (T3 (R d - Te TTE TTES U =T T o )\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n2 @VE e\nb}\n20\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.id\n.|\n@\n&\n"
  },
  {
    "seconds": 339,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. neo- @ Dor ++ B & x\n* 0B_music_design.md > () # Adding tracks to trackes .\nJo) 8 CLass MUS1CIracker © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx ‘ # Adding tracks to tracker ‘\nVL O VTS Dol 3T U L (TES U Tl T o T\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n28 @V\n29\n20\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.id\n.|\n@\n&\n"
  },
  {
    "seconds": 340,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n2w EVE|L e\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 341,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n2w @VE e\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 342,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n@M e\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 343,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\nB VM\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 344,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\nB EVE| e\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 345,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\nB EVE| e\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 346,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\n@ * oy ¢ 4t \"o~ o B +o5 4 x\n# 0B_music_design.md > (5 # Adding tracks to trackes )\nJo) 8 CLass MUSLCIracKer © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx 1 # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 ‘ music.list => ['Hello - adele']\n27\n28 @)\nb1}\n20\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 347,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music_design,md > () # Adding tracks 1 tracker :\nJo) 5 Class MUS1CIracker © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\n23 ‘ # Adding tracks to tracker ‘\nPLZIE A DI (T3 (R 4T TT A TTES U =T T o )\n25 music_tracker.add(‘Hello — adele')\n26\n27\n8 #2)\nb}\n20\n@ 06_music_design_challenge_spec.sb U\nspec ) @ 06_music_design_challenge_spec.id\n.|\n@\n&\n"
  },
  {
    "seconds": 348,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-tumuo neo - @ Dor ++ B & x\n* 0B_music_design.md > () # Adding tracks to trackes .\np © CL3sS Muslclracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx ‘ # Adding tracks to tracker ‘\nL O UTES Rollh 4 - T (O L (TS U =Tl T )\n25 [ ES Tl T TR TR TR A T T T\n26 music.list => ['Hello - adele']\n27\n28\nP 7))\n20\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.id\n.|\n@\n&\n"
  },
  {
    "seconds": 349,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.m-.-u-umu. neo - @ Dor ++ B & x\n* 06_music_design.md > () # Adding tracks to trackes .\n0 8 CLass MUSLCIracKer © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 ’ music_tracker.add('Hello - adele')\n26 [T 1o & 3 SEC S A C IR T U |\n27\nEC\npi)\n20 43\\\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 350,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\nQ F sy ¢ 8o \"s0- @ B 5 8 x\n* 06_music_design.md > () # Adding tracks to trackes .\nJo) S CLass MUSLCIracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n9 | def initalize\n% 10 # stores tracks in an array\n> 11 end\n12\nB 13 ‘ def add(track)\n2 14 # adds the tracks to the array as strings\n15 ‘ end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb B ol -1 0 STET T LR TR (5\n22\npx ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 ’ music_tracker.add('Hello - adele')\n26 LTS T 13 SE A Rl A A T L A |\n27\n28\n20 |\n20 3\\\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 351,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-hmuo nEo- B8 Don ++ 8 & x\n» ww.«u > [ # Asding tracks 1o trackes N\nJo) p: \" det initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7 10 # stores tracks in an array\n11 |  end\n£ 1\ngo 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 | end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 |  end\n29\n21 3, Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add(‘Hello - adele')\n26 music.list => ['Hello - adele'l\n27\n28\ns\nECIE 73]\n@ 06_isic_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 352,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-hmuo nEo- B8 Don ++ 8 & x\n» ww.«u > [ # Asding tracks 1o trackes N\nJo) p: \" det initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7 10 # stores tracks in an array\n11 |  end\n£ 1\ngo 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 | end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 |  end\n29\n21 3, Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add(‘Hello - adele')\n26 music.list => ['Hello - adele'l\n27\n28\ns\nECIE 73]\n@ 06_isic_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 353,
    "text": "ocee 06_music_design.md — Skill_Challenges Ing=gn Ji\ng.ou-n-\\u-hmuo nEo- B8 Don ++ 8 & x\n» ww.«u > [ # Asding tracks 1o trackes N\nJo) g \" det initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7 10 # stores tracks in an array\n11 |  end\n£ 1\ngo 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 | end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 |  end\n29\n21 3, Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add(‘Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\n28\n29\nECIE 73]\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n@\n&\n"
  },
  {
    "seconds": 354,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music_design.md > ) # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\n? 15 | end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\npl]\nP4 S P ol -} I &1 T ETE TR [T &\n22\n23 ‘ # Adding tracks to tracker ‘\nPLIE DI TS Dol S - To T | TS X T T T\n25 music_tracker.add('Hello - adele')\nP13 music.list == ['Hello - adele'l\n27\n28\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 355,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music_design.md > ) # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n7 10 # stores tracks in an array\n11 |  end\n£ 1\ngs 13 ‘ def add{track)\nP 14 # adds the tracks to the array as strings\n© 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\npx] ‘ # Adding tracks to tracker ‘\nP DI TES TR S a-Te CTE | TS X T T TN\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele'l\n27\n28\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U &\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 356,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 357,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 358,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 359,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 360,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 361,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 362,
    "text": "X X ) 06_music_design.md — Skill_Challenges Ing=Nn RN\ng-m-:m\"‘“‘\" neo- 8 Bon +- B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n£ 1\ngs 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\ne 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker ‘\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n.|\n®\n&\n"
  },
  {
    "seconds": 363,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ng.ou-n-\\u-hmuo weo- 8 Bon ++ B & x\n¥ 06_music._design.md > 5 # ASding tracks to tracker N\nJo) 9 | def initalize  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 10 # stores tracks in an array\n11 | end\n2 1\ngo 13 ‘ def add{track)\n14 # adds the tracks to the array as strings\n? 15 end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n3 S B of -} 8 5 &1 T ETI T 13 £\n22\npx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list == ['Hello - adele’']\n27\ni)\nil\nEL I 73]\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_challenge_spec.b\n- |\n®\n&\n"
  },
  {
    "seconds": 364,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ng.ou-n-u-hmuo nEo- B Do +- B & x\n¥ 0Bmusic_design.md > (5 # Asding tracks 10 tracker .\np 9 | def miuuzg © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 10 # stores tracks in an array\n11 end\n£ 12\nA def add{track}\nP 14 # adds the tracks to the array as strings\n© 15 end\n16\n17 def list\n1B # returns list of all music tracks added to array\n19 |  end\n20\nb S T o) ) SET T T (1\n22\n23 ‘ # Adding tracks to tracker\nPLINE S DI TTES Ul d - Te UGl L (T8 T £ -1 T T\n25 music_tracker.add('Hello - adele')\n26 music.list = ['Hello - adele'l\n27\n28\n29\n30 #2)\n@ 06_mwsic_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 365,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ng.ou-n-u-hmuo nEo- B Do +- B & x\n¥ 0Bmusic_design.md > (5 # Asding tracks 10 tracker .\np 9 | def miuuzg © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 10 # stores tracks in an array\n11 end\n£ 12\nA def add{track}\nP 14 # adds the tracks to the array as strings\n© 15 end\n16\n17 def list\n1B # returns list of all music tracks added to array\n19 |  end\n20\nb S T o) ) SET T T (1\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list = ['Hello - adele'l]\n27\n28\n29\n30 #2)\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 366,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ng.ou-n-u-hmuo nEo- B Do +- B & x\n¥ 0Bmusic_design.md > (5 # Asding tracks 10 tracker .\np 9 | def miuuzg © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 10 # stores tracks in an array\n11 end\n£ 12\nA def add{track}\nP 14 # adds the tracks to the array as strings\n© 15 end\n16\n17 def list\n1B # returns list of all music tracks added to array\n19 |  end\n20\nb S T o) ) SET T T (1\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list = ['Hello - adele'l]\n27\n28\n29\n30 #2)\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 367,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks (o tracker .\nfel 9 | def initalize © 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n10 # stores tracks in an array\nk 11 end\nS 12\na 13 def add{track}\n& 14 # adds the tracks to the array as strings\n2 15 end\n16\n17 def list\n1B # returns list of all music tracks added to array\n19 |  end\n20\nb S T o) R SET T T (1\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele’)\nPi music.list = ['Hello - adele']\n27\n28\n29 | # Adding empty string will fail\n30\n-n:;mwa-uumu .\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 368,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+ B & x\n¥ 0B.music_design.md > (5] # Adding tracks o tracker .\nJel 1.é P M— © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n11 end\nk 12\n2 13 def add{track)\nge 14 # adds the tracks to the array as strings\n» 15 end\n© 16\n17 def list\n1B # returns list of all music tracks added to array\n19 |  end\n20\nb G T of {11 O 6T T T 115 &\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele’)\nPi music.list = ['Hello - adele']\n27\n28\n29 | # Adding empty string will fail\n30\n31\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 369,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) ¥ Adding tracks to tracker .\nfel Y R R © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n11 end\n“ 12\n2 13 def add{track)\nge 14 # adds the tracks to the array as strings\n» 15 end\n© 16\n17 def list\n1B # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\nPLINE S O I TTES Ul d - Te Ll L [T T =T Y T2\n25 music_tracker.add('Hello - adele')\n26 music.list = ['Hello - adele']\n27\n28\n29 | # Adding empty string will fail\n%\n31\n@ 06_music_design_challenge_spec.rb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 370,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty weo- @ Do+ B & x\n¥ 0B music_design.md > ) # Acding tracks to tracker .\n0 Y S Je— © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n11 end\nk 12\n£ 13 def add{track)\nge 14 # adds the tracks to the array as strings\n15 end\ne 16\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\np1]\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 LITES TR B R SE NN B IR K RT3 A |\n27\n28\n29 |  # Adding empty string will fail\n30\nE\n@ 06_fmisic_design_challenge_spec.ib U @\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 371,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 08 msic desn cholergesty weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5] # Adding tracks to tracker .\n0 Y Tp— © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n11 [0\n“ 12\n2 13 def add{track)\nge 14 # adds the tracks to the array as strings\n15 end\nAT\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\nb1}\n21 3. Create Examples as Tests\n22\npx} ‘ # Adding tracks to tracker\nPN S OO TES Tl - T L L TS U T T T\nb3 LUEF TR T LT LT T A T T L E\n26 LITES TR B E3 SE N A AR K IE-T, [ A |\n27\np2:]\n29 |  # Adding empty string will fail\n30\n31\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 372,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # stores tracks in an P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n11 end\nk 12\n2 13 def add{track)\ngs 14 # adds the tracks to the array as strings\n15 end\n¢ i ‘\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\npx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 LITES TR B E3 SEC N A IR K T (A A |\n27\npi:}\n29 |  # Adding empty string will fail\n30 #2) music_tracker =M\n31\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 373,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # stores tracks in an P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n11 end\n“ 12\n2 13 def add{track)\ngs 14 # adds the tracks to the array as strings\n15 end\n& ‘\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\npx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 LITES TR B E3 SEC N A IR K T (A A |\n27\npi:]\n29 |  # Adding empty string will fail\n30 #2) music_tracker = MusicTd\n31\n@ 06_music_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 374,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # stores tracks in an P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n11 end\n“ 12\n2 13 def add{track)\ngs 14 # adds the tracks to the array as strings\n15 end\n& ‘\n17 def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\npx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 LITES TR B E3 SEC N A IR K T (A A |\n27\npi:]\n29 |  # Adding empty string will fail\n30\n31\n@ 06_music_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 375,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\n¥ oy o 8 s nB0- ® Do o8 ¥ x\n¥ 06_music_design.md > ) # Adding tracks to tracker .\nJel 11 end : © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n-\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\nNP ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G P o) O €T T T T [ €\n22\nPx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 music.list = ['Hello - adele’']\n27\npi:]\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\nSEE\n3z\n@ 06_music_design_challenge_spec.b U @\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 376,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\nG ¥ e smonna o |8 W | nB0- ® Do o8 ¥ x\n¥ 06_music_design.md > ) # Adding tracks to tracker .\nJel 11 end g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nL3\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\nNP ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 music.list = ['Hello - adele’']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\nST\n32\n@ 06_music_design_challenge_spec.b U @\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 377,
    "text": "LY X 06_music_design.md — Skill_Challenges Ing=gn Ji\nG ¥ e smonna o |8 W | nB0- ® Do o8 ¥ x\n¥ 06_music_design.md > ) # Adding tracks to tracker .\nJel 11 end g © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nL3\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\nNP ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3, Create Examples as Tests\n22\nPx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 music.list = ['Hello - adele’']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\nST\n32\n@ 06_music_design_challenge_spec.b U @\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 378,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n“ 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\nO ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\npx} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUTES TR T LT [ T A G RE-T [ A\n26 music,list = ['Hello - adele’']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\nsl mste]\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 379,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n“ 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n21\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 380,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n“ 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 381,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n“ 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| msictracker.add(\")\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 382,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n(@ *Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n“ 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| mstctracker.add(*)\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 383,
    "text": "o000 06_music_design.md — Skill_Challenges DEemlos\n(G ¥ Oomesesonndy X | @ 06 mise s shubergesh weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n“ 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| mstctracker.add(')\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 384,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ng 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n30 msictracker.add(') |\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 385,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ng 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| msictracker.add(*)d\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 386,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ng 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n30 msictracker.add(') ]\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 387,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nE 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| msictracker.add(') = |\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 388,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| msictracker.add(') =\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 389,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| msictracker.add(t) =\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 390,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| musictracker.add(*) =\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 391,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| musictracker.add(*') =\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 392,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| musictracker.add(*') =\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 393,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| musictracker.add(*) = Yol\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 394,
    "text": "oceeo 06_music_design.md — Skill_Challenges DEemlos\n[ ¥ Oomesesnndy ¢ @ 08 sk desn cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > ) # ASding tracks to tracker .\np 1 end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB 12 ‘\n13 def add{track}\n& 14 # adds the tracks to the array as strings\nge 15 end\n16\n? ‘ def list\n18 # returns list of all music tracks added to array\n19 | end\n20\nb G PO o1 ) € T T T [ <\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LU TR e T T LT T R G T I 3\n26 music,list = ['Hello - adele’']\n27\np2:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3| musictracker.add(*') = Yowea\n32\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n(@)\n&\n"
  },
  {
    "seconds": 395,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 06_music_design.md > (5] # Adding tracks o tracker .\np 11 end : © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 12 ‘\n13 def add(track})\n& 14 # adds the tracks to the array as strings\nB 15 ‘ end\n16\ne 17 [ [ RS 1\n18 # returns list of all music tracks added to array\n19 |  end\n20\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 RS Tolh - (LT T T L R G RT3\n26 music.list == ['Hello - adele'l]\n27\np:)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31\n32 )\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 396,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 08 msic desn cholergesty weo- @ Do+ B & x\n¥ 06_music_design.md > (5] # Adding tracks o tracker .\np 1 o b © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nk 12 ‘\n13 def add(track})\n& 14 # adds the tracks to the array as strings\nB 15 ‘ end\n16\ne 17 [ [ RS 1\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LUES TR - T T L T IR T R\n26 music,list => ['Hello - adele'l\n27\npa:)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31\n32\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 397,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty ueo- o Den +- B &\n0 = T“':;f'mmmww - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk hvi ‘\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 ‘ end\n\n16\ne 17 [ [ RS 1\n\n18 # returns list of all music tracks added to array\n\n19 |  end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\n23 ‘ # Adding tracks to tracker\n\nPZIE B (VTS Tl A - Te T L (1T T T T i T\n\n25 music_tracker.add('Hello - adele')\n\n26 music,list => ['Hello - adele'l\n\n27\n\npi:]\n\ni) # Adding empty string will fail\n\nU 73 TTES Tl 4 - To L LT X T T oY)\n\n31| music_tracker.add(*') = ou camnot 3|\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 398,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty weo- @ Do+ B & x\n0 = T“':;f'mmmww - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk hvi ‘\n\n13 def add(track})\n& 14 # adds the tracks to the array as strings\nB 15 ‘ end\n\n16\ne 17 [ [ RS 1\n\n18 # returns list of all music tracks added to array\n\n19 |  end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\n23 ‘ # Adding tracks to tracker\n\nPZ I D VTS Dol A - Te T L (1T T F-To T T2\n\n25 LTS T (- T T [T T R G T T 0\n\n26 music,list => ['Hello - adele']\n\n27\n\npi:]\n\npi} # Adding empty string will fail\n\n1 730 TES TR d - T T TS U g T T TN\n\n31| music_tracker.add(*') = You camnot ing|\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n- |\n®\n&\n"
  },
  {
    "seconds": 399,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ Oomesesnndy & @ 06 msic s cholergesty ueo- o Den +- B &\n0 = T“':;f'mmmww - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk hvi ‘\n\n13 def add(track})\n& 14 # adds the tracks to the array as strings\nB 15 ‘ end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\n23 ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LU Rl T LT L T TR T L E\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\n29 # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You camnot inpu\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n- |\n®\n&\n"
  },
  {
    "seconds": 400,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nG ¥ oumsesnnsy o |8 | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 |  music_tracker.add('') = 'You cannot input aned\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 401,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nG ¥ oumsesnnsy o |8 | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 |  music_tracker.add('') => 'You cannot input anewpt\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 402,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nG ¥ oumsesnnsy o |8 | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add(’') => 'You cannot input an empty strif\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 403,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nG ¥ oumsesnnsy o |8 | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty stringasa|\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 404,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nG ¥ oumsesnnsy o |8 | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add(') => 'You cannot input an empty string as a track\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 405,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nG ¥ oumsesnnsy o |8 | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add(’') => 'You cannot input an empty string as a track’(\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 406,
    "text": "(XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nG *oumsesnnsy x| 8 W | neo- @ B -8 ¥ x\no ¥ “‘11\"' s ’f'”‘\"\"\"'m - © oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\nen\n\nk hvi ’\n\n13 def add(track)\n& 14 # adds the tracks to the array as strings\nB 15 end\n\n16\ne 17 [ [ RS K1\n\n18 # returns list of all music tracks added to array\n\n19 | end\n\n20\n\n21 3. Create Examples as Tests\n\n22\n\nk] ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n\n25 LTS ol T T L TR Y R T T 0\n\nP13 music,list => ['Hello - adele']\n\n27\n\n28\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’\n\n32\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 407,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ % coriesmnnsy ¢ Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track})\n14 # adds the tracks to the array as strings\n& 15 end\nB 16\n» 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\nP LU Rl T LT L T TR T L E\nP13 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’\n32\n33\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 408,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\n[ ¥ Oomesesnndy ¢ @ 08 msic s cholergesty weo- @ Do+ B & x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track})\n14 # adds the tracks to the array as strings\n& 15 end\nB 16 ‘\n» 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\n20\nP S T ol T1 () ST ) R T 11\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\nP LU Rl T LT L T TR T L E\nP13 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’\n32 _\n33\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 409,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ % coriesmnnsy ¢ Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track})\n14 # adds the tracks to the array as strings\n& 15 =0 ]\nB 16\n» 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\n20\nP G T of V-1 () ST ) R T 11\n22\n23 ‘ # Adding tracks to tracker\nPZIE S DI TTES (ol dx-To L L TS T FTe T T\nP LU Rl T LT L T TR T L E\nP13 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32 h_\nEx]\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 410,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ % coriesmnnsy ¢ Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track})\n14 # adds the tracks to the array as strings\n& 15 =0 ]\nB 16\n» 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\npd\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\nPZIE S DI TTES Dol da-To T L TS T FTe T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\nk73 h_\n33\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 411,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ % coriesmnnsy ¢ Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track})\n14 # adds the tracks to the array as strings\n& 15 =0 ]\nB 16\n» 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\npd\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\nPZIE S DI TTES Dol da-To T L TS T FTe T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\nk73 —\n33\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 412,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ % coriesmnnsy ¢ Ok st wea- @ Dom+-8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track)\n14 # adds the tracks to the array as strings\n& 15 end\nB 16\nP 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\n20\nP25 G P of T 1 () SET T R T 11\n22\npx] ‘ # Adding tracks to tracker\nPZIE S DI TTES Tl dx-To T L T3 T FTe T T\n25 LU Rl T DT L T T A T L T\n26 music,list => ['Hello - adele']\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32 —\n33\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 413,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ % coriesmnnsy ¢ Ok st wea- @ Dom+-8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 12 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 13 ‘ def add(track)\n14 # adds the tracks to the array as strings\n& 15 end\nB 16\nP 17 def list\n© 18 # returns list of all music tracks added to array\n19 | end\n20\nP25 G P of T 1 () SET T R T 11\n22\npx] ‘ # Adding tracks to tracker\nPZIE S DI TTES Tl dx-To T L T3 T FTe T T\n25 LU Rl T DT L T T A T L T\n26 music,list => ['Hello - adele']\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32 —\n33\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 414,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n@ oomminnds ¢ @Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 14 # adds the tracks to the array as strings\n15 end\n£ 16 ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\npi)\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\nPLINE SO RN [TT-S Dol 4= T I L [TES U f Tl T T\n25 |  music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\nPz\npa:} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32 i\n.|\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 415,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n@ oomminnds ¢ @Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 14 # adds the tracks to the array as strings\n15 end\n£ 16 ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\npi)\n21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\nPLINE SO RN [TT-S Dol 4= T I L [TES U f Tl T T\n25 |  music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\nPz\npa:} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32 i\n.|\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 416,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n@ oomminnds ¢ @Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 S P of -} (- 5 €1 T A T TR 13 £\n22\ni) ‘ # Adding tracks to tracker\nPLINE SO NN [TT-S Dol 4= Tl T L [TES U f Tl T T\n25 |  music_tracker.add('Hello - adele')\n26 LTS T G SEC A 11 A G- A U0 |\n27\n28\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') == 'You cannot input an empty string as a track®\n32 )\n33 3|\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n(@)\n&\n"
  },
  {
    "seconds": 417,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n@ oomminnds ¢ @Ok st seo- @ Do+ 8 ¥ x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\np 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 14 # adds the tracks to the array as strings\n15 end\n16 ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 S P of -} 0 5 €1 T L I Tl (1 £\n22\ni) ‘ # Adding tracks to tracker\nPLIE SO NN [TT-S Dol 4= Tl (T [TES U f Tl T T\n25 |  music_tracker.add(’'Hello - adele')\n26 LTS T S SEC A 1A T A 0 |\nra\npi:]\nil # Adding empty string will fail\nN 73N 113 Relih f - Tel 'L EN L [TER Ul T T 1)\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 | e\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 418,
    "text": "oee Skill_Challenges oDBemlos\n(@ ¥ ermsenns ¢ 8 G st o Dom+-8 4 x\n¥ 0B_music_design.md > (5] # Adding tracks to tracker .\n0 13 | def add{track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 14 # adds the tracks to the array as strings\n15 (0]\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 SR P of -} - 5 €1 I T Tl (5\n22\n23 ‘ # Adding tracks to tracker\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST ST A AR PV A TR |\n27\npi:]\nb1} # Adding empty string will fail\nN 7AW 113 Uefih f - Tel /LR L (TR U T T TS\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n32\n.|\n34\n@ 06_mwsic_design_challenge_specrb U & N\nspec > @ 06_music_design_challenge_spec.ib\n.|\n®\n&\n"
  },
  {
    "seconds": 419,
    "text": "oee Skill_Challenges oDBemlos\n(@ ¥ ermsenns ¢ 8 G st - = Bom+-8 8 x\no * “”13\"' UI \"\":;f'a::'z::;:;\" < 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\ni 14 # adds the tracks to the array as strings\n\n15 (0]\nT ‘\ng 17 | def list\n\n18 # returns list of all music tracks added to array\ng 19 | end\n\n20\n\nP2 SR P of -} - 5 €1 I T Tl (5\n\n22\n\n23 ‘ # Adding tracks to tracker\n\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n\n25 | music_tracker.add('Hello - adele')\n\n26 [T T ST ST A AR PV A TR |\n\n27\n\npi:]\n\nb1} # Adding empty string will fail\n\nN 7AW 113 Uefih f - Tel /LR L (TR U T T TS\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n\n32\n\n33—\n\n34\n\n@ 06_music_design_challenge_specrb U @ g\nspec > @ 06_music_design_challenge_spec.ib\n\n.|\n®\n&\n"
  },
  {
    "seconds": 420,
    "text": "oee 06_music_design.md — Skill_Challenges DBEmlos\nG * st o [ G ve0- @ D+ 5 8 x\no * °“13\"' \"\"l \"\":;f'a::'z::;:;’\" < 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n% 14 # adds the tracks to the array as strings\n\n15 (0]\nT ‘\ng 17 | def list\n\n18 # returns list of all music tracks added to array\n2\n\n19 | end\n\n20\n\nP2 SR P of -} - 5 €1 I T Tl (5\n\n22\n\npx) ‘ # Adding tracks to tracker\n\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n\n25 | music_tracker.add('Hello - adele')\n\n26 [T T ST ST A AR PV A TR |\n\n27\n\npi:]\n\nb1) # Adding empty string will fail\n\nELIE 73BN TS o 4 - Te 1T R [TER Ul £ =Tl T W)\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n\n32\n\n= .\n\n34\n\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.lb.\n\n-]\n®\n&\n"
  },
  {
    "seconds": 421,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ commesmionnas o | @ S e wea- o Do +8 8 x\n¥ 06_music_design.md > E¥ .\nJo) 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 14 # adds the tracks to the array as strings\n15 (0]\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 SR P of -} - 5 €1 I T Tl (5\n22\n23 ‘ # Adding tracks to tracker\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n25 | music_tracker.add('Hello - adele')\n26 LTS T S 1Y SEC A1 A AU Y 0 |\n27\npi:]\npi] # Adding empty string will fail\nELIE 73BN TS o 4 - Te 1T R [TER Ul £ =Tl T W)\n31 | LUTES TR - T T [ TR B (VTR T T T T ) (LY S L BT IR T\nk73\n-\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.ib\n- |\n®\n&\n"
  },
  {
    "seconds": 422,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\nG ¥ oursinnsy o |8 b e et weo- @ Do 428 ¥ x\n¥ 06_music_design.md > (5] # Adding tracks 10 tracker A\nJo) 13 | def add{track)  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 14 # adds the tracks to the array as strings\n15 (0]\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 SR P of -} - 5 €1 I T Tl (5\n22\npx) ‘ # Adding tracks to tracker\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST ST A AR PV A TR |\n27\npi:]\nb1} # Adding empty string will fail\nELIE 73BN TS o 4 - Te 1T R [TER Ul £ =Tl T W)\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n32\n3.\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.lb.\n- ]\n®\n&\n"
  },
  {
    "seconds": 423,
    "text": "'YX 06_music_design.md — Skill_Challenges DBEmlos\n@ * oemieseinnsy o |8 B et | LELEN Do +-8 8 x\n¥ 06_music_design.md > (5 ¥ Adding tracks 10 trackes A\nJo) 13 | def add(track)  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 14 # adds the tracks to the array as strings\n15 (0]\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 SR P of -} - 5 €1 I T Tl (5\n22\npx) ‘ # Adding tracks to tracker\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST ST A AR PV A TR |\n27\npi:]\nb1} # Adding empty string will fail\nELIE 73BN TS o 4 - Te 1T R [TER Ul £ =Tl T W)\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n32\n3.#)\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.lb.\n- ]\n®\n&\n"
  },
  {
    "seconds": 424,
    "text": "LY X 06_music_design.md — Skill_Challenges DBEmlos\nG ¥ oy o |8 b e et weo- @ Do 428 ¥ x\n¥ 06_music_design.md > (5] # Adding tracks 0 tracker A\nJo) 13 | def add{track)  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n% 14 # adds the tracks to the array as strings\n15 (0]\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\n20\nP2 SR P of -} - 5 €1 I T Tl (5\n22\npx) ‘ # Adding tracks to tracker\nPLZ IR SO NN [TT-3 Ul 4= Tel (T L [TES U f - Tel T T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST ST A AR PV A TR |\n27\npi:]\nb1} # Adding empty string will fail\nELIE 73BN TS o 4 - Te 1T R [TER Ul £ =Tl T W)\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n32\nRO ]\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.lb.\n- ]\n®\n&\n"
  },
  {
    "seconds": 425,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ng.ou-n-u-hmuo weo - @ BDen +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJo) 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 14 # adds the tracks to the array as strings\n15 [0\n£ 18 ‘\ngy 17 | def list\n- 18 # returns list of all music tracks added to array\n° 19 | end\n20\n21 3. Create Examples as Tests\n22\npici ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\nEUREE 73 M (TS Rl o (o (CTE | 1T Tal f =Tat O M)\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’\n33 ) )\nEC R\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 426,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ng.ou-n-u-hmuo weo - @ BDen +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJo) 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 14 # adds the tracks to the array as strings\n15 [0\nT ‘\nI VAR L A R\n- 18 # returns list of all music tracks added to array\n° 19 | end\np1’]\n21 3. Create Examples as Tests\n22\npici ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\nEUREE 73N (T3 Rl o (o CTE | 1T Tal f =Tat O M)\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’\n33 ) )\nB @ e\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 427,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(g * Comsesestnnd U 8 08 sk desgn sholengsin nEo- o Do +- 8 8 x\n¥ 06_music_design.md > (5] # Adding tracks 1o tracker :\np 13 | def add(track} © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 14 # adds the tracks to the array as strings\n15 end\nT ‘\nFE VA \" QST\n18 # returns list of all music tracks added to array\n4\n19 | end\nbl\nP R PR of ) (o S €1 T R TR 1 £\np\n] ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\nECTE <V\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 428,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n@ *oumesmnnes o |8 | noo- @ Do 8 8 x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJo) 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng° 17 | def list\n18 # returns list of all music tracks added to array\ne 19 | end\n20\nP4 S P of -} (- 5 €1 T L ER TR 1\np\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add(’Hello - adele')\n26 music.list => ['Hello - adele’']\n27\n1]\npi:] # Adding empty string will fail\nECIE 73 B [TES Kol of o Tal (T R L ITEE Dol o =Tel TN )\n31 |  music_tracker.add('') = 'You cannot input an empty string as a track'\n32\nB\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 429,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ minnas & 8 Gk st wea- @ Dom+-8 ¥ x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nLT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\ne 19 | end\n20\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 LTES TR ST SEC N A A RO REE-T I L) |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\nB#y#ust|\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 430,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ minnas & 8 Gk st wea- @ Dom+-8 ¥ x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nLT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\ne 19 | end\n20\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 LTES TR ST SEC N A A RO REE-T I L) |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\nB #Ustmed\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 431,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # Uistmethod wity\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 432,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return|\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 433,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will returnall trad\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 434,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks adde\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 435,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 436,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 437,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 438,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 439,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Bon +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJel 13 | def add(track) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 14 # adds the tracks to the array as strings\n15 end\nT ‘\ng 17 | def list\n18 # returns list of all music tracks added to array\n2\n19 | end\np1]\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\nPZIE 5O N 113 ol £o-Te T I L T U T (L T\n25 | music_tracker.add('Hello - adele')\n26 [T T ST S A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 440,
    "text": "X X 06_music_design.md — Skill_Challenges Inf=Nn R\n@ ey |0kt vou- @ Bom+- 8 8 x\n= 2SI M ke kv swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall % ] .\nP 14 # adds the tracks to the array as strings ° 408 enges\n15 end\nk 16 ‘\n& 17 | def list\ngo 18 # returns list of all music tracks added to array\n19 | end\nY\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 (TS T ST ST A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te (T T [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n|\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n., ]\n®\n&\n"
  },
  {
    "seconds": 441,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\n(@ Otmmnimnnds ¢ @Ok s bt noo- @ Den -5 8 x\n= 2 S Mo ke prchor swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall % ] .\n£ 14 # adds the tracks to the array as strings ° enges\n15 end\nk 16 ‘\n& 17 | def list\nge 18 # returns list of all music tracks added to array\n19 | end\nY\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 (TS T ST ST A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te (T T [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\ne |\n35\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 442,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\n(g * Comsesestnnd U 8 08 sk desgn sholengsin nEo- o Des +2 8 & x\nB ORI ks bk Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall %[ ’\n2 14 # adds the tracks to the array as strings ° 408 enges\n15 end\nk 16 ‘\n& 17 | def list\nge 18 # returns list of all music tracks added to array\n19 | end\nY\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 (TS T ST ST A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te (T T [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n=\n35\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 443,
    "text": "X X 06_music_design.md — Skill_Challenges Inf=Nn R\n@ ey |0kt vou- @ Bom+- 8 8 x\nB ORI ks bk Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall %[ ’\n2 14 # adds the tracks to the array as strings ° 408 enges\n15 end\nk 16 ‘\n& 17 | def list\nge 18 # returns list of all music tracks added to array\n19 | end\nY\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 (TS T ST ST A Y A PV A TR |\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te (T T [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\nL\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n. |\n®\n&\n"
  },
  {
    "seconds": 444,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\n@ ¥ 06 music_desgnmd U & @ 08 muske desin_challeogesby neo - @ Dor +~ B & x\n= 2SI A ke prchor swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall % ] .\n£ 14 # adds the tracks to the array as strings ° 408 enges\n15 end\n3 ‘\n& 17 | def list\nge 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of ) (1 5 €1 T I T TR (3\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add('Hello - adele')\n26 (TS T ST ST A Y A PV A TR |\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te (T T [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n34\n35\n@ 06_music_design_challenge_specrb U &\nspec ) @ 06_music_design_challenge_spec.rb\n., ]\n®\n&\n"
  },
  {
    "seconds": 445,
    "text": "ocee 06_music_design.md — Skill_Challenges DBEmlos\n(@ ¥ Oomesesnndy & @ 06 msic desn cholergesty ueo- @ Den +- B & x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\n£ 14 # adds the tracks to the array as strings conrinpintod ~Oswin-Pinto-CLIGHAZ406L4 Skil1_Challenges & []\n15 end\n3 ‘\n& 17 | def list\nge 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 | music_tracker.add(’Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n3| omstetracker|\n35\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 446,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\ngcmmw\"‘;MJ neo- o Bor +~ 8 & x\nB ooLmaskieskanmd > [ AGGEG et trackar Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall %] :\n£ 14 # adds the tracks to the array as strings ° enoes\n15 end\n3 ‘\n& 17 | def list\ngs 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 | music_tracker.add('Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n3 | omstetracker|\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 447,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\n(@ ¢ O smsinndy o | & Ot ma desn hrgeits weo- @ Do+~ 8 &\n¥ oLmmcoulgssvd 51 A Fuchn e achar Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall % [] :\n£ 14 # adds the tracks to the array as strings ° 0 enges\n15 end\n3 ‘\n& 17 | def list\ngs 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 | music_tracker.add(’Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n3 [ msictrackerd\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 448,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\ngcmmw\"‘;MJ neo- o Bor +~ 8 & x\noAt Hoelp > £ AN tacke b e Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall %] :\n£ 14 # adds the tracks to the array as strings ° enoes\n15 end\n3 ‘\n& 17 | def list\ngs 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 | music_tracker.add('Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n3 [ omstctracker s\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 449,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\ngcmmw\"‘;MJ neo- o Bor +~ 8 & x\nB ooLmaskieskanmd > [ AGGEG et trackar Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall %] :\n£ 14 # adds the tracks to the array as strings ° enoes\n15 end\n3 ‘\n& 17 | def list\ngs 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 | music_tracker.add('Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n30 | mstctracker=M\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 450,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\n(@ ¢ O smsinndy o | & Ot ma desn hrgeits weo- @ Do+~ 8 &\n¥ oLmmcoulgssvd 51 A Fuchn e achar Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall % [] :\n£ 14 # adds the tracks to the array as strings ° 0 enges\n15 end\n3 ‘\n& 17 | def list\ngs 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 | music_tracker.add(’Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n-\n35\n@ 06_music_design_challenge_specrb U @\nspec ) @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 451,
    "text": "oceeo 06_music_design.md — Skill_Challenges Ing=an REi\n@ ¥ 06 music_desgnmd U & @ 08 muske desin_challeogesby neo - @ Do +- 8 & x\n¥ okt e s swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chall %[ ’\n£ 14 # adds the tracks to the array as strings ° 408 enges\n15 (0]\n3 ‘\n& 17 | def list\ngs 18 # returns list of all music tracks added to array\n19 | end\ne 20\nP2 S PR of -} (- 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nP 5O NN 153 ol o-Te T I L TR X =T (L T2\n25 music_tracker.add('Hello - adele')\n26 LTS TP ST SEC N A A A REE-T I L) |\n27\ni}\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LUES CR - Te TP [ [ B (TR L TS TN L= S g L R IR T\n32\n33 #3) # List method will return all tracks added\n-\n35\n@ 06_music_design_challenge_specrb U &\nspec > @ 06_music_design_challenge_spec.rd\n., ]\n®\n&\n"
  },
  {
    "seconds": 452,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\n@ *oumesmnnes o |8 | noo- @ Do o6 4 x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJo) is end - i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ‘ def list\n& 18 # returns list of all music tracks added to array\ng9 19 | end\nP p1]\n© P2 S PR of -} 0 5 €1 T L T TR (5\n22\npx] ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 LUES TR ST SE N A, I QG RE-T I A |\n27\ni}\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35\n36\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 453,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\n(3 * O snay 8 06 s s s weo- o Do+ 8 8\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJo) is end - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ‘ def list\n& 18 # returns list of all music tracks added to array\ngo 19 | end\nP 20\n© P2 S PR of ) 0 5 €1 T L T TR (5 £\n22\npx] ‘ # Adding tracks to tracker\nP 5O N 153 ol £-Te T I L TR U T (T Y\n25 music_tracker.add('Hello - adele')\n26 LUES TR ST SE N A, ARG RE-T I A |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35\n36\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 454,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\n(3 ¥ ousnnay o @ 0k s st WEo- B O +-8 ¥ x\n¥ 06_music_design.md > (5 # Adding tracks to tracker .\nJo) is and - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ‘ def list\n& 18 # returns list of all music tracks added to array\ngo 19 | end\nP p1]\n© P2 SR PR of ) (- 5 €1 L T TR (5\n22\npx] ‘ # Adding tracks to tracker\nPZIE 5O NN 113 ol £o-Te T I L T U =T (T T2\n25 LIS T (- T T T LT L A T T T\n26 LUES TR ST SE N A, ARG RE-T I A |\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LUCH R { T TR [TH Do =Tl L )\n35\n36\n@ 06_music_design_challenge_specrb U @\nspec > @ 06_music_design_challenge_spec.rb\n.|\n®\n&\n"
  },
  {
    "seconds": 455,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n@ *Omsnsmnnd ¢ |8 G | weo- @ D 48 4 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - . © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\ne 2 |\n© 21 3. Create Examples as Tests\n22\n23 ‘ LRI R CRCRC Cl g\nPL I SRR TES Tl - T T | (TES o of =T 1T G T\n25 music_tracker.add('Hello - adele')\n26 LTS TR ST SE N A YA RV A U0 |\n27\n28\n29 # Adding empty string will fail\nEUINE 73 TES DR T T (TS T T U\n31 | music_tracker.add('') = 'You cannot input an empty string as a track’\n32\n33 #3) # List method will return all tracks added\n34 LUES ER 4 o T (T L [T U - Tel T\n35 _\nkL)\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 456,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n@ *Omsnsmnnd ¢ |8 G | weo- @ D 48 4 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - . © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\ne 2 |\n© 21 3. Create Examples as Tests\n22\n23 ‘ LRI R CRCRC Cl g\nPL I SRR TES Tl - T T | (TES o of =T 1T G T\n25 music_tracker.add('Hello - adele')\n26 LTS TR ST SE N A YA RV A U0 |\n27\n28\n29 # Adding empty string will fail\nEUINE 73 TES DR T T (TS T T U\n31 | music_tracker.add('') = 'You cannot input an empty string as a track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 _\nkL)\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 457,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n@ *Omsnsmnnd ¢ |8 G | weo- @ D 48 4 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - . © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© 21 3. Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\nPLINE SR I TES Tl - T T | (TES o of =T 1T G T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele')\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk72\n33 #3) # List method will return all tracks added\n34 LUTES TR T IR | (TES Taf =T T (o)\n35 _\n36\n@ 06_music_design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 458,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ % comiesmnnsy o | ok ctrnse LLLE:! Dom+-8 4 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\n- pL]\n© 21 3, Create Examples as Tests\n22\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LIS TR T T T LT T A R T T 3\n26 TS T ST SEC A Y A Y A UL |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 —\n36\n@ 06_music_design_challenge_spec.ib U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 459,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\n@ oommimnnds ¢ @Ot st soo- @ Do 05 8 x\no * ”\"‘15\"' e :r::]'m\"\"\"m - : - 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© P2 S P of -} (- 5 €1 T I T TR (5 £\n22\n23 ‘ # Adding tracks to tracker\nPZ I SO UTES Ul - T L | (TES o) f o= Te T )\n25 music_tracker.add('Hello - adele')\n26 (TS T ST ST A Y AT Y I L |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35\nk{3\n@ 06_music_design_challenge._specsb U &\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 460,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumsssmons o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© b3 P of - ) (- ST 1) T T (14 £\n22\n23 ‘ # Adding tracks to tracker\nPZ I SO UTES Ul - T L | (TES o) f o= Te T )\n25 music_tracker.add('Hello - adele')\n26 TS TR ST SE A Y A I A TR |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 _\nk{3\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 461,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumsssmons o |8 Gl | weo- @ D 48 8 x\no * 1“5 e :r::]'mm\"w - . - 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© b3 P of - ) (- ST 1) T T (14 £\n22\n23 ‘ # Adding tracks to tracker\nPZ I SO UTES Ul - T L | (TES o) f o= Te T )\n25 music_tracker.add('Hello - adele')\n26 TS TR ST SE A Y A I A TR |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 —\nk{3\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.m\n.|\n®\n&\n"
  },
  {
    "seconds": 462,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumsssmons o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© b3 P of - ) (- ST 1) T T (14 £\n22\n23 ‘ # Adding tracks to tracker\nPZ I SO UTES Ul - T L | (TES o) f o= Te T )\n25 music_tracker.add('Hello - adele')\n26 TS TR ST SE A Y A I A TR |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 —\nk{3\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 463,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumsssmons o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\np 15 end - - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© b3 P of - ) (- ST 1) T T (14 £\n22\n23 ‘ # Adding tracks to tracker\nPZ I SO UTES Ul - T L | (TES o) f o= Te T )\n25 music_tracker.add('Hello - adele')\n26 TS TR ST SE A Y A I A TR |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 —\nk{3\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 464,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumsssmons o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > ) ¥ Adding tracks to tracker .\nJo) 15 end - : © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n16\n% 17 ’ def list\n& 18 # returns list of all music tracks added to array\ng 19 | end\nP 20\n© b3 P of - ) (- ST 1) T T (14 £\n22\n23 ‘ # Adding tracks to tracker\nPZ I SO UTES Ul - T L | (TES o) f o= Te T )\n25 music_tracker.add('Hello - adele')\n26 TS TR ST SE A Y A I A TR |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 —\nk{3\n@ 06_music_dssign_challenge_specb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 465,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(G Oomksesanndy & @ 06 misc s habergeshy neo- o Do +- 8 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 17 ’ def list\n18 # returns list of all music tracks added to array\n# 19 | end\ngs p{]\nb3 T of - ) (-0 ST 1) T T (13 £\nCO\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n13 music.list => ['Hello - adele'l\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 LUTES TR T TP [ [ B (CTTRR=CT T DTN = (S g L R IR e\n32\n33 #3) # List method will return all tracks added\n34 LUTES TR T U | (TES o f =Tl T T\n35 music_tracker.add('Hello — adele')\n36\n37\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 466,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gk | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 17 ’ def list\n18 # returns list of all music tracks added to array\n# 19 | end\ngo 1]\n21 3. Create Examples as Tests\ncl 22 |\n23 ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n13 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') = 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 LUTES TR T U | (TES ol f =Tl T T\nki music_tracker.add('Hello - adele')\n36\n37\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 467,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gk | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7% 17 ’ def list\n18 # returns list of all music tracks added to array\n# 19 | end\ngo 1]\nP2 S P of -} (- 5 €1 T I T TR (5 £\ncl 22 |\n23 ‘ # Adding tracks to tracker\nPZ I DI TTES Ul - Te T | (TES Do) f o= Te T )\n25 LTS TR ST CLMET [ TR T G LA A\n13 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’\n32\n33 #3) # List method will return all tracks added\n34 LUTES TR T U | (TES ol f =Tl T A T\n35 [T TR - T T T DT I A G- T [\n36 _\n37\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 468,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gk | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7% 17 ’ def list\n18 # returns list of all music tracks added to array\n# 19 | end\ngo 1]\nP2 S P of -} (- 5 €1 T I T TR (5 £\ncl 22 |\n23 ‘ # Adding tracks to tracker\nPZ I DI TTES Ul - Te T | (TES Do) f o= Te T )\n25 LTS TR ST CLMET [ TR T G LA A\n13 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’\n32\n33 #3) # List method will return all tracks added\n34 LUTES TR T U | (TES ol f =Tl T A T\n35 [T TR S TG LT T A G121\n36 _\n37\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 469,
    "text": "oeeo 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gk | Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB U ’ def list\n18 # returns list of all music tracks added to array\n& 19 | end\ng 20\nP4 SR P of -} - 5 €1 T I T TR (5 £\ncl 22 |\nP ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T Y T\n35 music_tracker.add('Hello - adele')\n36 _\n37\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 470,
    "text": "oeeo 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gk | Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB U ’ def list\n18 # returns list of all music tracks added to array\n& 19 | end\ng 20\nP4 SR P of -} - 5 €1 T I T TR (5 £\ncl 22 |\nP ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T Y T\n35 music_tracker.add('Hello - adele')\n36 _\n37\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 471,
    "text": "oeeo 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gk | Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB U ’ def list\n18 # returns list of all music tracks added to array\n& 19 | end\ng 20\nP4 SR P of -} - 5 €1 T I T TR (5 £\ncl 22 |\nP ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T Y T\n35 music_tracker.add('Hello - adele')\n36 —\n37\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 472,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumessmons o |8 Gk | Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB U ’ def list\n18 # returns list of all music tracks added to array\n& 19 | end\ng 20\nP4 SR P of -} - 5 €1 T I T TR (5 £\ncl 22 |\nP ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T Y T\n35 music_tracker.add('Hello - adele')\n36 —\n37\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 473,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumessmons o |8 Gk | Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB U ’ def list\n18 # returns list of all music tracks added to array\n& 19 | end\ng 20\nP4 SR P of -} - 5 €1 T I T TR (5 £\ncl 22 |\nP ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T Y T\n35 music_tracker.add('Hello - adele')\n36 —\n37\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 474,
    "text": "o000 06_music_design.md — Skill_Challenges DBEmlos\n(@ ®oumessmonnss x |8 Gk Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\nje; 16 © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nB U ’ def list\n18 # returns list of all music tracks added to array\n& 19 | end\ng 20\nP4 SR P of -} - 5 €1 T I T TR (5 £\ncl 22 |\nP ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T Y T\n35 music_tracker.add('Hello - adele')\n36 _\n37\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 475,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ ®miesmnnis o 8 Gma s et Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track’\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T T\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 476,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ ®miesmnnis o 8 Gma s et Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track’\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T T\n35 music_tracker.add('Hello - adele’')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 477,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ ®miesmnnis o 8 Gma s et Bo0- @ Do+ ¥ x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def llst © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\nPZ I DI UTES Ul { = To T | (TES Do) f =T T )\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T T\n35 music_tracker.add('Hello - adele’')\n36 music_tracker.add(’lie - nf')\n37\n38\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 478,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumsssmonns o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\nb1} # Adding empty string will fail\nEUIE 73 BN (TS Kol f o= T (T R | (TES Ul o =Tel T T\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 LTES TR T I | (TES o f =Tl T T\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 479,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumsssmonns o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LIS TR T T T LT I A G- T T )\n26 music.list => ['Hello - adele'l\n27\ni)\n29 # Adding empty string will fail\nEUIE 73 BN (TS Kol o o= Te 1 R | (TES Ul o =Tel T T\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 480,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumsssmonns o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LIS TR T T T LT I A G- T T )\n26 music.list => ['Hello - adele'l\n27\ni)\n29 # Adding empty string will fail\nEUIE 73 BN (TS Kol o o= Te 1 R | (TES Ul o =Tel T T\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 481,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumsssmonns o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 LIS TR T T T LT I A G- T T )\n26 music.list => ['Hello - adele'l\n27\ni)\n29 # Adding empty string will fail\nEUIE 73 BN (TS Kol o o= Te 1 R | (TES Ul o =Tel T T\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 482,
    "text": "oeeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumsssmonns o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele’')\n26 music.list => ['Hello - adele'l\n27\ni)\n29 # Adding empty string will fail\nEUIE 73 BN (TS Kol o o= Te 1 R | (TES Ul o =Tel T T\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 483,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumsssmonns o |8 Gl | weo- @ D 48 8 x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def Ust © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele’')\n26 music.list => ['Hello - adele'l\n27\ni)\n29 # Adding empty string will fail\nEUIE 73 BN (TS Kol o o= Te 1 R | (TES Ul o =Tel T T\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 484,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0B.music_design.md > (5 # Adding tracks to tracker .\np 17 | def llst © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\ng 21 3. Create Examples as Tests\n» 22 ‘\n© px] # Adding tracks to tracker\nPZ I DI TS Ul d =T T | (TES o) f =T T 2]\n25 music_tracker.add('Hello - adele’')\n26 music.list => ['Hello - adele']\n27\n28\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(’lie - nf')\nk4\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 485,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumsssmons o |8 Gl | 200 @ Do+ ¥ x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 |  end\n2 20\n2] P S PO of -3 (W 6T 1) DY (3 4]\ne 2|\n© 23 # Adding tracks to tracker\nPLONE 2 DI TS il =T e | TS el =T T 8 T\n25 LIS TR T LT [ T A G- T R A )\n26 LTES TR S T SE N R AT IR T T |\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37\n38\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 486,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 |  end\n2 20\n2] P S PO of =) {9 SIET T T (3 4]\ne 2|\n© 23 # Adding tracks to tracker\nPLONE 2 DI TS il =T e | TS el =T T 8 T\n25 LIS TR T LT [ T A G- T R A )\n26 LTES TR S T SE N R AT IR T T |\n27\n28\n29 # Adding empty string will fail\nU 73NN (TS Collh 4T (CLE | IVCH e Tl T 0 T\n31 |  music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34 LUES DR o Te (T [T K - Tel T Y\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37\n38\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 487,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 |  end\n2 20\n2] P S PO of =) {9 SIET T T (3 4]\ne 2|\n© 23 # Adding tracks to tracker\nPLONE 2 DI TS il =T e | TS el =T T 8 T\n25 LIS TR T LT [ T A G- T R A )\n26 LTES TR S T SE N R AT IR T T |\n27\n28\n29 # Adding empty string will fail\nU 73NN (TS Collh 4T (CLE | IVCH e Tl T 0 T\n31 |  music_tracker.add('') => 'You cannot input an empty string as a track®\n32\n33 #3) # List method will return all tracks added\n34 LUES DR o Te (T [T K - Tel T Y\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37\n38\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 488,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 |  end\n2 20\no P B T of -1 9 6T Y T T 0\ne 2|\n© 23 # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 |  music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LUES DR - To TR [T K = Tel T Y\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 489,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk(] music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 490,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 491,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk(] music_tracker.add('lie - nf')\nk¥\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 492,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 493,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 494,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 495,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 496,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 497,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 498,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 499,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 500,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 501,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 502,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 503,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmuo;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2 P2 S T of -} - 5 €1 T L TR TR (5 £\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 504,
    "text": "X X 06_music_design.md — Skill_Challenges DEemlos\ngcmmmux;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 18 # returns list of all music tracks added to array\n19 |  end\n2 20\no P B T of -1 9 6T Y T T 0\ne 2\n23 # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\ni)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 |  music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LUES DR - To TR [T K = Tel T Y\n35 music_tracker.add('Hello - adele')\n36 ! J?’L\". nf*)| l\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf'] ¢\n38\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 505,
    "text": "X X 06_music_design.md — Skill_Challenges DEemlos\ngcmmmux;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 # Adding tracks to tracker .\np 17 | def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% 18 # returns list of all music tracks added to array\n19 | end\n2 20\n2] P B TR of /51 W S ET T TR T 0\n- 22 ‘\n© 23 # Adding tracks to tracker\nPLZINE SOIN UTT-S U 4= Tl I [TES T - Te T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\ni)\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | LTES R - Te (T [ L I CITIRC T T T L= [ S UL R IR T\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37 r.list => ['Hello - adele', 'lie - nf i\n38\n@ 06_music_design_challenge._specsb U &\nspec > @ 06_music_design_chalienge_spec.rs\n- |\n®\n&\n"
  },
  {
    "seconds": 506,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n@ *Omsmmnnd ¢ |8 G | weo- @ D 48 4 x\n¥ 0Bmusic_design.md > (5 # Adding tracks to tracker .\np 19 | o © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\nb4 B T of ) T SET ) T T (1 6\n2 2\n2] pic3 ‘ # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\nb1} LTS TR 3 S A Y A T A -0 |\n27\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32 i\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Pl o= T T R B B S G AR T RRRET 3 (U TR ) A |\n38 i ’\n00|\n49\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 507,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n@ *Omsmmnnd ¢ |8 G | weo- @ D 48 4 x\n¥ 0Bmusic_design.md > (5 # Adding tracks to tracker .\np 19 | o © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\nb4 B T of ) T SET ) T T (1 6\n2 2\n2] pic3 ‘ # Adding tracks to tracker\n» 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\nb1} LTS TR 3 S A Y A T A -0 |\n27\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32 i\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Pl o= T T R B B S G AR T RRRET 3 (U TR ) A |\n38 i ’\n39 [ S R\n49\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 508,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n@ ®Oemiesmonny o |8 G i it w0~ @ O -5 ¥ x\n¥ 0B.music_design.md > (5] # Adding tracks to tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\nY\ng pic] ‘ # Adding tracks to tracker\n- PLINE S DI TES Tol 4 -To (LR | TS o T T o)\n© 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\n28\npi:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | (LIRS TR - To T T [ [ B (TR - L i (T I T - TR SV i 1 - R - 1o\n32 )\n33 #3) # List method will return all tracks added\n34 LIRS TR - T T O e g T T oY)\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Pl =T TR B B EC S G, Y R T RET 1 (SUPSR F T-RE ) A |\n38 i ’\nA4\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 509,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nQ.MMWUQ;@MQ nen- @ Don +~ B & x\n¥ 0Bmusic_design.md > () # Adding tracks 10 tracker .\np 19 | e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\n£ 2 ‘\ng px] # Adding tracks to tracker\n- PZIE s I TTES Tol 4 To L LTS U - T L o)\n© 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\n28\npi} # Adding empty string will fail\nL PN (TES TR d - T T LTS T f o T T A T\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n2 )\n33 #3) # List method will return all tracks added\n34 LTS Tl o Te T E L (TES T T T T\n35 LUES TR T T [ L T A T [ (A\nk{3 LUES TR =T TP [ [ B TR 1} o]\n37 LITES Pl =T TR B B R I R T (2 AR B TR 1) A |\n38 i ’\nol\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 510,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nQ.MMWUQ;@MQ nen- @ Don +~ B & x\n¥ 0Bmusic_design.md > () # Adding tracks 10 tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\n£ 2 ‘\ng px3 # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS ol - T TR | (VT U f Tl (T G T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie = nf']\n38 i )\no]\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 511,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nQ.MMWUQ;@MQ nen- @ Don +~ B & x\n¥ 0B.music_design.md > () # ASding tracks 0 tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\n£ 2 ‘\ng px3 # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS ol - T TR | (VT U f Tl (T G T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie = nf']\n38 i )\no]\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 512,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nQ.MMWUQ;@MQ nen- @ Don +~ B & x\n¥ 0B.music_design.md > () # ASding tracks 0 tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\n£ 2 ‘\ng px3 # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS ol - T TR | (VT U f Tl (T G T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie = nf']\n38 i )\no\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 513,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nQ.MMWUQ;@MQ nen- @ Don +~ B & x\n¥ 0B.music_design.md > () # Adding tracks 1o tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\n£ 2 ‘\ng px3 # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS ol - T TR | (VT U f Tl (T G T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie = nf']\n38 i )\noM\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 514,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nQ.MMWUQ;@MQ nen- @ Don +~ B & x\n¥ 0B.music_design.md > () # Adding tracks 1o tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\n21 3. Create Examples as Tests\n£ 2 ‘\ng px3 # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\n° 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\npi:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS ol - T TR | (VT U f Tl (T G T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie = nf']\n38 i )\noM\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 515,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ mnnas & 8 G s et seo- @ Do+ 8 ¥ x\n¥ 0Bmusic_design.md > ) ¥ Adding tracks to tracker .\np 19 | P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 29\n21 3. Create Examples as Tests\n£ 2\nge 23 ’ #Mdinq\"t_ncks‘ to tracker\n- 24 #1) music_tracker = MusicTracker.new\ni b1 music_tracker.add('Hello ~ adele’)\nP13 music.list = ['Hello - adele']\n27\n28\npi:] # Adding empty string will fail\nL 7N TS R A T T 115 19 -1 T N T\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32 ’\n33 #3) # List method will return all tracks added\n34 LTS i T T (VRS Ty £ T X T T\n35 music_tracker.add('Hello - adele')\n36 LUES R d = T (L [ [ S TR 1} A\n37 LTSI {T= UM RS S L TR CIRET, T U ) A |\n38\n30\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 516,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ ¥ mnnas & 8 G s et seo- @ Do+ 8 ¥ x\n¥ 0Bmusic_design.md > ) ¥ Adding tracks to tracker .\np 19 | P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 29\n21 3. Create Examples as Tests\n£ 2\nge 23 ’ # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\ni b1 music_tracker.add('Hello ~ adele’)\nP13 LTS TR S S A ARG IR T -1 |\n27\n28\npi:] # Adding empty string will fail\nL 7N TS R A T T (115 19 -1 T o]\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32 ’\n33 #3) # List method will return all tracks added\n34 LTS i - T T (VRS Ty £ T T T\n35 music_tracker.add('Hello - adele')\n36 LUES R d = T (L [ [ S TR 1} A\n37 LTSI {T= UM RS S L TR CIRET, T U ) A |\n38\noo ad\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n@\n&\n"
  },
  {
    "seconds": 517,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\n(@ *oumessmons o |8 Gl | weo- @ D 48 8 x\n¥ 0Bmusic_design.md > ) ¥ Adding tracks to tracker .\np 19 | end © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 20\nP& R T of -+ ) T ST ) (- T 13\n£ 2\ngs 23 ‘ # Adding tracks to tracker\n- 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\n28\npA:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\nk73\n33 #3) # List method will return all tracks added\nkL) LTES TR - T T | (15 T - T T T\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf'}\nk4 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\nB e waddmet\n40\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 518,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\n(@ *otmiesminnsy o |8 S e bt weo- @ D 48 8 x\n¥ 0Bmusic_design.md > ) ¥ Adding tracks to tracker .\np 19 | e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n3 p1)\n3 O T of T 1 - ST 1) - T 1 &\n2 2 ‘\ngs 23 # Adding tracks to tracker\n- PZINE OIS Tl 4 Te CTE TTES T o= T T T\n© bl LB TR L T LT [ [ T A T [ A )\n26 music.list => ['Hello - adele']\n27\npi:i\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\nk7]\n33 #3) # List method will return all tracks added\n34 LB TR - T CT e | (TE5 T T T TN\n35 LUES TR T LR [ T A T [ A\n36 music_tracker.add('lie - nf'})\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 ) #add method wil\n490\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 519,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\n(@ *oumessmons o |8 Gl | weo- @ D 48 8 x\no) * W:;f'mm'w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ’\ngo 23 # Adding tracks to tracker\n- PZINE B VTS Tl N - Te T | (T T T T T\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\npi) # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 LITES Tl - 1o T T G B i (VTR LA DT L 14 40 DT IR R IR - T\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n30 #) #add method wiWfatlad\n\n490\n\n@ 06_music_design_challenge_spec.b U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 520,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #) # add method will fall if mustc|\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 521,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #4) # add method will fail if mustc track\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 522,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #) # add method will fail if music trackalred\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 523,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #4) # add method will fail if music track already\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 524,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #4) # add method will fail if music track already ecis\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 525,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #4) # add method will fail if music track already extsts\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 526,
    "text": "o000 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmux;%j neo - @ Beos +- B & x\no) * W:;f'mu.w © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\nk p1]\n\n21 3. Create Examples as Tests\n2 2 ‘\ngo 23 # Adding tracks to tracker\n- PZINE 2 OO TES ol 4= To CLE L TR T T U TN\n© il music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27\n\npi:i\n\n29 | # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') = 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTS Kol - T TR L (VT T - Tl T G T2\n\n35 LUTES TR T T [ L T A T [ A )\n\n36 music_tracker.add('lie - nf'})\n\n37 LITES Kol T TP B E S B S R T, (Y KRN B TR 1) A |\n\nkl:}\n\n39 #4) # add method will fail if music track already exists dnarrf\n\n490\n\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n\n.|\n®\n&\n"
  },
  {
    "seconds": 527,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create Exalples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\nk 22 ‘\n23 # Adding tracks to tracker\n& PZIE S OIN TES ol - To CLE L TEE T T T T\ng il music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\ne 27\npi:i\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32 i\n33 #3) # List method will return all tracks added\n34 LTS Kol - T TR L (VT T - Tl T G T2\n35 LUTES TR T T [ L T A T [ A )\n36 music_tracker.add('lie - nf'})\nk4 L TES Dol =T TP B U S R S R T, () (SRR T ) A |\n38\n33 #4) # add method will fail if music track already exists in array\n40\nS 5\n42\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 528,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create Exalples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\nh 22 ‘\n23 # Adding tracks to tracker\n& PZIE S O IN TES ol 4T CLIE L TER T T T T\ng il music_tracker.add('Hello - adele')\nb1 music.list => ['Hello - adele']\ne 27\npi:i\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS Kol - T TR L (VT T - Tl T G T2\n35 LUTES TR T T [ L T A T [ A )\n36 music_tracker.add('lie - nf'})\nk4 L TES Dol =T TP B E S R Y R N1, () R T ) A |\n38\n33 #4) # add method will fail if music track already exists in array\n40\nA I\n42\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 529,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create Exanples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\nh 22 ‘\n23 # Adding tracks to tracker\n& PZINE S OIN TES Tl 4= To CLE L TR T T T T\ng il LU TR T T OET LT T A T T T E\nb1 music.list => ['Hello - adele']\ne 27\npi:i\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') = 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 LTS Kol - T TR L (VT T - Tl T G T2\n35 LUTES TR T T [ L T A T [ A )\nkL) LIES R A =T LT [ [ B TR 1§ A\nk4 L TES Dol =T T PR B U S R I R T, () SRR T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40\ne\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 530,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\ng.mmmu.?%j neo - @ Beos +- B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create Exalples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\npx] # Adding tracks to tracker\n& PZINE S O IN TES ol 4= To CLIE L TR T T T T\ngs 25 music_tracker.add('Hello -~ adele')\nb1 music.list => ['Hello - adele']\ne 27\npi:i\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LTS Kol - T TR L (VT U - Tl T G T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf'})\nkY L TES Dol =T T PR B U S R S R T, () FSRD T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40\na —\n42\n@ 06_msic_design_challenge_specsb U ®\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 531,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n- 26 music.list => ['Hello - adele']\n© 27\n|\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 ‘ music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40\ne ———\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 532,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n- 26 music.list => ['Hello - adele']\n© 27\n|\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 ‘ music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40\ne ———\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 533,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\n|\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40\n41 music\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 534,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\nY ¥ 06 music_desgnmd U & @ 08 muske design_challeogesby weo- @ BDos +~ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ptes as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\n]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk{3 music_tracker.add('lie - nf'})\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39\n49 music b\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 535,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\nn\\\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\na0\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 536,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\nn\\\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\na0\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 537,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\nn\\\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\na0\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 538,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\nn\\\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\na0\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 539,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\nY ¥ 06 music_desgnmd U & @ 08 muske design_challeogesby weo- @ BDos +~ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\n]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk{3 music_tracker.add('lie - nf'})\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n10\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 540,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\n|\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n49 music_tracker = MusicTracker.new\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 541,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\n|\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 542,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\nn\\\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 543,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\ngcmmmut;%j weo- @ Do+ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\nn\\\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nkL) LUES R A =T LT [ [ S TR 1§ A\nks music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 544,
    "text": "oceeo 06_music_design.md — Skill_Challenges DBEmlos\nY ¥ 06 music_desgnmd U & @ 08 muske design_challeogesby weo- @ BDos +~ B & x\n¥ 0Bmusic_design.md > (5 ¥ Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\n23 # Adding tracks to tracker\n& PZIE 3 O TS Tl S - Te T L (1T T F-Te T T\nge 25 music_tracker.add('Hello -~ adele')\n26 music.list => ['Hello - adele']\ne 27\n]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track’'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk{3 music_tracker.add('lie - nf'})\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rd\n.|\n®\n&\n"
  },
  {
    "seconds": 545,
    "text": "ocee 06_music_design.md — Skill_Challenges DEemlos\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 21 3. Create m‘ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\npii # Adding tracks to tracker\n& P2 = O TS o - Te T | (TE T T KT O T\ng 25 | music_tracker.add('Hello - adele')\nb1 music.list => ['Hello - adele’']\n2\n27\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker,add('') = 'You cannot input an empty string as a track’\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - Tl TG L [T U - Lol T T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37 LTS Mol - Tt -1 o 6 3 R A T3 -V, 1) R £ -3 ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 L UTES Tl - TR | TES Tof f T 1T T\na\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 546,
    "text": "LY X 06_music_design.md — Skill_Challenges DEemlos\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 21 3. Create Exanples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\npii # Adding tracks to tracker\n& P2 = O TS o - Te Y | TS € T KT O T2\nB 5 ‘ music_tracker.add('Hello - adele’)\nb1 music.list => [‘Hello - adele']\n2\n27\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker,add('') = 'You cannot input an empty string as a track’\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - Tl TR L [T U - (el TG T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37 LTS Mol - Tt -1 o 6 E3 R A T3 -V, 1) R £ T3 ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 L TES Tl - T T | (TS T f T 1T TN\na\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 547,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEemlos\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby neo- 8 Don +~ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 21 3. Create Exalples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n% 22 ‘\nb # Adding tracks to tracker\n& 24 #1) music_tracker = MusicTracker.new\nge 25 ‘ LIVES R = T LT L T T A T T E )\n26 LTS T B T JE N A AR IR 1 -3 |\ne 27\n29 # Adding empty string will fail\nEUIE 73N TTES Tolh A - T LR LT T F T T TN\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 [UVES Tl d g T TR (TS U9 B Tel ST T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 LIRS o - T LR O U - Te T oY\na _\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 548,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEemlos\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby weo- @ Do+ B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\np 21 3. Create m.ples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\nk 22 ‘\n23 # Adding tracks to tracker\n& 24 #1) music_tracker = MusicTracker.new\ng 25 ‘ LIES PR T TN T TR R I\n- 26 LUES T B B SE N A A R BT I L |\n© 27\npic] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') = 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 [ UVES Kol - T T | (VT U =T (T T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf*)\nk¥ LTSS Kol - Tot - g 6 1 I A T3 R -, 1) R £ -3 ) A |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES C - T T T U - T T oY)\n. A —\n42\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 549,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Bes +- B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\nJel 21 3. Create Examples as Tests © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7% b7] ‘\nb # Adding tracks to tracker\n& LI DI VTS Dol 3o Te T L (1T 0 T T T\ng° 25 ‘ music_tracker.add('Hello - adele')\np{ LUES T B B SE ) A R BT I TR |\ne 27\npac] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 L UVES ol - T T | (VT U =Tl T T2\n35 music_tracker.add('Hello - adele')\nk{3 music_tracker.add('lie - nf')\nk¥4 LTS Kol - To L 6 1 I A T3 -, 1) R £ -3 ) A |\n38\n39 #4) # add method will fail if music track already exists in array\n40 L UVES Gl o - T T L (T U Tl T T2\na _\n42\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 550,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DBEmlos\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Bes +- B & x\n¥ 0Bmusic_design.md > ) # Adding tracks to tracker .\nJel 21 3. Create Examples as Tests © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7% b7] ‘\nb # Adding tracks to tracker\n& LI DI VTS Dol 3o Te T L (1T 0 T T T\ng° 25 ‘ music_tracker.add('Hello - adele')\np{ LUES T B B SE ) A R BT I TR |\ne 27\npac] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 L UVES ol - T T | (VT U =Tl T T2\n35 music_tracker.add('Hello - adele')\nk{3 music_tracker.add('lie - nf')\nk¥4 LTS Kol - To L 6 1 I A T3 -, 1) R £ -3 ) A |\n38\n39 #4) # add method will fail if music track already exists in array\n40 L UVES Ol o - T T | (TS e - Tol T T2\na _\n42\n@ 06_music._design_challenge_spec.rb U ®\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 551,
    "text": "XX} 06_music_design.md — Skill_Challenges Inf=Nn R\ngcmmmut;mj weo- @ Do+ B & x\n¥ OBmusic_design.md > E)¥ Adding tracks to trackee .\np 2 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 23 | # Adding tracks to tracker\nLI DI VTS Dol 3o Te T L (1T 0 T T T\n& 25 ‘ music_tracker.add('Hello - adele')\ngs p{ LUES T B B SE ) A R BT I TR |\n27\ne 28\npac] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk{3 music_tracker.add('lie - nf')\nk¥4 LTSS Kol - Tt - g B R I A T3 -, 1) RS £ -3 ) A |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = Husipl‘_racker.ngw\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 552,
    "text": "XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby weo - & BDen +- B & x\np ¥ 22 > 2 ARG tacks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nLI DI VTS Dol 3o Te T L (1T 0 T T T\n& 25 ‘ music_tracker.add('Hello - adele')\ngs p{ LUES T B 6 SE A A R BT I TR |\n\n27\n& ‘\n\npac] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 L UVES ol - T T | (VT U =Tl T T2 i\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 LU TR T T B i B, (R RERET I (AR E TS 1 B |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 music_tracker = Husipl‘_racker.ngu\n\n41 music_tracker.add(’Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 553,
    "text": "XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby neo- 8 Bwn +- B & x\np ¥ 22 > 2 ARG tacks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nLI DI VTS Dol 3o Te T L (1T 0 T T T\n& bt music_tracker.add('Hello - adele')\ngs p{ LUES T B 6 SE A A R BT I TR |\n\n27\n# % ‘\n\npac] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 L UVES ol - T T | (VT U =Tl T T2 i\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 LU TR T T i A, (R RERET I (AR E TS 1 B |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 music_tracker = MusicTracker.new\n\n41 LULS Gl T T T L T IR G T )\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 554,
    "text": "XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEeo- 8 Do +- B & x\np ¥ 2 4 L ARG tncks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nLI SV TES TR S - T T L (TS T F T T TN\n& 25 music_tracker.add('Hello - adele')\ngs p{ LUES T B 6 SE A A R BT I TR |\n\n27\n® % ‘\n\npac] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 L UVES ol - T T L (VTS U =T T T2 i\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 LU TR T TR i A, (R RERET I (AR E TR 1 B |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 music_tracker = MusicTracker.new\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 555,
    "text": "XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby neo- 8 Don +~ B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 556,
    "text": "XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\n¥ 08.music_design.md > (5) # Adding tracks to tracker i\np 2 : © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 23 | # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\ng 26 music.list => ['Hello - adele']\n27\ne 28\npic] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nk{3 LU TR T LT T TR ) A\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 [UES T o - To T L (TTS U T T T2\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 557,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 558,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 559,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby neo- 8 Don +~ B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 560,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 LU TR T LT T TR ) A\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U ®\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 561,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby neo- 8 Don +~ B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 562,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby neo- 8 Don +~ B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 563,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 564,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 565,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 566,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 567,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 568,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 569,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 570,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06_music_desgnmd U @ @ 08 muske design_challegesby nEo- B Beos +- B & x\np ¥ 22 4 EL ATIG tcks ptackar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 23 | # Adding tracks to tracker\n\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n\n27\ne 28\n\npic] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nk{3 music_tracker.add('lie - nf*)\n\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 [UES T o - To T L (TTS U T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 571,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06 music_desgnmd U & @ 06_music_design_challengesh nEo- B Bes +- B & x\n¥ 08.music_design.md > () # Adding tracks to tracker A\np 22 - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 23 | # Adding tracks to tracker\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n27\ne pi:}\npic] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU T T DT T TR T L U\nk{3 music_tracker.add('lie - nf*)\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 [UES T o - To T L (TTS U T T T2\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 572,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06 music_desgnmd U & @ 06_music_design_challengesh nEo- B Bes +- B & x\n¥ 08.music_design.md > () # Adding tracks to tracker A\np 22 - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 23 | # Adding tracks to tracker\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n27\ne pi:}\npic] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU T T DT T TR T L U\nk{3 music_tracker.add('lie - nf*)\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 [UES T o - To T L (TTS U T T T2\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 573,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06 music_desgnmd U & @ 06_music_design_challengesh nEo- B Bes +- B & x\n¥ 08.music_design.md > () # Adding tracks to tracker A\np 22 - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 23 | # Adding tracks to tracker\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n27\ne pi:}\npic] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU T T DT T TR T L U\nk{3 music_tracker.add('lie - nf*)\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 [UES T o - To T L (TTS U T T T2\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 574,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges Inf=Nn Qi\nY ¥ 06 music_desgnmd U & @ 06_music_design_challengesh nEo- B Bes +- B & x\n¥ 08.music_design.md > () # Adding tracks to tracker A\np 22 - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n7 23 | # Adding tracks to tracker\nPZIE S I TTES TR A - To L (1T U H- T T T\n& 25 music_tracker.add('Hello - adele')\ngs 26 music.list => ['Hello - adele'l\n27\ne pi:}\npic] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU T T DT T TR T L U\nk{3 music_tracker.add('lie - nf*)\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 [UES T o - To T L (TTS U T T T2\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 575,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nQ ¥ 06_music_designmd U & @ 06 music_design challengeshy nEo- B Beos +- B & x\n¥ 08.music_design.md > () # Ading tracks 10 tracker A\np 2 h © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% P} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\ne 26 music.list => ['Hello - adele']\n27\n? b1}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LUES TR T KT S (o g T T oY)\n35 LU T T LT T T A Rt [ E )\n36 music_tracker.add('lie - nf')\n37 LUEF TR T TR B S R (D R AT [ (-G TR 1) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n1|\n®\n&\n"
  },
  {
    "seconds": 576,
    "text": "ocoee 06_music_design.md — Skill_Challenges Inf=Nn R\nQ ¥ 06_music_designmd U & @ 06 music_design challengeshy nEo- B Beos +- B & x\n¥ 08.music_design.md > () # Ading tracks 10 tracker A\np 2 h © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% P} ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\ne 26 music.list => ['Hello - adele']\n27\n? b1}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 LUES TR T KT S (o g T T oY)\n35 LU T T LT T T A Rt [ E )\n36 music_tracker.add('lie - nf')\n37 LUEF TR T TR B S R (D R AT [ (-G TR 1) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n1|\n®\n&\n"
  },
  {
    "seconds": 577,
    "text": "X X 06_music_design.md — Skill_Challenges Inf=Nn R\nQ ¥ 06_music_designmd U & @ 06 music_design challengeshy nEo- B Beos +- B & x\n¥ 08.music_design.md > () # Ading tracks 10 tracker A\n0 2 - © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n% P ‘ # Adding tracks to tracker\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\ne 26 music.list => ['Hello - adele']\n27\n? b1}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU T T LT T TR T L F )\n36 music_tracker.add('lie - nf')\n37 LUEF TR T IR B S R (D R AT I TR R TR ) B |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42\n43\n@ 06_music_gdesign_challenge_specsb U ©\n96C > @ 06_music_design_challenge_spec.i\n.|\n®\n&\n"
  },
  {
    "seconds": 578,
    "text": "X X 06_music_design.md — Skill_Challenges Inf=Nn R\ns ¥ 06 music_desgnmd U & @ 08 muske desin_chalkogesby neEo- 8 Bor +- B & x\n0 = “;zmmmm’@'mw'm © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] :\n3 i ‘ # Adding tracks to tracker\n\nPLIE 7 I TTES ol d - T L (115 ol BT L T\n& 25 music_tracker.add('Hello - adele')\ng 26 music.list => ['Hello - adele']\n\n27\n? b1}\n\n29 # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\nk7\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 LU TR T TR B S A, (R REET [ (LR R TR ) i |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n49 LTS Tl d - Tl Tl L [T U - e T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 579,
    "text": "(XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06 music_designand U X | @ 08 usic_desin shaleogeshu neo- B Dor +- 8 & x\np ¥ 2 0 B ASG i packar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n7 i} ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\n2] 26 music.list => ['Hello - adele']\n\n27\n? b1}\n\npi] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 LTES TR - T T | (TS T T T TN\n\n35 LIRS TR T T [ L A Rt [ A\n\n36 music_tracker.add('lie - nf*)\n\n37 LU TR T TR B S S B, (R REET [ (R B TR 1 B |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n490 music_tracker = MusicTracker.new\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 580,
    "text": "(XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06 music_designand U X | @ 08 usic_desin shaleogeshu neo- B Dor +- 8 & x\np ¥ 2 21 TG s packar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n% px} ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\ng 26 music.list => ['Hello - adele']\n\n27\n? b1}\n\np1] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 L UVES Coli - T TR | (VT o f =Tl (T G T2\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 music_tracker = MusicTracker.new\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 581,
    "text": "(XX} 06_music_design.md — Skill_Challenges Inf=Nn R\nY ¥ 06 music_designand U X | @ 08 usic_desin shaleogeshu neo- B Dor +- 8 & x\np ¥ 2 21 TG s packar © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n% px} ‘ # Adding tracks to tracker\n\n24 #1) music_tracker = MusicTracker.new\n& 25 music_tracker.add('Hello - adele')\ng 26 music.list => ['Hello - adele']\n\n27\n? i)\n\np1] # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add('') => 'You cannot input an empty string as a track'\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 L UVES Coli - T TR | (VT o f =Tl (T G T2\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n\n38\n\n39 #4) # add method will Egil if music track already exists in array\n\n40 LTS ol - Tl T (VT U - T T T2\n\n41 music_tracker.add('Hello - adele')\n\n42\n\n43\n\n@ 06_music_design_challenge_specsb U @\n96C > @ 06_music_design_challenge_spec.i\n\n.|\n®\n&\n"
  },
  {
    "seconds": 582,
    "text": "(X X 06_music_design.md — Skill_Challenges DBEmlos\ng.ou-n-\\u-hmux neo- 8 Bwn +- B & x\n¥ 0B.music_design.md > E) # Adding tracks 10 tracker N\n0o 32 ¥ : © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n33 #3) # List method will return all tracks added\n% 34 LIRS TR o - To TR TS e g Tt T O T\n& 35 music_tracker.add(‘Hello - adele')\n- 36 music_tracker.add('lie - nf*)\n& k¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n2 38\n39 #4) # add method will fail if music track already exists in array\n49 LTS TR - T T | (TES T T (T TP\n41 [ TR - T T T L TR IR - T Y (D\n42 music_tracker.add('Hello - adele') => 'Track already exists!\n43 o\n44\n45\n46\n47\n48\ni\n@ 06_music_design_challenge_specsb U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 583,
    "text": "o000 06_music_design.md — Skill_Challenges DBEmlos\nQcm—:mwux;uwf wEeEo- o D+~ B & x\n¥ 0Bmusic_design.md > (£ ¥ Asding tracks 10 trackes .\nJo) e e et © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n8 class MusicTracker\nS 9 | def initalize\n> 10 # stores tracks in an array\n11 end\nB 12 ‘\nP 13 def add{track)\n14 # adds the tracks to the array as strings\n15 | end\n16\n17 def list\n18 # returns list of all music tracks added to array\n19 end\n20 [\nb2 S TR of Y1 S 52T T T T 8\n22\n23 | # Adding tracks to tracker\nPLINE SO TS TR - o TG, (TR ol - T (TN T\n25 nusic_tracker.add(;qello - adele')\nb1 ‘ music.list => ['HeTlo - adele']\n27\n28 ‘\n29 # Addina emptv strina will fail\n@ 06_music_design_challenge specsd U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 584,
    "text": "o000 06_music_design.md — Skill_Challenges DBEmlos\nQcm—:mwux;uwf wEeEo- o D+~ B & x\n¥ 0Bmusic_designmd > (£ ¥ Asding tracks 10 trackes B\np ; 4 WANL LU auu LIaCKS L VE LISLENEU W dilu SEE o LidL Ul wieis Oommintmm-omm?mo-clmle Skill_Challms \\[]\nB 6\n> 7 2. Design the Class Interface\n5 8 class MusicTracker\n& 9 |  def initalize\n% 10 # stores tracks in an array\n11 | end\n12 ‘\n13 | def add{track}\n14 # adds the tracks to the array as strings\n15 | end\n16\n17 def list =\n18 # returns list of all music tracks added to array\n19 | end\n20\n21 3. Create Examples as Tests\n22|\ni) | # Adding tracks t_o]Itrgcknr\n24 #1) music_tracker = MusicTracker.new\n25 | music_tracker.add(‘Hello - adele')\n2R mucir Tiet == ['Halla - adala'l\n@ 06_music_design_challenge_specsd U @\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n@\n&\n"
  },
  {
    "seconds": 585,
    "text": "o000 06_music_design.md — Skill_Challenges DBEmlos\nlg ¥ 06_rmusic_designmd U X @ 08_music_design_challengesh U RO 8 Do+~ B & x\n¥ 0B.music_design.md > (5] # Adding tracks (o tracker .\n0 < el east © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n18 # returns list of all music tracks added to array\n% 19 end\nN 20\nb G PO of -} {0 76T T - T 15 £\nB 22 ‘\n@ 23 | # Adding tracks to tracker\nP2 S SO TES ol - To L | T e - T T o ()\n25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\n28 |\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new b\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 lusic_tracker.add(jqello ~ adele')\n36 music_tracker.add(“lie - nf'}\n37 LUTES R { e T PR B S i A T R BT, 1) PR TN i |\n38\n39 #4) # add method will fail if music track alreadv exists in arrawv\n@ 06_music_design_challnge specsd U &\nspec > @ 06_music_design_chalienge_spec.m\n.|\n®\n&\n"
  },
  {
    "seconds": 586,
    "text": "(XX} 06_music_design.md — Skill_Challenges Inf=Nn R\n(G ook sesonndy X | @ 06 mise s shubergesh ueao- @ Do+ B & X\n¥ 0B.music_design.md > (5 # ASing racks to tracker .\np ;; < MLSWuD Gee T FE L tsw SO hataiedhi it © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 28\n> 29 | # Adding empty string will fail\nELIE P3N TES TR 4 o= 1o T Hu_si.c\"l'rackgr.neu\nB8 31 | music_tracker.add('') = 'You cannot input an empty string as a track’\n32\n2\n¢ 33 #3) # List method will return all tracks added\n34 LTS TR T T [TE g g-Tel T T2\n35 music_tracker.add(‘Hello - adele')\n£ music_tracker.add('lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTS TR -V T (TER T fg-Ta T\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!®\n43\n44\n45 ]I\n46\n47\n48\n@ 06_music_design_chaliangespecsb U @\n96C > @ 06_music_design_challenge_spec.i\n.|\n@\n&\n"
  },
  {
    "seconds": 587,
    "text": "(X X 06_music_design.md — Skill_Challenges DBEmlos\nY ¥ 08_music_designmd U X @ 08 music_design_challengeshu. neo - @ Don ++ B & x\n¥ 0B.music_design.md > (5 # ASding racks to tracker .\n0 ;; S Reatl SLoLT w0 wus o © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nb 28 ‘\nP # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n&8 31 | music_tracker.add(*') = 'You cannot input an empty string as a track’\n32\no 33 #3) # List method will return all tracks added\n34 LTS TR d T T (TES T - Tl (TR T\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(*lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add(\"Hello — adele') => 'Track already exists!\n43\n44\n45\n46\n47\n48\n@ 06_music_design_challange.specsd U &\nspec > @ 06_music_design_chalienge_spec.rs\n.|\n®\n&\n"
  },
  {
    "seconds": 588,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges =N A\n@ ¥t e g wo- @ o +5 5\n] it oOUSTmR i ot CUZAA SV rtemes 3\n%\n&\n; |\n?\n\n@ 06_music_design_challange.specsd U &\n\n5p6C > @ 06_music.design_challenge_spec. .\n\nL\n\n(@)\n&\n"
  },
  {
    "seconds": 589,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn g\n) ISR 4 v ionsbtrnmrty - e e\no T O into@USTIORT-Osuin-Pinto-C1TGMZASLA SKiUl Challenges ¥\nY\n&\nS |\np |\n\n@ 06_music_design_challange_spec.b U @ W\n\nspec > @ 06_music_design_challenge_spec.i.\n\nP I\n\n®\n&\n"
  },
  {
    "seconds": 590,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges =N A\nL e— - i\n\nR 8 06 music_desan_chalkinge. b ) .\no ] 90O CTOAEAN S Ot\ni [\n&\n;4 |\n¢ |\n\n@ 06_music_sesan_challinge_spscrb U @ -\n\n506> @ 06_music_dasign_chasengs_spec. b\n\nO\nX\n\n®\n&\n"
  },
  {
    "seconds": 591,
    "text": "[ X X ) 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn g\n@aw—mwu* - 8 B+~ B & x\n2 T — o omdrplntoflASTIORT-Onein-Pirio-CLIGNZAIELS SKU1_ Grallanges [ '\nE |\nP\n5] |\n¢ |\n\n@ 06_music_desan_challange_spec.b U X o -\n\n5p6C > @ 06_music_design_challenge_spec. .\n\nM O S\n\n)\n&\n"
  },
  {
    "seconds": 592,
    "text": "(X X 06_music_design.md — Skill_Challenges DBEmlos\no .M%muxjmn.:‘j vEn - @ Den ++ B & x\n¥ 06 _stc_desnmn.md > ) # ASIng racks to tracker N\no ;; bl a-Lirend ol SO © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\ni 28\n> 29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n8 31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n? 32\n33 #3) # List method will return all tracks added\n34 LTS Kol - To T L (TS T - T XY T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\nEV I music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array =\n40 L TES TR - To T | (TES T - Te T TN\n41 music_tracker.add('Hello - adele')\n42\n43\na4\n45\n46\n47\n48\n@ 06_music_design_challange.specsb U %\nspec > @ 06_music_design_chalienge_spec.d\n.|\n®\n&\n"
  },
  {
    "seconds": 593,
    "text": "(X X 06_music_design.md — Skill_Challenges DBEmlos\n[ % 06k desinmd U X | @ 08 e desn chaergesh U | Ve - @ Don ++ B & x\n¥ 06 usic_design.md > (5 ¥ Adding tracks to tracker .\np zli 3. Créa(te Exilples as Tests © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\nR 22\npx) # Adding tracks to tracker\n& 24 #1) music_tracker = MusicTracker.new\ne P music_tracker.add('Hello - adele')\n26 LTS TR 6 15 S A T A T T T 1 |\ns 27 |\n28 |\n29 | # Adding empty string wﬁl fail\n30 #2) music_tracker.= MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track'\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker.= MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 ’ music_tracker.add('lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 [ UVES Roll - To T | VT Tef f =Tl T G T2\n41 music_tracker.add('Hello — adele')\n42 wsic_tracker.add('Hello - adele') => 'Track already exists!\n@ 06_music_desian_ENaINGRSPICID U X\nspec > @ 06 music_design_challenge_spec.>\n.|\n@\n&\n"
  },
  {
    "seconds": 594,
    "text": "'YX ) 06_music_design.md — Skill_Challenges DBEmlos\n[ix} ¥ 06_music_desigamd U X @ 06 rmusic_design_challengert U | vEo - @ R+~ B & x\n¥ 06_music_designmd > (5] ¥ Asding tracks 1o tracker :\n/O i0 I’ FETUrNS L1ST UF aLt mUs1C Tracks agoea 1o array OOMMMW-OMHMO-CIWMLl Skill_Challefges \\[]\n19 end\n% 20\nS P S P of -} O STET T R TR 1 6\n22\n5 23 | # Adding tracks to tracker\n2 PLINE SV ITES T 4 T CTE ITES Do 1o ST 27\n25 music_tracker.add('Hello - adele')\n26 i music.list => ['Hello - Jadele']\n27\n28 ‘\npi:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker:new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(’'lie - nf')\n37 | LTS Ui - T T PR B B S ] - R TR T, 1) FL & TR ) i |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin tranban = MiucicTrackar naw\n@ 06_music_design_chalienge specsd U X\nspec > @ 06_music_design_chalienge_spec.\n.|\n®\n&\n"
  },
  {
    "seconds": 595,
    "text": "'YX ) 06_music_design.md — Skill_Challenges DBEmlos\n[ix} ¥ 06_music_desigamd U X @ 06 rmusic_design_challengert U | vEo - @ R+~ B & x\n¥ 06_music_designmd > (5] ¥ Asding tracks 1o tracker :\n/O i0 I’ FETUrNS L1ST UF aLt mUs1C Tracks agoea 1o array OOMMMW-OMHMO-CIWMLJ Skill_Challefges \\[]\n19 end\n% 20\nS P S P of -} O STET T R TR 1 6\n22\n5 23 | # Adding tracks to tracker\n2 PLINE SV ITES T 4 T CTE ITES Do 1o ST 27\n25 music_tracker.add('Hello - adele')\n26 | music.list => ['Hello - adele']\n27\n28 ‘\n1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker:new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(’'lie - nf')\n37 | LTS Ui - T T PR B B S ] - R TR T, 1) FL & TR ) i |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin tranban = MiucicTrackar naw\n@ 06_music_design_chalienge specsd U X\n96C > @ 0B_MoSic_dasign_chasenge_spec.d W\n.|\n®\n&\n"
  },
  {
    "seconds": 596,
    "text": "o0eo 06_music_design_challenge_spec.rt — Skill_Challenges In=Nn Rl\n[ ¥ Ofmusic desgnnd U X | @ 08 music_design challngesb U | -\\ B+ B & x\n¥ 06_music_dasign,md > (5 ¥ Asding racks 1o tracker .\n/O i0 I' FETUrNS L1ST UF aLL mUs1C Tracks aguea Yo array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\n% 20\nIS b S T of -} (- T T ) ORI 1 6\n22\n5 pxl # Adding tracks to tracker\n2 PLINE SV ITES T 4 T CTE ITES Do 1o ST 27\n25 music_tracker.add('Hello - adele')\nbl LUES TR 6 B3 S B T A BT [ 0 |\n27\n28\npi:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(’'lie - nf')\n37 LTS U =T T PR B B S ] T R T N1, 1) FL & TR ) i |\n38\n39 #4) # add method will fail if music track already exists in array\ns | D R T T TR T NP X, OO PPN\n@ 06 music s Cnaliange specid U X o -\n$pec > @ 06_music_design_chalienge_spec.\n1 [ iIIIhhhhhhhhhh—™,\n®\n&\n"
  },
  {
    "seconds": 597,
    "text": "o0eo 06_music_design_challenge_spec.rt — Skill_Challenges In=Nn Rl\n@ ¥ 06 music_designmd U % @ 06 music_design.challengesb U - a8 B+ B & x\n¥ 06_music_design.md > (5 ¥ Asding tracks o tracker .\n/O 10 .' returns LAst OF aLL music TracKks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n19 end\nT\nIS b S P of /-1 () T T ) OB R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 LTS TR & ) JEC N A A R BT I U3 |\n27\n28\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' &\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(’'lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micdia +ranbar = MiciaTrasbar nau\n@ 06 music s CNBlNgR specId U & @ -\n5p6C > @ 06_music_dasign_chalenge_spec.\n1orequee| T\n@\n&\n"
  },
  {
    "seconds": 598,
    "text": "(- X N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=an R\nlg .Mmuxvnwy: - B Bwms +- B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\n/O 10 .’ returns L1st OT aiLl muUsicC Tracks aaaea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n19 end\nB 20\nIS b S P of -1 (- T T ) R R 1\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\nb music,list => ['Hello - adele'l]\n27\npi:]\npa] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | LTES TR - T T | (TE5 T - T T TV\n35 LITES R o T (TP [ L T R T R A\n36 music_tracker.add('lie - nf')\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nAo | micin Frankban — MieiaTrackar naw\n@ 06_music_gdesign_chaliange_specrd U @ @ -\n596C ) @ 06_music_Jauign_chalienge_spec.\n1orequee| 0\n®\n&\n"
  },
  {
    "seconds": 599,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n() ¥ Oamusic desgnnd U X @ 08 music design challengest - O B+ B & x\n¥ 06_music_design.md > () # Adding tracks to tracker .\np 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 LUTES R =T (LT [ L TR T [ A\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micin trankan — MiciaTrackar naw\n@ 06_music_gdesign_chaliange_specsd U X @ -\n5p6C > @ 06_music_design_chalenge_spec.\n1orequice| 0\n®\n&\n"
  },
  {
    "seconds": 600,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ¥ Oamusic desgnnd U X @ 08 music_design challrgest - O B+ B & x\n¥ 06_music_design.md > () # Adding tracks to tracker .\np 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\nkL LUTES R =T (LT [ L TR T [ A\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micin Fraskan — MicinaTrackar naw\n@ 06_music_gesign_chaliange_specsd U X @\n5p6C > @ 06_music_design_chalenge_spec.\n1orequie| T\n®\n&\n"
  },
  {
    "seconds": 601,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 08 music_designmd U X @ 08 music_design_challengert U - O [DF IR = I\n¥ 06_music_design.md > () # Adding tracks to tracker .\n/O 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\nkL LUTES R =T (LT [ L TR T [ A\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micin Fraskan — MicinaTrackar naw\n@ 06_music_gdesign_chaliange_specsd U ® @\n506 > @ 0BMusic_design_chalienpe_spec.\n1 require tef 7\n®\n&\n"
  },
  {
    "seconds": 602,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 08 music_designmd U X @ 08 music_design_challengert U - O [DF IR = I\n¥ 06_music_design.md > () # Adding tracks to tracker .\n/O 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\nkL LUTES R =T (LT [ L TR T [ A\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micin Fraskan — MicinaTrackar naw\n@ 06_music_gesign_chaliange_specsd U ® @\n506 > @ 0BMusic_design_chalienpe_spec.\n1 require 'edf 7\n®\n&\n"
  },
  {
    "seconds": 603,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X awu: E B ++ B & x\n¥ 06_music_design.md > () # Adding tracks to tracker .\np 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 LTES TR - T T | (TES T - Te T TN\n35 music_tracker.add('Hello - adele')\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micin traskan — MiciaTrackar naw\n@ 06_music_gdesign_challange_specsd U @ @\n5p6c > @ 0BMusic_design_chalenge_spec..\n1 require ‘e6musid T\n®\n&\n"
  },
  {
    "seconds": 604,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X awu: E B ++ B & x\n¥ 06_music_design.md > () # Adding tracks to tracker .\np 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 LTES TR - T T | (TES T - Te T TN\n35 music_tracker.add('Hello - adele')\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | micin traskan — MiciaTrackar naw\n@ 06_music_gdesign_challange_specsd U @ @\nsp6c > @ 0BMusic_design_chalenge_spec.i.\n1 require ‘e6music.' T\n®\n&\n"
  },
  {
    "seconds": 605,
    "text": "o0eo 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X awu: g B ++ B & x\n¥ 06_music_design.md > () # Adding tracks to tracker .\np 10 ' returns List OT7 alLL music Tracks aqoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS b R R of -} ) ET 1) R R 1 6\n22\n& 23 # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\npi music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 LTES TR - T T | (TES T - Te T TN\n35 music_tracker.add('Hello - adele')\nk3 music_tracker.add('lie - nf*)\nk¥ music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nA | miedan Frasban — MiaeiaTraskar nau\n@ 06_music_gdesign_chaliange_specsd U @ @\n56 > @ 0BMusic_desigo_chalenge_spec.rb.\n1\n®\n&\n"
  },
  {
    "seconds": 606,
    "text": "(- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn g\ng ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | BDos +~B & x\n¥ 0B.music_design.md > (5] # ASding racks 10 tracker .\no) 10 # returns L1st OF all MUSAC Tracks aaued Yo array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n19 end\nB 2\nS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello — adele')\n26 music, list == ['Hello - adele’]\n27\nnll\n29 # Adding empty string will fail\nLI 73 I TS Tl o T Y | (TER T T T T2\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 LUES PR - T TR TS U g T T T\n35 LUES TR {1 T T T TR E T T TR\n36 music_tracker.add('lie - nf'})\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trackan — MiueiaTrackar naw\n@ 06_music_oesign_chaliengespecrb U @ wa -\n$p6c > @ 06_music_design_chalienge_spec.i.\n1 require '‘@6_music_design' T\n®\n&\n"
  },
  {
    "seconds": 607,
    "text": "(- N N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn N\ng ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | BDos +~B & x\n¥ 0B.music_design.md > (5] # ASding racks 10 tracker .\no) 10 # returns L1st OF all MUSAC Tracks aaued Yo array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n19 end\nB 2\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello — adele')\n26 music,list == ['Hello - adele’]\n27\n28\n29 # Adding empty string will fail\nLI 73 I TS Tl o T Y | (TER T T T T2\n31 music_tracker.add('') => 'You cannot input an empty string as a track' —\n32\n33 #3) # List method will return all tracks added\n34 LUES PR - T TR TS U g T T T\n35 LUES TR {1 T T T TR E T T TR\n36 music_tracker.add('lie - nf'})\n37 LU TSR T I B S, AT REET I (LR F TR B |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trackan — MiueiaTrackar naw\n@ 06_music_oesign_chaliengespecrb U @ wa -\n$p6c > @ 06_music_design_chalienge_spec.i.\n1 require '@6_music_design_chall T\n®\n&\n"
  },
  {
    "seconds": 608,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ O0musedagumd U @ 06_music_design_challengerb U | B ++ B & x\n¥ 0B.music_design.md > (5] # Adding tracks 1o tracker .\njo) 10 # returns L1ST OF daLL MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 LITES ol T DT T T TR T, L T\n26 music.list => ['Hello - adele']\n27\npi:]\n29 # Adding empty string will fail\nLI 73 B TS Hol o - To G e (115 T fig-Te TN T2\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 LUES TR - T TR (TS e - T ST T\n35 LUES TR { T T T TR TR E T T T\n36 music_tracker.add('lie - nf'})\n37 LITES R Tl (T B T S G, I R T T (2 ER B TR 1} o |\n38\n39 #4) # add method will fail if music track already exists in array\nAo | miucin trackan — MiueiaTrackar naw\n@ 06_music_design_challange_specrb U X @@\nSp6c > @ 06_music_design_chalienge_spec.m.\n1\n®\n&\n"
  },
  {
    "seconds": 609,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ O0musedagumd U @ 06_music_design_challengesh U | BDos +~B & x\n0 .M?Jﬁl;mg;? 5?\"5\"& MUSLC Tracks aauea (o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| .\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 PZIE 2 O TTES ol - To CLE (1T 0o B =T T T\nb LTS Tl T DR T T T A T L T3\n26 music.list => ['Hello - adele']\n27\npi:}\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | L UVES Kol - T T | (VT g f =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | ]\nk4 LITES Tl - Te T B L S G S R T, (2 (RN B T 1) i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chialiange_specrb U X @ -\nspec > @ 06 music_design_chalienge_spec.i.\n1 require '@6_music_design_challenget| 7\n®\n&\n"
  },
  {
    "seconds": 610,
    "text": "(- N N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn N\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challengesh U - B R+~ B & x\n¥ 0B.music_design.md > (5] # Adding tracks 1o tracker .\nel 6 ¥ returns L1StT OF all MUSLC Tracks aaaea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n19 end\n% 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 LI 2 OB TTES Dol - To CLE 1T T f - T T T\n25 LITES ol T DT T T TR T, L T\n26 music.list => ['Hello - adele’']\n27\nP}\n29 # Adding empty string will fail\nLI 73 B TS Hol o - To G e (115 T fig-Te TN T2\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 [ ES TR - T TR | (TES o) f - T T TN\n35 LUES TR { T T T TR TR E T T T\n36 music_tracker.add('lie - nf'})\n37 LITES R Tl (T B T S G, I R T T (2 ER B TR 1} o |\n38\n39 #4) # add method will fail if music track already exists in array\nAo | miucin +rackan — MiueiaTrackar naw\n@ 06_music_oesign_chaliengespecrb U @ wa--\nSp6c > @ 06_music_design_chaliengs_spec.rd\n1 require '06_music_design_challenge'\n” T o b\n3\n®\n&\n"
  },
  {
    "seconds": 611,
    "text": "[- N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N\n3 oo deskumdu x @ 06 music_design_challengerh U - a8 Bo +~ B & x\n0 * 15 # ru\":u,rEl]l'smS;? 5?\"5\"& MUS1C Tracks aguea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| .\n19 |  end\nB 20\nIS 21 3. Create Examples as Tests\n22\n5 23 | # Adding tracks to tracker\ng LI O [TES Dol - T T | (175 00 =T T A T2\nb LTS Tl T DR T T T A T L T3\n26 music.list => ['Hello - adele']\n27\npa:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 LIS TR - T T TS T g T T T\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | ]\nk4 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trackan — MiueiaTrackar naw\n@ 06_music_oesign_chaliengespecrb U @ wa--\n5pec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge*\n5 .\n3\n®\n&\n"
  },
  {
    "seconds": 612,
    "text": "[- N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N\n(@ * oo msedubnndux @ 06_music_design_challengesh u - B Bon +~ B & %\n0 * 15 # N’;’Jr@ll'smﬂ;? :ml. MUS1C Tracks aguea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| .\n19 | end\nB 20\nIS 21 3. Create Examples as Tests\n22\n5 23 | # Adding tracks to tracker\n2 PZIE 2 O TTES ol - To CLE (1T 0o B =T T T\n25 LTS Tl T DR T T T A T L T3\n26 music.list => ['Hello - adele']\n27\np:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 LIS TR - T T TS T g T T T\n35 music_tracker.add('Hello -~ adele')\nE( ‘ LUTES TR T LT [ TGRS TR | ]\nk4 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trackan — MiueiaTrackar naw\n@ 06_music_oesign_chaliengespecrb U @ wa--\n5p6c > @ 0BLMusic_design_chalienpa_spec.b\n1 require '@6_music_design_challenge*\n5 .\n3 R\n®\n&\n"
  },
  {
    "seconds": 613,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nR e @ 06_music_design_challengesh U - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U @ @ -\nspec > @ 0BLMusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3\n®\n&\n"
  },
  {
    "seconds": 614,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nR e @ 06_music_design_challengesh U - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U @ @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n3\n®\n&\n"
  },
  {
    "seconds": 615,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nR e @ 06_music_design_challengesh U - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U @ @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n3\n®\n&\n"
  },
  {
    "seconds": 616,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nR e @ 06_music_design_challengesh U - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U @ @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n3\n®\n&\n"
  },
  {
    "seconds": 617,
    "text": "(- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn g\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challengesh U | B +-B8 8§ x\n¥ 06_music_design.md > (5] # Adding tracks to tracker N\np 10 ' returns L1st O7F all MUS1C Tracks aaaea o array OOMMMW-OMH-PMO-CIWMLl Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n1\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chalienge_specrb U @ wa--\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\no1 [t lesign_challenge\n®\n&\n"
  },
  {
    "seconds": 618,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U @ @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n3\n®\n&\n"
  },
  {
    "seconds": 619,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U @ @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n3\n®\n&\n"
  },
  {
    "seconds": 620,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng ©Cemsesesonmd x @ 06_music_design_challenge.rh U - O Don ++ B § x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin +rackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U ® @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n\\\n®\n&\n"
  },
  {
    "seconds": 621,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng ©Cemsesesonmd x @ 06_music_design_challenge.rh U - O Don ++ B § x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin +rackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrb U ® @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\nR TaN C p LEE (TE T T T )\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 622,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n() ¥ Osmusicdesgrmd U x| @ 08 musk designshallrgesb - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin +rackan — MiueiaTrackar naw\n@ 06_music_design_chaliange_specrd U X @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 623,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n() ¥ Osmusicdesgrmd U x| @ 08 musk designshallrgesb - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Sklll_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | micin trankan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U X @ -\n5p6c > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\nER LT T e L (TE R T T ]\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 624,
    "text": "o0eo 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challengesh U | B +-B8 8§ x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 ' returns L1st O7F all MUS1C Tracks aaaea o array OOMMMW-OMH-PMO-CIWMLl Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n®\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin trankan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\n56 > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nP\nC R Y Tl (XY o T [V Rl =T T gl )\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 625,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U ® @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 626,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n() ¥ O6musicdesgrmd U x| @ 08 musk designshallrgesb - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U X @ -\n56 > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nb\nC I Y =Tl XY TSl [V K =Tl T G )\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 627,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng ©Cemsesesonmd x @ 06_music_design_challengesh U - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\n56 > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nb\nC I Y =Tl T 1 TS [V K =Tl T G )\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 628,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng ©Cemsesesonmd x @ 06_music_design_challengesh U - o Bes +- B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 10 ' returns List 07 all mUSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 | # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin trackan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\n56 > @ 0BMusic_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\nb\nC I Y =Tl T 1 TS [V K =Tl T G )\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 629,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin trackan — MiueiaTrackar naw\n@ 06_music_gdesign_chaliange_specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 630,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin +raskan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 631,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin traskan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 632,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin traskan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 633,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin traskan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 634,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U - B BDm +~ B & x\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nB 20\nS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\nkY LITES Ko T (TP B EL S L I R T [ AR B TR 1) A |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin traskan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker\n4 xit ‘adds song to list'\n!\n®\n&\n"
  },
  {
    "seconds": 635,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U | B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks o trackes .\np 40 # returns L1stT O7 all mUsSAC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3. Create Examples as Tests\n22\ni 23 [ # Adding tracks to tracker\n2 24 #1) music_tracker = MusicTracker.new\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l]\n27\ni}\npi} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') => 'You cannot input an empty string as a track' -\n32\n33 #3) # List method will return all tracks added\n34 |  music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 ‘ LUTES TR T LT [ TGRS TR | o]\n37 LU TR T T B SE R, I R RERET [ (RS TR ) |\n38\n39 #4) # add method will fail if music track already exists in array\ns | miucin traskan — MiueiaTrackar naw\n@ 06_music_design_chaliange.specrd U @ @ -\nspec > @ 06_music_design_chalienge_spec.r\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit ‘adds song to list' .\n5 end\n®\n&\n"
  },
  {
    "seconds": 636,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N\n@ Oomusedagumd U7X @ 06_music_design_challengerb U - B B ++ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\np 10 # recurns L1stT OF aLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 20\nIS b R PO o T 1 ) 61 T OO T\n22\nB 23 | # Adding tracks to tracker\nV-d PZIE 3 DI (TS Tl d - To T [TT5 Teg Hg-Ted T8 T2\n25 | music_tracker.add('Hello — adele')\n26 music, list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\nEUIE 730 TS Mol d - ToU G (115 T fg-Tel TN T2\n3 | music_tracker.add('') => 'You cannot input an empty string as a track’' =\n32\n33 #3) # List method will return all tracks added\n34 [ ES TR - T TR | (TES o) f - T T TN\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(‘lie - nf'})\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | micis traskan — MiuciaTraskan naw\n@ 06_music_gesign_challenge_spec.ib U X @@ -\n56 > @ 0B_Music_design_chalienge_spec.\n1 reguire '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 637,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N\n@ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\np 10 # returns L1stT OT all music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nB 20\nIS 21 3. Create Examples as Tests\n22\nBy PE # Adding tracks to tracker\nd PZINE 2 DI TES Tol 4 =10 LR L T T T T T\n25 | music_tracker.add('Hello - adele')\nb1 music, list => ['Hello - adele']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 | music_tracker.add('lie - nf'})\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_spec.ib U X @ -\nsp6c > @ 0B_music_design_chalienge_spec.d\n1 require '@6_music_design_challenge*\n2\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 638,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N\n@ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\np 10 # returns L1stT OT all music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nB 20\nIS 21 3. Create Examples as Tests\n22\nBy PE # Adding tracks to tracker\nd PZINE 2 DI TES Tol 4 =10 LR L T T T T T\n25 | music_tracker.add('Hello - adele')\nb1 music, list => ['Hello - adele']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 | music_tracker.add('lie - nf'})\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_spec.ib U X @ -\nsp6c > @ 0B_music_design_chalienge_spec.d\n1 require '@6_music_design_challenge*\n2\n3 RSpec.describe MusicTracker do\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 639,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N\n@ Oomusedagumd U7X @ 06_music_design_challengesh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiuciaTraskar naw\n@ 06_music_design_challenge_spec.b U X wa-\nspec > @ 0B_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge'\nP\nER Y T-Tal X 1 TS [VES Rl =T (T i )\n4\n5 end\n®\n&\n"
  },
  {
    "seconds": 640,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis trackan — MiucinaTraskar naw\n@ 06_music_oesign_challenge_spec.b U ® Do\nspec > @ 0B_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 xit ‘adds song to list' do\n5\n6 end\n®\n&\n"
  },
  {
    "seconds": 641,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiuciaTraskar naw\n@ 06_misic._ossign_challenge_spec.ib U @ 0o\nspec > @ 06_music_design_challenge_spec.id\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n] usiq\n6 end TS o 3 6 I EYR T T\n®\n&\n"
  },
  {
    "seconds": 642,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiucinaTrackar naw\n@ 06_music_oesign_challenge_spec.b U @ -\nspec > @ 06_music_design_challenge_spec.id\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5\n6 end\n®\n&\n"
  },
  {
    "seconds": 643,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiucinaTrackar naw\n@ 06_music_oesign_challenge_spec.b U @ -\nspec > @ 06_music_design_challenge_spec.id\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5\n6 end\n®\n&\n"
  },
  {
    "seconds": 644,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.id\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5\n6 end\n®\n&\n"
  },
  {
    "seconds": 645,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_design_challenge_spec.b U @ Da--\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 usic_tracker = M\n6 end\n=music_design_challenge\n«music_tracker\nm] LYY Module definition\n®\n&\n"
  },
  {
    "seconds": 646,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_misic_ossign_challenge_spec.ib U @ 0o\nspec > @ 06_music_design_challenge_spec.id\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 usic_tracker = MusicTr|\n[ «MusicTracker\nCTHS LR e Tel (T\n®\n&\n"
  },
  {
    "seconds": 647,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nB 20\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_specsd U @ @\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 \" F cker — usicTr cker. ney\n6 end\n®\n&\n"
  },
  {
    "seconds": 648,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis trackan — MiucinaTraskar naw\n@ 06_music_design_challenge_spec.rb U ® -\nspec > @ 0B_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 ‘ xit 'adds song to list' do\n5 LUVES T 4 - T Y gl 715 Ty 2= Tof (- M T\n6\n7 end\n®\n&\n"
  },
  {
    "seconds": 649,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis trackan — MiucinaTraskar naw\n@ 06_music_design_challenge_spec.rb U ® -\nspec > @ 0B_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 ‘ xit 'adds song to list' do\n5 LUVES TR 4 - T Y il 715 Tor 2= Tof 1T M T\n6\n7 end\n®\n&\n"
  },
  {
    "seconds": 650,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiuciaTraskar naw\n@ 06_music._dssign_chalienge_spec.b U @ 0o\n5p6c > @ 0B_music_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 ‘ PELGRET LR TR DO S T\n5 LTS TR 4 -1 CLaE . (715 To f o= Tol (Y M 1IN\n[ musi\n7 end «music_design_challenge\n«music_tracker\n«MusicTracker\n®\n&\n"
  },
  {
    "seconds": 651,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucis traskan — MiucinaTrackar naw\n@ 06_music._dssign_chalienge_spec.b U @ 0o\n5p6c > @ 0B_music_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LIUES o § - T T Il (T3 oy = Tod (TN [0\n[ music\n7 end 5 G LS [ e ER R T [\n®\n&\n"
  },
  {
    "seconds": 652,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_specsd U @ @\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LTS Tl § - T T o (715 ol = Tol (-1 g [0\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 653,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 : # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 |  music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27 |\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ r\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 = music_tracker.add('lie - nf'}\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_dssign_chalienge_spec.b U @ 0o\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LTS Tl § - T T o (715 ol - Tol (-1 g (SN\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 654,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_dssign_chalienge_spec.b U @ 0o\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LTS Tl § - T T o (715 ol = Tol (-1 g [0\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 655,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_specsd U @ @\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LUES TR d - T G, 715 Loy g 0™ [of (T oM (O]\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 656,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_specsd U @ @\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LUES TR d - Td G, 715 Loy g 0™ [of (T oM (O]\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 657,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_specsd U @ @\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LUES TR - Td G, 715 Loy g 0™ [of (T oM (O]\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 658,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_specsd U @ @\n5p6C > @ 0Bmusic_design_chalienge_spec.d\n1 require '@6_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LUES TR d - Td G, 715 Loy g 0™ [of (-1 oM (O]\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 659,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U -] B+~ B & X\n¥ 06_music_design.md > (5% Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_dssign_chalienge_spec.b U @ 0o\n5p6c > @ 0B_music_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\n2\n3 - RSpec.describe MusicTracker do\n4 | xit 'adds song to list' do\n5 LUVES TR 4 - T T (7T Cor - Tol (T aM [\n[\n7 end\n®\n&\n"
  },
  {
    "seconds": 660,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 | # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_spec.sb U @ @@ -\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge*\n2\nERRN Y =Tl Tl 1 TS [VE Kl =Tl 3T G )\n4 “song\n5 LTES TR 4 - To T ol icTracker.new\n6 | music_tracker.add()]\n7 end\n®\n&\n"
  },
  {
    "seconds": 661,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 08_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 | # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_design_challenge_spec.rb U @ nao-\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge*\n2\nERR Y =Tl Tl TS [VE Kl =Tl T G )\n4 “song\n5 LTES TR 4 - To T ol icTracker.new\n[ music_tracker.add()\n7 B .\n®\n&\n"
  },
  {
    "seconds": 662,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ * Oormsiedesonmdy X @ 06_music_design_challenge.rh U -] B ++ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nB 20\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_spec.sb U @ @@ -\n5p6c > @ 0B_music_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do |\n4 | xit 'adds song to t|' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add()\n7 end\n®\n&\n"
  },
  {
    "seconds": 663,
    "text": "[- N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ * Oormsiedesonmdy X @ 06_music_design_challengerb U - B B ++ B & x\n¥ 06_music_design.md > (5 ¥ Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nB 20\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_design_challenge_specsb U @ -\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do |\n4 xit ‘adds song to tracker |\n5 LTS Tl 4 - T L L (718 Col f o= 1ol (T g [0\n6 music_tracker.add()\n7 end\n®\n&\n"
  },
  {
    "seconds": 664,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ Oomusedagumd U7X @ 06_music_design_challengerb U - B B ++ B & x\n¥ 06_music_design.md > (5 ¥ Adding tracks to tracker .\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 end\nT\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n5 music_tracker.add('') => 'You cannot input an empty string as a track' =\nk74\n33 #3) # List method will return all tracks added\n34 LITES TR T T TS o T T T\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_spec.rb U X @@ -\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do |\n4 xit ‘'adds song to tracker]'\n5 LTS Tl 4 - T T (718 Col - Tod (T g [0\n[ music_tracker.add()\n7 end\n®\n&\n"
  },
  {
    "seconds": 665,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ Oomusedagumd U7X @ 06_music_design_challenge.rh U -] B ++ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker N\np 10 # recurns L1stT OF aiLl musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nB 20\nIS 21 3. Create Examples as Tests\n22\nBy 23 J # Adding tracks to tracker\nV-d PZINE DI TES Toll 4 - To L L T o T T T\n25 | music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele']\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' -\nk74\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR 4T (M [ [ L A Y [ A )\n36 | music_tracker.add('lie - nf'})\n37 LTS Kol o =Tt (T B B3 E S R, () R R, [ KR B T (L i |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin traskan — MiucinaTraskar naw\n@ 06_music_gesign_challenge_spec.rb U X @@ -\n5p6c > @ 0B_music_design_chalienge_spec.>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR - To G TS Tt f 0 Tod {-T oM (20\n[ TES T i\nFAR-L0\n®\n&\n"
  },
  {
    "seconds": 666,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ¢ Otsmusicdesgumd u X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin trackan — MiuciaTrarkan nau\n@ 06_music_design_challenge_specsb U X @ -\nSp6C > @ 0B_Music_design_chalienge_spec.ty\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 ‘ xit 'adds song to tracker' do\n[ music_tracker = MusicTracker.new -\n6 nusic_tracker.add(]) it\n7 end\n®\n&\n"
  },
  {
    "seconds": 667,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n([ ®Oomsetessnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin trackan — MiuciaTrarkan nau\n@ 06_music_design_challenge_spec.rb U @ -\nSp6c > @ 06_music_design_challenga_spec.lty\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 ‘ xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ [CTES TR =T CTEn s ()\n7 end\n®\n&\n"
  },
  {
    "seconds": 668,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ =\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin trackan — MiuciaTrarkan nau\n@ 06_music.oesign_challenge_specsb U @ -\np6c > @ 06_music_design_challenge_spec.ly\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 ‘ xit ‘adds song to tracker' do\n3 LTS TR 4T CLaE . (715 Qo f - Tol {-J g 120\n6 ‘music_tracker.add(’\n7 end\n®\n&\n"
  },
  {
    "seconds": 669,
    "text": "[- N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U - B B+ B ¥ x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nT\nIS 21 3. Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track®' =\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucina trackan — MuciaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nsp6c > @ 06_music_design_challenge_spec.rb\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LUTES TR -1 CT o, V15 Loy g g™ [of (T oM (2]\n[ wsic_tracker.add(]'Helld]')\n7 end\n®\n&\n"
  },
  {
    "seconds": 670,
    "text": "[- N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh u. - B BDm +~ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ =\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MiuciaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\np6c > @ 06_music_design_challenge_spec.rb\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LTS TR 4y T CT o, (115 ot ™ [of {-T oM [\n[} nsic_tracker.add('Hello0-'\n7 end\n®\n&\n"
  },
  {
    "seconds": 671,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g ® Oormusedesgnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR 4 a1 CT o, (715 ot g ™ [of {-T oM [\n[ nusic_tracker.add('Helld]'))\n7 end\n®\n&\n"
  },
  {
    "seconds": 672,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g ® Oormusedesgnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR 4y T CT o, (V15 ot g 0™ [of {-T oM [\n[ wsic_tracker.add('Hello ade]'))\n7 end\n®\n&\n"
  },
  {
    "seconds": 673,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ¢ O6musicdesgundu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_oesign_challenge_spec.rb U X a--\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR 4 a1 CT A, (115 Tot g 0™ [of {-T oM [\n[ wsic_tracker.add('Hello - adele')\n7 end\n®\n&\n"
  },
  {
    "seconds": 674,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ¢ O6musicdesgundu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_oesign_challenge_spec.rb U X a--\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR 4 a1 CT o, (V15 ot g 0™ [of {-T oM [\n(] wsic_tracker.add('Hello - adele’))]\n7 end\n®\n&\n"
  },
  {
    "seconds": 675,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ¢ O6musicdesgundu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\n% 20\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_oesign_challenge_spec.rb U X a--\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR 4 a1 CT o, (V15 ot g 0™ [of {-T oM [\n6 nusic_tracker.add(|'Hello - adele’])] .\n7 end\n®\n&\n"
  },
  {
    "seconds": 676,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ® Oamusicdesgundu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_oesign_challenge_spec.rb U X a--\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS TR 4 a1 CT o, (V15 ot g 0™ [of {-T oM [\n[ nusic_tracker.add('Hello - adele’])] .\n7 end\n®\n&\n"
  },
  {
    "seconds": 677,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(G ®Oomusedesgnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 end\nB 20\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music.design_challenge_spec.rb U & 0a--\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n7 ol P\n8 end\n0if elsif else if elsif else\nOif else if else\n0if elsif if elsif\nObegin else ens. Exception bloc.\n® Obegin else Exception block with-\n& Jbegin ensure Exception block wi-\n"
  },
  {
    "seconds": 678,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(G ®Oomusedesgnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U & -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7\n8 end\n®\n&\n"
  },
  {
    "seconds": 679,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(G ®Oomusedesgnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U & -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7\n8 end\n®\n&\n"
  },
  {
    "seconds": 680,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g ®Oormusedessnndu X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7\n8 end\n®\n&\n"
  },
  {
    "seconds": 681,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ O @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucin traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7\n8 end\n®\n&\n"
  },
  {
    "seconds": 682,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ =\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n7 expect(mu)\n8 end «music_design_challenge\n=music_tracker\n+MusicTracker\nMNuodule Module definition\n®\n&\n"
  },
  {
    "seconds": 683,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g ¥ Oormusedesgnndy X @ 06_music_design_challengesh u. | Do ++ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’']\n27\npi:]\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specsb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n8 end music_design_challenge |\n=music_tracker\n®\n&\n"
  },
  {
    "seconds": 684,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} f # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' r\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR T LT [ L T A T [ (A\n36 music_tracker.add('lie - nf')\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n7 xpect|(music)\n8 end ~music_design_challenge\n®\n&\n"
  },
  {
    "seconds": 685,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} f # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele'l]\n27\ni}\ni) # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ =\nk73\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LUTES TR T LT [ L T A T [ (A\n36 music_tracker.add('lie - nf')\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n7\n8 end\n®\n&\n"
  },
  {
    "seconds": 686,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\ni}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect|(music_tracker. list))|\n8 end\n®\n&\n"
  },
  {
    "seconds": 687,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\ni}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect (music_tracker.list).\n8 end\n®\n&\n"
  },
  {
    "seconds": 688,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR - To T o TS Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T [ R\n7 expect (music_tracker.list).to eq |\n8 end\n®\n&\n"
  },
  {
    "seconds": 689,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR - To T o TS Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T [ R\n7 expect (music_tracker.list).to eq |\n8 end\n®\n&\n"
  },
  {
    "seconds": 690,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR - To T o TS Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T [ A\n7 expect (music_tracker.list).to eq\n8 end\n®\n&\n"
  },
  {
    "seconds": 691,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTES TR -1 T o, (TS Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T 2 R\n7 expect (music_tracker.list). 0 eq h\n8 end\n®\n&\n"
  },
  {
    "seconds": 692,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR -1 T o, (T3 Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T [ R\n7 expect (music_tracker.list). q [I]\n8 end\n®\n&\n"
  },
  {
    "seconds": 693,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh . -] BDm +~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\ni}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specsb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR -1 T o, (T3 Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T 1 R\n7 expect (music_tracker.list). q [[\"Hello|']\n8 end\n®\n&\n"
  },
  {
    "seconds": 694,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh . -] BDm +~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\ni}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specsb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR -1 T o, (T3 Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T [ R\n7 expect (music_tracker.list). q [['Hello ]\n8 end\n®\n&\n"
  },
  {
    "seconds": 695,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (=) ¥ Adding tracks to tracker .\np 10 # returns L1stT OF aiLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB i} [ # Adding tracks to tracker\nVd PZ I 3 OO TTES Tol - 1o CLE L T 0o - T C N o)\n25 \\ music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\n27\npi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track' =\n32\n33 #3) # List method will return all tracks added\n34 L UTES Tl - Tol TOE | (T T B Tol T oM T\n35 LUTES TR T LT [ L T A T [ (A\n36 LUTES TR T LT GRS TR} o]\nk¥ music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins traskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_design_challenge_spec.r>\n1 require '@6_music_design_challenge'\nZ\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LUTES TR -1 T o, (T3 Loy g 0™ [of (TN [N\n[ LTS Tl - T UL TR T R R T [ R\n7 expect (music_tracker.list). q |['Hellc def' ]\n8 end\n®\n&\n"
  },
  {
    "seconds": 696,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\n2\nY T-Tal (T G 1T [VES Kl =T (T G )\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele*)\n7 expect{music_t acker.list).to @‘:.'-;7 L ACH|\n8 end\n®\n&\n"
  },
  {
    "seconds": 697,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\n2\nR Y =Tl (T G 1T [VES Kol =T T G )\n4 xit 'adds song to tracker' do\n5 LTS Tl o - T T G (715 Tl =T (=T o (2N\n[ music_tracker.add('Hello - adele*)\n7 expéct{music_tracker.list).to eq [['Hello - adele'[l\n8 end\n®\n&\n"
  },
  {
    "seconds": 698,
    "text": "o0eo 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1T [VES Kol =T T G )\n4 xit 'adds song to tracker' do\n5 LUVES (el d - T CT o TS ot o - [of {-T oM (210\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq |['Hello - adele’\n]\n9 end\n®\n&\n"
  },
  {
    "seconds": 699,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U e B+ B8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\n2\nR Y =Tl (T G 1T [VES Kol =T T G )\n4 xit 'adds song to tracker' do |\n5 | LTS Tl o - T T G (715 Tl = Tod (=T o [2N)\n[ music_tracker.add('Hello - adele')\n7 ‘expect(music_tracker.list).to eq [['Hello - adele']l\n8 end )\n®\n&\n"
  },
  {
    "seconds": 700,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1T [VES Kol =T T G )\n4 xit 'adds song to tracker' do\n5 LUVES (e d - T CT o TS ot o - [of {-T oM (20\n[ music_tracker.add('Hello - adele*)\n7 expect(music_tracker.list).to eq |[['Hello - adele'\n]\n9 end\n®\n&\n"
  },
  {
    "seconds": 701,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1T [VES Kol =T T G )\n4 xit 'adds song to tracker' do\n5 LUES T d -1 T L TS Tt f - [of (T oM (2]\n3 music_tracker.add('Hello - adele*)\n7 expect(music_tracker.list).to eq ['Hello - adele']\n]\n9 end\n®\n&\n"
  },
  {
    "seconds": 702,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1T [VES Kol =T T G )\n4 xit 'adds song to tracker' do\n5 LUES T d -1 T L TS Tt f - [of (T oM (2]\n3 music_tracker.add('Hello - adele*)\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8\n9 end\n®\n&\n"
  },
  {
    "seconds": 703,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_design_challenge.rb U e Bos ++ B & x\n® 06_music_design.md > (5] # Adding tracks o tracker :\np 10 ' returns List OT alL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerlges \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\n& 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\n|\n.N.‘;NLM o -\nspec ) @ 06 music_des q\n1 requi*expect\n2 (mE & -1 K5 § -3 K13 if elsif else\n3 RSpecDif else if else\n. Dif elsif if elsif\n5 Obegin else ens. Exception blac. jey\n[ Obegin else Exception block with.. ale*)\n7 Dbegin ensure Exception block wi- (eq ['Hello - adele']\n8\n9 end\n®\n&\n"
  },
  {
    "seconds": 704,
    "text": "000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micdn Frackar — MuciaTrarkar naw\n@ 06_music_design_challange_specrb U @ @ a--\nSpec ) @ 06_music_dedign_chalenpe_spec.d\n1 require '@6_music_design_challenge*\nP\n3 RSpec.describe MusicTracker do\n4 P S LT [ LT TR I o o T T o ]\n5 LTES TR 4y T TR, 715 Tof 2 [of {-T oM T2\n(3 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8\n9 end\n®\n&\n"
  },
  {
    "seconds": 705,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_fmusic_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [V Kol =T T G )\n4 |  xit 'adds song to tracker' do\n5 LTS Tl o - T T G (715 Tl =T (=T o (2N\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n19 end\n®\n&\n"
  },
  {
    "seconds": 706,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 06_music_design_challenge.sb U e Bwms +v B § x\n® 06_music_design.md > (5] # Adding tracks o tracker :\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npA:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1 T [VES Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUVES (el d - T CT o TS ot o - [of {-T oM (210\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 L\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 707,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1 T [VES Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUVES TR d - T CY o TS ot i - [of {-T oM (210\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 708,
    "text": "o0eo 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y =Tl (T G 1 T [VES Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n6 music_tracker.add('Hello - adele*)\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n] end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 709,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 710,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 711,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 712,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 713,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 714,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 715,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 716,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 717,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wm--\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n10\n11 end\n®\n&\n"
  },
  {
    "seconds": 718,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n10 it 'adding an empty st “h’n-‘;\n11 end\n®\n&\n"
  },
  {
    "seconds": 719,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n10 it 'adding an empty st ing will faj ‘J‘\n11 end\n®\n&\n"
  },
  {
    "seconds": 720,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\nje) 'M’i’&ﬁ:&”ﬂ?‘?‘:ﬂ; MUSLC Tracks aauea to array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n10 it 'adding an empty string will .‘i‘J‘\n11 end\n®\n&\n"
  },
  {
    "seconds": 721,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U & -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ]\n10 it 'adding an empty string will fail'do)\n11 end\nial [ Insert do .. end block\n® rdop Insert do |variable| . -\n&\n"
  },
  {
    "seconds": 722,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U & -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l]\n8 end\n3 ]\n10 it 'adding an empty string will fail' dd\n11 end .\nOdo Insert do .. end blocl\n() Odop PO ETTS S RN IYETST1.) L) I\n&\n"
  },
  {
    "seconds": 723,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U. @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l]\n8 end\n3 ,\n10 it 'adding an empty string will\n11 end\n®\n&\n"
  },
  {
    "seconds": 724,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U. @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\nP\nR Y T-Tal (T G 1 TS [VE Kl =T T G )\n4 xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l]\n8 end\n3 ]\n19 xit 'adding an empty string will fail' do\n11\n12 end\n®\n&\n"
  },
  {
    "seconds": 725,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks o tracker .\np 10 # returns L1st OT ailL musSic Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"’\n2\nR Y =Tl (T G 1 T [VES Kl =T T G )\n4 |  xit 'adds song to tracker' do\n5 LUES TR d - T T L TS Tt f - [of (TR (2]\n[ music_tracker.add('Hello - adele*)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n3 ,\n19 xit 'adding an empty string will fail' do\n1\n12 end\n®\n&\n"
  },
  {
    "seconds": 726,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\ng ®Oomsedessnmdu X @ 06_music_design_challengesh u- | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Frackan — MuciaTrarkan naw\n@ 06_music_design.chalienge_spec.rb U @ no-\nSp6C > @ 06_music_design_challenge_spec, ity\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LTS el - T I (715 Uof f o= T () g 100\n6 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n2] end\n9\n19 xit ‘adding an empty string will fail' do\n11 music! trackel\n12 end tracker |\n@ =MusicTracker\n& = music_tracker\n"
  },
  {
    "seconds": 727,
    "text": "ocoeeo 06_music_design_challenge_spec.rb — Skill_Challenges DEem]os\nQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\n& 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Frackan — MuciaTrarkan naw\n@ 06_music_design.chalienge_spec.rb U @ no-\nSp6C > @ 06_music_design_challenge_spec, ity\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LTS el 4 - T I (715 Uof f o= T () g 100\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n19 xit ‘adding an empty string will fail' do\nu _\n12 end\n®\n&\n"
  },
  {
    "seconds": 728,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\ng ®Oomsetesgnmdy X @ 06_music_design_challengerb U | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Frackan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nSp6c > @ 06_music_design_challenge_spec.ld\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LTS ol 4 - T I (715 Uof f o= T () g 100\n6 LEE TR S T T T L TR TR R T L A\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n19 xit ‘adding an empty string will fail' do\n11 ‘?\"-ﬁ‘{‘;:_ tracke|\n12 end music_tracker\n®\n&\n"
  },
  {
    "seconds": 729,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n(g ® Oormusedesgnndy X @ 06_music_design_challengesh u- | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan naw\n@ 06_music_design_challenge_specrb U @ o\nSp6c > @ 06_music_design_challenge_spec.ld\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LTS ol 4 - T I (715 Uof f o= () g 100\n6 LTS 1o €Tl T U [ T G G 1 () R )\n7 expect{music_trac acke\n] end =music_design_challenge\n-] «music_tracker\n19 PR LT EET = 1114 Omodule Module definition\n11 music_tracker = M\n12 end\n®\n&\n"
  },
  {
    "seconds": 730,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengeh U - B Ber ++- 8 & %\n¥ 0B.music,_design.md > () # Adding tracks to tracker N\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan naw\n@ 06_music_design_challenge_specsb U ® -\nSp6c > @ 06_music_design_challenge_spec.ld\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LTS ol 4 - T I (715 Uof f o= () g 100\n6 LU TR 410 CIAE LG G IR TR\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 | xit ‘adding an empty string will fail' do\n1\n12 end\n®\n&\n"
  },
  {
    "seconds": 731,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n(g ¥ Oormusedesgnndy X @ 06_music_design_challengerb U | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 S T [ ST T T IR - T T ]\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l]\n8 end\n9\n190 xit 'adding an empty string will fail' do\n11 TS ol o o= Vel (1 G (T3 Ml T ¢ r.n\n12 end\n®\n&\n"
  },
  {
    "seconds": 732,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design.chalienge_spec.rb U ® no-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 _\n® 13 end\n&\n"
  },
  {
    "seconds": 733,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n(g ¥ Oormusedesgnndy X @ 06_music_design_challengesh u- | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ o\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 S T [ ST T T IR - T T ]\n5 music_tracker = MusicTracker.new\n[ LTS 1ol 4T T TR T R T LY L]\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n] end - )\n-] ~music_design_challenge\n10 xit 'addi/=music_tracker\n11 music=MusicTracker\n12 ‘musiqg\n® 13 end\n&\n"
  },
  {
    "seconds": 734,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges =35 B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U @ o\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 S T [ ST T T IR - T T ]\n5 LTS Tl - T I (71 Uof f =T () g (00\n[ music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n] end . .\n9\n10 xit 'adding an empty string will fail' do\n11 LTS Tl o -Vl (L TS (o g T (T S\n12 ‘music_| .\n® 13 end\n@\n"
  },
  {
    "seconds": 735,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design.chalienge_spec.rb U ® no-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 S T [ ST T T IR - T T ]\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 LTS T o -Vl U TS o g T (T\n12 ‘music_tracker]\n® 13 end music_tracke\n&\n"
  },
  {
    "seconds": 736,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g ¥ Oormusedesgnndy X @ 06_music_design_challengerb U | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music.design_challenge.specsb U ® na -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 S T [ ST T T IR - T T ]\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n] -add\n10 xit ‘adding an empty |~adding\n11 music_tracker = M~ adds\n12 ‘music_tracker.add\n® 13 end\n&\n"
  },
  {
    "seconds": 737,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U ® na -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L\n7 expect(music_tracker.list).to eq ['Hello - adele'l]\n8 end\n9 |\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 'r\"zf:va.;.'f\"::x:-‘e-\"':z‘::\"_c‘-‘ii‘\n® 13 end\n&\n"
  },
  {
    "seconds": 738,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U @ wao -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR TR T L A\n7 expect(music_tracker.list).to eq ['Hello - adele'l]\n8 end\n9 |\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 ‘music_tracker.add([')\n® 13 end\n&\n"
  },
  {
    "seconds": 739,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nG Oesmusicdesgnmd v x @ 06_music_design_challengesh U -] BDm +~ B & x\nJo) Y e aSE ST aLL mUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 expect(music_tracker.list).to eq ['Hello - adele'l]\n8 end\n9 |\n10 ‘ xit 'adding an empty string will fail' do\n11 AES ol o =T 5 I TES =Tl (T\n12 music_tracker.add('|')]\n® 13 end\n&\n"
  },
  {
    "seconds": 740,
    "text": "000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nG Oesmusicdesgnmd v x @ 06_music_design_challengesh U -] BDm +~ B & x\nJo) Y e aSE ST aLL mUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9 |\n10 ‘ xit 'adding an empty string will fail' do\n11 AES ol o =T S L 73 it f =T (TN\n12 ':\",n\"u,{:,‘ acker.add(\"' ')\n® 13 end\n&\n"
  },
  {
    "seconds": 741,
    "text": "000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nG Oesmusicdesgnmd v x @ 06_music_design_challengesh U -] BDm +~ B & x\nJo) Y e aSE ST aLL mUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9 |\n10 ‘ xit 'adding an empty string will fail' do\n11 LUTES Tl o =T L TS ot f - T (-1 50\n12 ti\",n\"::,{:. acker.add(' ')\n® 13 end\n&\n"
  },
  {
    "seconds": 742,
    "text": "000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n) ¥ Omusic desgnmd U x @ 06_music_design_challenge.rb U - B B+ 8 & x\nJo) ‘M’%’Jﬁ.’%\"‘.’.‘u“f‘?m; [ TR TR LN IR R T © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U X -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9 |\n10 ‘ PSRN BT EET - T 4 6 1T IR R -5 R 6]\n11 LUTES Tl o =T L TS ot f - T (-1 50\n12 ti\",n\"::,{:. acker.add (\"' ')\n® 13 end\n&\n"
  },
  {
    "seconds": 743,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n) ¥ Omusic desgnmd U x @ 06_music_design_challenge.rb U - B B+ 8 & x\njo) ‘M’%’Jﬁ.’%\"‘.’.‘u“f‘?m; [ TR TR LN IR R T © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge.specsb U X na -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9 |\n10 ‘ PSRN BT EET - T 4 6 1T IR R -5 R 6]\n11 LUTES Tl o =T L T ot f - T (-1 0\n12 ‘music_tracker.add(\" \"))\n® 13 end\n&\n"
  },
  {
    "seconds": 744,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music.design_challenge._spec.rb U ¢ wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 TS ol o =T S L T3t f =T (T [\n12 music_tracker.add('\")\n® 13\n& 14 end\n"
  },
  {
    "seconds": 745,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music.design_challenge._spec.rb U ¢ wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 TS ol o =T S L T3t f =T (T [\n12 music_tracker.add('\")\n® 13\n& 14 end\n"
  },
  {
    "seconds": 746,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 LTS TR - Tel T 7T Vel f = T (T M [\n12 music_tracker.add('\"')\n(T\n& 14 end\n"
  },
  {
    "seconds": 747,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 LS Tl =V T L (713 Vel f =T (T M [0\n12 music_tracker.add('\")\n® 13\n& 14 end\n"
  },
  {
    "seconds": 748,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 music_tracker.add('')\n® 13 .\n& 14 end\n"
  },
  {
    "seconds": 749,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 music_tracker.add('')\n® 13\n& 14 end\n"
  },
  {
    "seconds": 750,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 music_tracker.add('')\n® 13\n& 14 end\n"
  },
  {
    "seconds": 751,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design.chalienge_spec.rb U ® no-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 SO (TS TR - T CLa S T3 S I ST T S T A G T U3 | ZI\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 music_tracker.add('')\n® 13\n& 14 end\n"
  },
  {
    "seconds": 752,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1ST OF all MUSLC Tracks aduea to array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music._design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 (SO (TS TR - T CLaN S 13 & I T T S T A R (Y T3 |\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 Iims.tq-_tracker.add( ')\n® 13\n& 14 end\n"
  },
  {
    "seconds": 753,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\no) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U @ na -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 (SO (TS TR - T CLaN S 13 & I T T S T A R (Y T3 |\n8 end\n9 |\n10 ‘ PSR BT EET I 1) 4 6 1T IR R -5 B G 6]\n11 music_tracker = MusicTracker.new\n12 20 TR P TERD B\n® 13\n& 14 end\n"
  },
  {
    "seconds": 754,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengeh U - B Ber ++- 8 & %\n¥ 0B.music,_design.md > () # Adding tracks to tracker N\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_spec.rb U ® wo-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 (SO (TS TR - T CLaN S 13 & I T T S T A R (Y T3 |\n8 end\n9 |\n10 ‘ PSR BT EET I 1) 4 6 1T IR R -5 B G 6]\n11 LUTES ol o =Tl T TS ot f 2 1ol (=T (20\n12 expectmusic_tracker.add('')\n® 13\n& 14 end\n"
  },
  {
    "seconds": 755,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MucinaTrarkan nau\n@ 06_music_design_challenge_specrb U ® na -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LIES TR 4 T T T L TR TR R T L A\n7 (SO (TS TR - T CLaN S 13 & I T T S T A R (Y T3 |\n8 end\n9 |\n10 ‘ PSR BT EET I 1) 4 6 1T IR R -5 B G 6]\n11 LTS ol 4 =V I (71 Vol f o=To1 () M [0\n12 expect (music_tracker.add{'\")\n® 13\n& 14 end\n"
  },
  {
    "seconds": 756,
    "text": "o0eo 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucina Frackan — MiucinaTrarkan naw\n@ 06_music_design_challenge_specsb U @ -\nspec > @ 06_music_design_challenge_spec. b\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect imusic_tracker.add('*)\n® 13\n& 14 end\n"
  },
  {
    "seconds": 757,
    "text": "oeeo 06_music_design_challenge_spec.rb — Skill_Challenges DEmlos\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucina Frackan — MiucinaTrarkan naw\n@ 06_music._design_challenge_spec.rb U ® wa-\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 LIS Eollh 4 =Tl (T I T7E3 ot f = Ted (T\n12 expect imusic_tracker.add('|)\n® 13\n& 14 end\n"
  },
  {
    "seconds": 758,
    "text": "oeeo 06_music_design_challenge_spec.rb — Skill_Challenges DmEmlos\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Frackan — MiucinaTrarkan naw\n@ 06_music_design_challenge_specrb U @ -\n5pec > @ 06_music_design_challenge_spec. b\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 ‘ xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [ ES TR S T T T L TR TR TR T L A\n7 (SO (T TR T CY R S S IR ST I A R I T Y TR |\n] end\n9\n10 xit 'adding an empty string will fail' do\n11 LITES Tl 4 1o L L TS Tt f - 1o (T (2\n12 expec! usic_tracker.add('\"‘)\n® 13\n& 14 end\n"
  },
  {
    "seconds": 759,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n(g ¥ Oomusedesgnndy X @ 06_music_design_challengesh u- | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR S T T T L TR TR TR T L A\n7 (SO (P TR T CY M G & I ST I R R T REE-T Y TR |\n] end\n9 |\n10 xit 'adding an empty string will fail' do\n11 LTES U 4 =T T I (713 o f =Tl (T M\n12 eXpec usic_tracker.add “ 1 (|\n® 13\n& 14 end\n"
  },
  {
    "seconds": 760,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g ¥ Oomusedesgnndy X @ 06_music_design_challengerb U | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefws \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 06_music_design_challenge_spec. b\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 expect{music_tracker.list).to eq ['Hello - adele']\n] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('*)).tq\n® 13\n& 14 end\n"
  },
  {
    "seconds": 761,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nlg ¥ 06_music_designmd U X @ 08_music_dasign_challengeh U - B Ber ++- 8 & %\n¥ 0B.music,_design.md > () # Adding tracks to tracker N\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 expect{music_tracker.list).to eq ['Hello - adele']\n] end\n9 |\n10 | xit 'adding an empty string will fail' do\n11 ‘ LIVES Uol 4 =T (1 I (705 ot f Tl (T (20\n12 expect(music_tracker.add('*)).to |\n® 13\n& 14 end\n"
  },
  {
    "seconds": 762,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 expect{music_tracker.list).to eq ['Hello - adele']\n] end\n9 |\n10 | xit 'adding an empty string will fail' do\n11 ‘ LTES Tl 4 =T 1 L TS ot f - 1o (=T M (20\n12 expect(music_tracker.add('*)).to |\n® 13\n& 14 end\n"
  },
  {
    "seconds": 763,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nEL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nTS miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit ‘adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 expect{music_tracker.list).to eq ['Hello - adele']\n] end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 LTES Tl 4 =T 1 L TS ot f - 1o (=T M (20\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 764,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nEL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nTS miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit ‘adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 (SO (P TR T Y G 1S  I SO I A R T BT Y TR |\n] end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 LTES Tl 4 =T L L TS ot f - 1o (-1 M (20\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 765,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nEL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nTS miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit ‘adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 (SO (P TR T Y G 1S  I SO I A R T BT Y TR |\n] end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 LTES Tl 4 =T L L TS ot f - 1o (-1 M (20\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 766,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nEL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nTS miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit ‘adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 (SO (P TR T Y G 1S  I SO I A R T BT Y TR |\n] end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 LTES Tl 4 =T L L TS ot f - 1o (-1 M (20\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 767,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nlg ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as a track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\nEL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nTS miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_spec.rb U ® wa-\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit ‘adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 (SO (P TR T Y G 1S  I SO I A R T BT Y TR |\n] end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 LTES Tl 4 =T L L TS ot f - 1o (-1 M (20\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 768,
    "text": "X N ) 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add('') => 'You cannot input an empty string as iI track’ -\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello -~ adele')\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5L i B T R -1, () FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge_specrb U ® -\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A\n7 (SO (P TR T Y G 1S  I SO I A R T BT Y TR |\n] end\n9 |\n10 | xit 'adding an empty string will fail' do\n11 ‘ LTES Tl 4 =T L L TS ot f - 1o (-1 M (20\n12 expect (music_tracker.add('')).to raise_error “‘\n® 13\n& 14 end\n"
  },
  {
    "seconds": 769,
    "text": "LY X 06_music_design.md — Skill_Challenges DmEm]os\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challengesh U weo - 8 B+~ B & X\n¥ 0Bmusic_design.md > (5] ¥ Adding tracks 1o tracker N\n0 16 ¥ returns L1ST OF alL MUS1C Tracks aduea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\ni bz} ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add('') = 'You cannot input an empty string as a track’| J\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - To TR | (VT el =T T T2\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5L i B T R -1, () FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiuciaTrarkan naw\n@ 06_music_design_challenge.specsb U ©\nspec > @ 0BLMusic_design_chalienge,_spec,d\n1 require '@6_music_design_challenge’\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 [T TR ST T T L TR TR TR T L A K\n7 (SO (P TR T Y G 1S  I SO I A R T BT Y TR | |\n] end\n]\n10 xit 'adding an empty string will fail' do\n11 LIS Uol 4 =T (T I (703 ot f Tl (T (S\n12\n@ 13 |\n& 14 end\n"
  },
  {
    "seconds": 770,
    "text": "X N ) 06_music_design.md — Skill_Challenges (Ing=Nn JE\n@ *Oomeduionndy X @ 06_music_design_challenge.rh U wEo - @ Do+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges ls[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 | music_tracker.add(\"\"')\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_specrb U ¢\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n6 ‘ nusic_tracker.add('Hello - adele') |\n7 expect{music_tracker.list).to eq ['Hello - adele'] ‘\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('')).to raise_error '\n® 13\n& 14 end\n"
  },
  {
    "seconds": 771,
    "text": "X N ) 06_music_design.md — Skill_Challenges (Ing=Nn JE\n@ *Oomeduionndy X @ 06_music_design_challenge.rh U wEo - @ Do+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges ls[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =>\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miucins Fraskan — MiucinaTrarkan naw\n@ 06_music_design_challenge_specrb U ¢\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele') %\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('')).to raise_error '\n® 13\n& 14 end\n"
  },
  {
    "seconds": 772,
    "text": "coee 06_music_design.md — Skill_Challenges DEm]os\n@ *Oomeduionndy X @ 06_music_design_challenge.rh U wEo - @ Do+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges ls[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specrb U @\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele') b\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('')).to raise_error '\n® 13\n& 14 end\n"
  },
  {
    "seconds": 773,
    "text": "coee 06_music_design.md — Skill_Challenges DEm]os\nQuw—:mmux @ 06_music_design_challenge.rb U wEo - @ B+ 8 & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker N\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges I;[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge._specrb U ®\nspec > @ 06_music_design_challenge_spec.d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n6 [T TR ST T T L R TR G T L ks\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('*)).to raise_error '\n® 13\n& 14 end\n"
  },
  {
    "seconds": 774,
    "text": "ocoeeo 06_music_design.md — Skill_Challenges DEm]os\nQuw—:mmux @ 06_music_design_challenge.rb U wEo - @ B+ 8 & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges ls[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [NGUICSRNOIMNPUCIANNEAPEYNSCRINGIaSNaNEracky\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franskar — MiciaTrarkar nou\n@ 06_music_design_challenge_specrb U ®\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do ZI\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('*)).to raise_error ''\n® 13\n& 14 end\n"
  },
  {
    "seconds": 775,
    "text": "(XX} 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U % @ 06_music_design_challenges U | B+~ B § x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1st OF all MUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\n& 23 ‘ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(\"') = [¥oulcannat dnput an empty string as a Erack!\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol o - T TR | (VT el ff =Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franskar — MiciaTrarkar nou\n@ 06_music_design_challenge_specrb U @ na-\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new T\n12 expect (music_tracker.add('*)).to raise_error '[! =\n® 13\n& 14 end\n"
  },
  {
    "seconds": 776,
    "text": "X N ) 06_music_design_challenge_spec.rt — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challenge.rh . - B [EEIE = R\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges l;[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [NoUlEannot  Enput an empty SEring as a Erack!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franskar — MiciaTrarkar nou\n@ 06_music_design_challenge_spec.rb U @ @ -\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n6 [T TR ST T T L R TR G T L\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do z\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('')).to raise_error ''You cannot input an empty string as a track'|\n® 13\n& 14 end\n"
  },
  {
    "seconds": 777,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng ¥ Cemsesesumd x @ 08_music_design_challenge.rb U - a8 Bos +~ B § x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges l;[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') = [I¥oulcannot dnput an empty string as a Erack\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franskar — MiciaTrarkar nou\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 [VES TR - Te T TS Ul = Tl (T M [ )\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 778,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challenge.rh . - B [EEIE = R\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges l;[]\n19 end\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(\"') = [I¥oucannot dnpiit an empty string as a Erack\"\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franskar — MiciaTrarkar nou\n@ 06_music._design_challenge_spec.rb U @ wa-\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n6 [T TR ST T T L R TR G T L\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12\n® 13\n& 14 end\n"
  },
  {
    "seconds": 779,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challenge.rh . - B [EEIE = R\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges l;[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(\"') = [I¥oucannot dnpiit an empty string as a Erack\"\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franskar — MiciaTrarkar nou\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n6 [T TR ST T T L R TR G T L\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 usic_tracker.add('')).to raise_error 'Jfou cannot input an empty string as a track'|\n® 13\n& 14 end\n"
  },
  {
    "seconds": 780,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng ¥ Cemsesesumd x @ 08_music_design_challenge.rb U - a8 Bos +~ B § x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges l;[]\n19 (0]\nT\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥oll'Cannot Input an empty String as a Eracks\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franrkar — MiciaTrarkar nou\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 ‘ xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new ZI\n12 expect (music_tracker.add('')).to raise_error '[fou cannot input an empty string as a track'\n® 13\n& 14 end\n"
  },
  {
    "seconds": 781,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B Bos ++ B & x\nJo) Y e S aSE ST aLL mUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n\n19 (0]\nT\no 21 3. Create Examples as Tests\n\n22\nB 23 \\ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n\n25 music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27 L\n\n28\n\n29 # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 ' music_tracker.add('') = [¥oll'Cannot Input an empty String as a Eracks\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\nEL) music_tracker.add(’'lie - nf')\n\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\nan | micin Franrkar — MiciaTrarkar nou\n\n@ 06_music_design_challenge_spec.rb U X @ -\nspec > @ 06_music_ design_challenge_spec.d\n\n1 require '@06_music_design_challenge'\n\nP\n\n3 RSpec.describe MusicTracker do\n\n4 | xit 'adds song to tracker' do\n\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n\n6 [T TR ST T T L R TR G T L\n\n7 expect{music_tracker.list).to eq ['Hello - adele']\n\n8 end\n\n9\n\n10 xit 'adding an empty string will fail' do\n\n1 nusic_tracker = MusicTracker.new\n\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 b\n& 14 end\n"
  },
  {
    "seconds": 782,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B Bos ++ B & x\nJo) Y e S aSE ST aLL mUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n\n19 (0]\nT\no 21 3. Create Examples as Tests\n\n22\nB 23 ‘ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n\n25 music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27 L\n\n28\n\n29 # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 ' music_tracker.add('') = [¥oll'Cannot Input an empty String as a Eracks\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 music_tracker = MusicTracker.new\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add(’'lie - nf')\n\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\nan | micin Franrkar — MiciaTrarkar nou\n\n@ 06_music_design_challenge_spec.rb U X @ -\nspec > @ 06_music_ design_challenge_spec.d\n\n1 require '@06_music_design_challenge'\n\nP\n\n3 RSpec.describe MusicTracker do\n\n4 | xit 'adds song to tracker' do\n\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n\n[ music_tracker.add('Hello - adele')\n\n7 expect{music_tracker.list).to eq ['Hello - adele']\n\n8 end\n\n9 |\n\n10 xit 'addi.ng an empty string will fail' do b\n\n1\n\n12 expect(music_tracker.add('\"}).to raise_error 'You cannot input an empty string as a track'\n® 13\n& 14 end\n"
  },
  {
    "seconds": 783,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n() ¥ emusic desgnnd U @ 06_music_design_challengesh U - B [EEIE = R\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OT ailL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges l;[]\n19 (0]\n% 2\no 21 3. Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVod PZIE 3 DI TTES Tl o - To U VTS T Hg-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥oll'Cannot Input an empty String as a Eracks\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franrkar — MiciaTrarkar nou\n@ 06_music._design_challenge_spec.rb U X wa--\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\nP\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9 |\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new y . .\n12 expect(music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n® 13 hi\n& 14 end\n"
  },
  {
    "seconds": 784,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ¥ Otmsicdesgumdu x @ 06_music_design_challengesh U | B+~ B § x\no) ‘W?Jﬁ:%”?.‘u“f‘gmg MUSLC Tracks aauea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n\n19 (0]\n% 2\no 21 3. Create Examples as Tests\n\n22\n& 23 ‘ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n\n25 music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele']\n\n27 L\n\n28\n\n29 # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 music_tracker.add(\"') = [I¥oucannot input an empty string as a Erack\"\n\n32\n\n33 #3) # List method will return all tracks added\n\n34 L UVES Kol o - T TR | (VT el ff =Tl T G T2\n\n35 music_tracker.add('Hello - adele’')\n\n36 music_tracker.add(’'lie - nf')\n\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\nT micin Franrkar — MiciaTrarkar nou\n\n@ 06_music_design_challenge_specsb U X wa--\nspec > @ 0BMusic_design_chalienge,_spec,d\n\n1 require '@06_music_design_challenge'\n\nP\n\n3 RSpec.describe MusicTracker do\n\n4 | xit 'adds song to tracker' do\n\n5 LTS Tl 4T I 71 Uol f o= T () g 100\n\n[ music_tracker.add('Hello - adele')\n\n7 expect{music_tracker.list).to eq ['Hello - adele']\n\n8 end\n\n9\n\n10 xit 'adding an empty string will fail' do\n\nn music_tracker = MusicTracker.ne\n\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 i\n& 14 end\n"
  },
  {
    "seconds": 785,
    "text": "[ X N J 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ © Oomuscdagumd U @ 06_music_design_challengesh U | B+~ B8 § x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\np 10 # returns L1st OF aLlL musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefqes %[]\n19 end\nB 2\no 21 3. Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVod PZINE 3 DI TTES Dol - To T | TES T T T T\n25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\n27 L\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') = IYGUICARNGEIAPUEIBNIEApEYISEFInGIBSIBIErack:\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nEL) music_tracker.add(’'lie - nf')\n37 LTS R o Tl T B 5L i R T R C -1, ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_spec.rb U X @ -\nspec > @ 0BMusic_design_chalienge,_spec,d\n1 require '@06_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 | LTS Tl 4T I 71 Uol f o= T () g 100\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9 |\n10 xit 'adding an empty string will fail' do\n11 music_tracker = Music]'raqkef.new\n12 expect(music_tracker.add('*)\n® 13 '\n& 14 end\n"
  },
  {
    "seconds": 786,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\nO ¢ Oesmusicdesgnmd v x @ 06_music_design_challengesh U -] BDm +~ B & x\n0 e S taSE ST aLL mUSLC Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] ’\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n3 ' music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franbar — MiucinaTrarkar nou\n@ 06_music.design_challenge_spec.rb U X wao -\nSp6c > @ 06_music_design_challenga_spec. i\n1 require '@06_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect (music_tracker.add('')).to raise_error 'You cannot input an empty string as a track!|\n® 13\n& 14 end\n"
  },
  {
    "seconds": 787,
    "text": "oeeo 06_music_design_challenge_spec.rb — Skill_Challenges DEemlos\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJel e T RS g TR TES TR S TR L L T T 1Y © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n2\" music_tracker.add(\"\") =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franbar — MiucinaTrarkar nou\n@ 06_music_design_challenge_spec.rb U ®. -\nSp6c > @ 06_music_design_challenga_spec. i\n1 require '@06_music_design_challenge'\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele’)\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n1 music_tracker = MusicTracker.new\n12 expect(uusic_trackzr.add(\"')‘)'.to raise_error 'You cannot input an empty string as a track®\n® 13\nb\n{3} AR . b4 4 | u\n"
  },
  {
    "seconds": 788,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges DEemlos\nQ¢ Oamusicdesgundu X @ 06_music_design_challengesh U - B R+~ B & x\nJe) ‘W’%‘Jﬁ’a\"s\"?.‘u“f‘é’m; [ TR TR LN IR R T © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] .\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31\" music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micin Franbar — MiucinaTrarkar nou\n@ 06_music.oesign_challenge.specsb U X na -\nSp6c > @ 06_music_design_challenga_spec. i\n1 require '06_music_design_challenge’\n2\n3 RSpec.describe MusicTracker do\n4 | xit 'adds song to tracker' do\n5 LIVES TolR 4 - T4 T Il 715 Ty 2= Tof {-T M [0\n6 music_tracker.add('Hello - adele')\n7 DU TS TR - T T S S IS GO B AL T A G R T A R |\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 LTS (ol o =T T TS =Tl T O\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track®'\n® 13 b\n14\n{3} lals ¢ : 4 | u\n"
  },
  {
    "seconds": 789,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\n28 |\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkbar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.ry\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 LVES U 4 - T T L VT3 Tt - Tod {-T oM [\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\no) 14\n15\n& 16\n"
  },
  {
    "seconds": 790,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\npA:]\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\npec > @ 06_music_design_challengs_spec.r\n“\nR LY T Tl XY TS (V1 Rl =T (T G )\n4 xit 'adds song to tracker' do\n5 LUTES TR 4o T CT R T3 Lot i - 1o {-T oM (20\n6 music_tracker.add('Hello - adele')\n7 A TS TR - T M S RIS IS I I IR T Y U |\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\no) 14\n15 it\n& 16\n"
  },
  {
    "seconds": 791,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges =35 B\ng ¥ Oomusedesgnndu X @ 06_music_design_challengesh u- | Do ++ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 i\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music. desion_challenge_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 ‘ music_tracker.add('Hello - adele')\n7 A (T TR - T CIM S R S I SO I A Y A IR T A |\n8 end\n9\n10 xit ‘adding an empty string will fail' do\n11 LIS Uoll o =T T L TS ot f = Ted (-1 [\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it |\n& 16\n"
  },
  {
    "seconds": 792,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njol 10 # returns L1stT OF all MUSLC Tracks aaaea (0 array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 i\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_aesign.chalienge_spec.rb U @ no-\nspec > @ 06_music_desion_challenge_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele']\n] end\n]\n10 xit ‘adding an empty string will fail' do\n11 ‘ LIVES Uoll o =Tl (S L 73 oy f =Tl (-1 [\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it \"\n& 16\n"
  },
  {
    "seconds": 793,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_aesign.chalienge_spec.rb U @ no-\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it \"\n& 16\n"
  },
  {
    "seconds": 794,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_aesign.chalienge_spec.rb U @ no-\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it \"\n& 16\n"
  },
  {
    "seconds": 795,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it '\n& 16\n"
  },
  {
    "seconds": 796,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n@ u ‘\n15 it 'list |\n& 16\n"
  },
  {
    "seconds": 797,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_aesign.chalienge_spec.rb U @ no-\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit '‘adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it 'list meth’\n& 16\n"
  },
  {
    "seconds": 798,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_aesign.chalienge_spec.rb U @ no-\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit '‘adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it 'list method wil'\n& 16\n"
  },
  {
    "seconds": 799,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit '‘adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it 'list method will re\n& 16\n"
  },
  {
    "seconds": 800,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_desion_challengs_spec.rd\n“\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 | music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit '‘adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it 'list method will return all t\n& 16\n"
  },
  {
    "seconds": 801,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_desion_challengs_spec.rd\n“\nR Y T-Tal s T 1 TS [V Rl =T T G )\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit '‘adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it 'list method will return all tracks add]’\n& 16\n"
  },
  {
    "seconds": 802,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nQ¥ Ot degnmd u X @ 06_music_design_challenge.rh U -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music.oesign_challenge.specsb U X na -\nspec > @ 06_music_desion_challengs_spec.rd\n“\nR Y T-Tal s T 1 TS [V Rl =T T G )\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 L]\n]\n10 xit '‘adding an empty string will fail' do\n11 ‘ LTS Ul 4-Tel T E L TS Cal o o= Tl (- M [N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n) 14\n15 it 'list method will return all tracks added®\n& 16\n"
  },
  {
    "seconds": 803,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.\nS NOPECUESLILDE MUSLLITdCKRET uu\n4 PERIRET [ YT TR I o - Tl T L 0}\n5 | music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 SO (TS TR T LM S I ST I A Y R G REET Y TR\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ' LLUTES Ul 4 -Tel I E L TS Cal o o Tl (- M [N\n12 \\ expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\nb}\no) 15 xit 'list method will return all tracks added'\n16 |\n& 1\n"
  },
  {
    "seconds": 804,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1ST OF all MUSLC Tracks aduea To array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.\nS NOPECUESLILDE MUSLLITdCKRET uu\n4 PERIRET [ YT TR I o - Tl T L 0}\n5 | music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 SO (TS TR T LM S I ST I A Y R G REET Y TR\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ' LLUTES Ul 4 -Tel I E L TS Cal o o Tl (- M [N\n12 \\ expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\nb}\no) 15 xit 'list method will return all tracks added'\n16\n& 1\n"
  },
  {
    "seconds": 805,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music.oesign_challenge.specsb U @ na -\nspec > @ 06_music_design_challenge_spec.id\nS MOPEC.UESLILINE MUSLLITdCKRET uu\n4 PERIRET [ YT TR £ o - Tl T 0}\n5 | music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ' LLUTES Ul 4 -Tel I E L (TS Kol f = Tl (- M [N\n12 [ expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\nb}\no) 15 xit 'list method will return all tracks added'\n16 !\n& 17\n"
  },
  {
    "seconds": 806,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rh - -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele’')\nkL LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥frankar — MueinTrarkar nau\n@ 06_music.oesign_challenge.specsb U @ na -\nspec > @ 06_music_design_challenge_spec.rd\nS MOPEC.UESCILIVE MUSLLITdCKRET Uy\n4 PERIRET [ Y\\ TR £ o - Tl T S 0}\n5 | music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ' LLUTES TR - Tel T E L TS Kol o = Tl (- M [N\n12 | expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 [0 ]\nb}\n® 15 |1t (st\n16\n& 17\n"
  },
  {
    "seconds": 807,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 ‘ music_tracker.add('Hello - adele')\n7 ‘ SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ LTS TR - Tel I E L (TS Cal o o= Tl (- M [N\n12 | expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 [0 ]\nb\no) 15 xit 'list method will return alacks added' do\n16 -\n& 17\n"
  },
  {
    "seconds": 808,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 i\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello -~ adele')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_spec.rb U @ wo-\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 ‘ music_tracker.add('Hello - adele')\n7 ‘ SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n] end\n]\n10 xit 'adding an empty string will fail' do\n11\n12 1 «~music_design_challenge aise_error 'You cannot input an empty string as a track'\n13 end |=music_tracker\n14 Omodule Module definition\no) 15 xit '[~MusicTracker ks added' do\n16\n& 17 |\n"
  },
  {
    "seconds": 809,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 ‘ music_tracker.add('Hello - adele')\n7 ‘ SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ music_tracker = MusicTracker.new\n12 | expect(music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 end ) )\nb\n@ 15 xit 'list =music_tracker  Jed' do\n16 usic_|\n& 17 |\n"
  },
  {
    "seconds": 810,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJel Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 ! music_tracker.add('Hello - adele')\n7 SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n] end\n]\n10 xit 'adding an empty string will fail' do\n11 1 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 end i )\nb\n) 15 xit 'list ' do\n16 B\n& 17 |\n"
  },
  {
    "seconds": 811,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 i\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music.design.chalienge_spec.rb U ® no-\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 ‘ music_tracker.add('Hello - adele')\n7 ‘ SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n] end\n]\n10 xit 'adding an empty string will fail' do\n11 ‘ [LUTES T o -V 01\n12 | expect(music_trac*method cannot input an empty string as a track'\n13 end ) =music_design_challenge\n14 =music_tracker\n) 15 xit 'list method willOmodule Module definition\n16\n& 17 |\n"
  },
  {
    "seconds": 812,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 i\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥rarkar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 | music_tracker.add('Hello - adele')\n7 SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 \" music_tracker = MusicTracker.new\n12 | expect{music_tracker.add(''}).to raise_error 'You:cannot input an empty string as a track'\n13 [0 ]\n14\n) 15 xit 'list method will return all tracks added' do\n16\n& 17 |\n"
  },
  {
    "seconds": 813,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 i\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥rarkar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 | music_tracker.add('Hello - adele')\n7 SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 \" LUUTES Nl o =Yl 1 L TS U f - T (TN S\n12 | expect(music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 [0 ]\n14\n) 15 xit 'list method will return all tracks added' do\n16\n& 17 |\n"
  },
  {
    "seconds": 814,
    "text": "o0e® 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ! music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥rarkar — MueinTrarkar nau\n@ 06_music_design_challenge_specsb U @ o\nspec > @ 06_music_design_challenge_spec.rd\nS MOMEC.UESLILVE MUSLLITdCKET uu\n4 xit 'adds song to tracker' do\n5 | music_tracker = MusicTracker.new\n3 | music_tracker.add('Hello - adele')\n7 SO A (TS TR T CLM ST S IS T T A (Y A R T U4\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 \" LUTES Nl o =Yl 1 L TS U f - T (TN T2\n12 | expect(music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 [0 ]\n14\n) 15 xit 'list method will return all tracks added' do\n16\n& 17 |\n"
  },
  {
    "seconds": 815,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 10 # returns L1st OT allL MmuUS1C Tracks aaaea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\npA:]\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31\" music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | micins ¥rarkar — MuciaTrarkar nau\n@ 06_music_design_challenge_specrb U & o\nspec > @ 06_music_desion_challenge_spec.r>\n“4 X1U 'aqds song To wracker' uv\n5 LUTES TR d o To T TS ot f 0™ [of (-1 oM (20\n6 music_tracker.add('Hello - adele')\n7 ! SO (TS TR T CLM ST S IS T I A (Y A R T U4\n8 ]\n]\n10 xit 'adding an empty string will fail' do\n11 | LATES Nl o =Yl 1 L TS Uy f - T (TN TS\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n) 16 nusic_tracker = MusicTracker.new\nb\nﬁ} 18 |\n"
  },
  {
    "seconds": 816,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\n0 Lo # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 2\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\nECIE 7B (TS Tl a - To CURE S 5 T =T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 music_tracker.add('Hello - adele’')\n36 LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nan | muein ¥rarkar — MueinTrarkar nau\n@ 06_music_design_challenge_specrb U & o\nspec > @ 06_music_desion_challenge_spec.r>\n“4 X1U 'aqds song To wracker' uv\n5 LUTES TR d o To T TS ot f 0™ [of (-1 oM (20\n6 music_tracker.add('Hello - adele')\n7 | SO (TS TR T CLM ST S IS T I A (Y A R T U4\n8 L]\n9\n10 xit 'adding an empty string will fail' do\n11 | LATES Nl o =Yl 1 L TS U - T (-1 T\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n) 16 nusic_tracker = MusicTracker.new\nb\nﬁ} 18 |\n"
  },
  {
    "seconds": 817,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenge.sb U e Bwms +v B § x\n® 06_music_design.md > (5] # Adding tracks o tracker :\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challeflges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU TR T DT LT T R T P U\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\naa | micin +rankar — MuciaTrarkar nau\n@ 06_music_design_challenge_specrb U @ -\nspec ) @ 06_music_design_chalenge_spec.r>\n“4 X1TU ‘aqds song 1o wracker' uu\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 LTS (ol o - Tel T 115 oy -1, - LR\n12 ise_error 'You cannot input an empty string as a track'\nk] end [«~music_design_challenge\n14 C TS TR 4-1d 1y\n15 xit 'Omodule Module definition ;g added® do\n® 16 «~MusicTracker\n17\n& 18\n"
  },
  {
    "seconds": 818,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenge.sb U e Bwms +v B § x\n® 06_music_design.md > (5] # Adding tracks o tracker :\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challeflges \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') = [YoUIGANAGEIMNPUEIBNIENpEyISErinG as aTErack:\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU TR T DT LT T R T P U\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\naa | micins +rankar — MuciaTrarkar nau\n@ 06_music_design_challenge_spec.rb U @ -\nspec ) @ 06_music_design_challenge_spec.r>\n“4 X1TU ‘aqds song 1o wracker' uu\n5 music_tracker = MusicTracker.new\n3 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 [T Yol o Yol T V18 S a-Ter (- G [0\n12 expect{music_tracker.add('*}).to raise_error 'You cannot input an empty string as a track’\npE] end\n14\n15 xit 'list method will return all tracks added® do\n® 16 music_tﬁ\n17\n& 18\n"
  },
  {
    "seconds": 819,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec ) @ 06_music_design_challenge_spec.rd\n“4 X1TU 'aqas song To wracker' uu\n5 LTS TR - 1o I . TS Lo g 1ot (- g L\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 fLITES ol o Vol T V1S T = Ter (-1 g [0\n12 expect{music_tracker.add('*'}).to raise_error 'You cannot input an empty string as a track’'\n13 end\n14\n15 xit 'list method will return all tracks added® do\no) 16 music_tracke_ sic_tracke\n17 usic_tracker\n& 18\n"
  },
  {
    "seconds": 820,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06music_design_chalenge_spec.\n“4 X1LU \"aqas song To wracker' uu\n5 LTS TR a1 G 715 Tof f 0™ [ (-1 (20\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 LTS ol o Vol T 715 Ul =Tt (- G L0\n12 expect{music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n) 16 LTES TR a1 I L VI3 Tt 2 [of {-T oM 511\n17\n& 18\n"
  },
  {
    "seconds": 821,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LU TR T DT LT T R T P U\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n] end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 music_tracker = E\n17\n& 18\n"
  },
  {
    "seconds": 822,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\no) 16 LTES TR a1 I L X3 Tof 0 (o (-1 12\n17 _\n& 18\n"
  },
  {
    "seconds": 823,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\no) 16 music_tracker = MusicTracker.new\n17\n& 18\n"
  },
  {
    "seconds": 824,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\no) 16 music_tracker = MusicTracker.new\n17\n& 18\n"
  },
  {
    "seconds": 825,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\no) 16 music_tracker = icTracker.new\n17 usic_trackel ,.-7‘;,;!‘1' b\n& 18\n"
  },
  {
    "seconds": 826,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 LTES TR -1 G (115 oy 8™ 1ol (T oM [0\n17 usic_tracker.add('Hellol')\n& 18\n"
  },
  {
    "seconds": 827,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\no) 16 LTS Tl - T T L (715 ol 8 2= 1ol (-1 a0 [0\n17 usic_tracker.add('Hello|')\n& 18\n"
  },
  {
    "seconds": 828,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 LTS Tl - T T L (715 ol 8 2= 1ol (-1 80 [0\n17 u!.,ﬂ _tracker.add(/'Hello ')\n& 18\n"
  },
  {
    "seconds": 829,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 LTS Tk - T T (715 ol 8 2= Tol (-1 a0 [0\n17 u!.,ﬂ _tracker.add(/'Hello ')\n& 18\n"
  },
  {
    "seconds": 830,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 LTS Tl - T T L (715 ol 8 2= 1ol (-1 oM [0\n17 u!.,ﬂ _tracker.add('Hello '}\n& 18\n"
  },
  {
    "seconds": 831,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 LUTES TR o -1 I (115 Tl 2% 1ol (- oI008\n17 usic_tracker.add(|'Hello - ade ',\"_f“',‘\n& 18\n"
  },
  {
    "seconds": 832,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.r>\n“4 X1U 'aads song To wracker' uu\n5 LES TR a1 G 715 ot g o™ (o (-1 (O\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n® 16 music_tracker = MusicTracker.new\n17 usic_tracker.add(|'Hello - ade e’ \",‘\n& 18\n"
  },
  {
    "seconds": 833,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges \\[]\n19 (0]\nT}\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nan | miuein trankar — MueinTrarkar nau\n@ 06_music_design_challenge_spec.rb U @ -\nspec ) @ 06_music_dasign_challenge_spec.>\n2 mus1C_tracker = Fius1Cr racker «New\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n-] end\n9\n10 xit 'adding an empty string will fail' do\n11 [T Yol o Yol T V18 S a-Ter (- G [0\n12 expect{music_tracker.add('*}).to raise_error 'You cannot input an empty string as a track’\npE] end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n@ nusic_tracker.add('Hello - adele')\nbE:]\n& 19\n"
  },
  {
    "seconds": 834,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec) @ 06music_desion_challenge_spec.>\n2 . mus1C_tracker = Fius1Crracker «New\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n19 xit 'adding an empty string will fail' do\n11 LITES (ollh o =Tl T TS T i ™= 1ot (T P 511\n12 expect{music_tracker.add('*)).to raise_error 'You cannot input an empty string as a track'\npE] end\n14\n15 xit 'list=music_design_challeng ded' do\n16 musig=music_tracker\n) 17 music*=MusicTracker\nbE:] TEB s\n& 19\n"
  },
  {
    "seconds": 835,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT}\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec ) @ 06_music_design_challenge_spec.>\n2 MUS1C_TracKer = Musillracker .(iew\n[ LB TRV - T T TR TN T ) A\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n19 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list=music_design_challengs ded' do\n16 musig=music_tracker\n) 17 music=MusicTracker\n18 usi\nLT\n"
  },
  {
    "seconds": 836,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT}\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec ) @ 06_music_design_challenge_spec.>\n2 MUS1C_TracKer = Musillracker .(iew\n[ LB TRV - T T TR TN T ) A\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n19 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 [TESTY\n@ W nusic_\n18 TES (ol\n& g\n"
  },
  {
    "seconds": 837,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06 music_designmd U % @ 06_music_design_challenge.rb U - B B+ 8 & x\n# 06_music_design.md > (5 ¥ Adding tracks 1o tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*) =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec ) @ 06_music_design_challenge_spec.r>\n2 MUSL1C_TracKer = priusiliracker .few\n[ music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('*'}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To G (T1 Toy - [of (- N0 (10\n) 17 music_tracker*music_tracker\n18 TES TR 4T TTy\nLT\n"
  },
  {
    "seconds": 838,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenge.sb U e Bwms +v B § x\n® 06_music_design.md > (5] # Adding tracks o tracker :\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerms \\[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ! music_tracker.add(*') = [YoUICARMOEIINPUEIBNISNpEy SErinGIBSIaIErack\"\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LU TR T DT LT T R T P U\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLC_TracKker = rusilirdcker . .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empt\n11 music_tracker =*added\n12 expect(music_tr=adding u cannot input an empty string as a track'\n13 end = adds\n14 =adele\n15 xit 'list method wi~all\n16 LLUVES Tollh 4y Tol T o kL1\n® 17 LT ToNR 4y:To T bl\n18 TES Tl d - Tel T\n& g9\n"
  },
  {
    "seconds": 839,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T Y 715 Tot o~ [of {-T oM 1210\n® 17 LTS TR §-Te YL LR AR DT [ E\n18 usic_tracker.add [{;)|\n& 19\n"
  },
  {
    "seconds": 840,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T CYE V15 Tot = [of (-1 oM (0]\n® 17 LTS 1ol 4T -1 LR AR DT [\n18 usic_tracker.add [{{'|'}\n& 19\n¥ R 3 Ln 18, Col 2 @ Space oo LV - 4 ™\n"
  },
  {
    "seconds": 841,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T CYE V15 Tot = [of (-1 oM (0]\n® 17 music_tracker.add('Hello - adele')\nbE:]\n& 19\n"
  },
  {
    "seconds": 842,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T CYE 115 Tof ™ 1o (-1 oM (50\n® 17 music_tracker.add('Hello - adele’)\nbE:]\n& 19\n"
  },
  {
    "seconds": 843,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T T 115 ot g 0™ 1o (-1 oM (20\n® 17 music_tracker.add('Hello - adele’)\n18 TS Tollh ol =Tl TP 1o s IR o W\n& 19\n"
  },
  {
    "seconds": 844,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sb U - B B+ 8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\ni # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ TES TR - T G | (TF T - Te T TV\n35 LIRS TR T (LT [ T AR =T [ (A\n36 ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T T 115 ot g 0™ 1o (-1 oM (20\n® 17 music_tracker.add('Hello - adele’)\n18 TES Tk 4 -Te LMY [ AR\n& 19\n"
  },
  {
    "seconds": 845,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('*'}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T T 115 ot g 0™ 1o (-1 oM (20\n® 17 music_tracker.add('Hello — adele®)\n18 usic_tracker.add [('lie |'}}]\n& 19\n"
  },
  {
    "seconds": 846,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_design_challenge.sh U e B+ B8 & x\n® 0Bmusic_design.md > (=) # Adding tracks to tracker .\np 10 # returns L1st OT aillL music Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 |\n28\npa:] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 [ UTES Tl - To TR L [T T =T T T2\n35 LIRS TR T (LT [ T AR =T [ (A\nkL ‘ LUTES TR =T (T [ [ S TR} ]\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr +rackar — MuecinaTrarkar nawu\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSLIC_TracKer = rusicirdcker .lew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('*'}).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTES TR 4y T T 115 ot g 0™ 1o (-1 oM (20\n® 17 music_tracker.add('Hello — adele®)\n18 usic_tracker.add [('lie |'))|\n& 19\n"
  },
  {
    "seconds": 847,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (= ¥ Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 end\nB 20\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\ni}\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecdisr tracskar — MuecinaTrarkar now\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUS1IC_Tracker = Musiciracker.iew\n6 | music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added’ do\n16 music_tracker = MusicTracker.new\n® 17 [T Tl 4 y-To] T E-T I 'Hello - dele')\n18 music_tracker.add [('lie - nfl)\n& 19\n"
  },
  {
    "seconds": 848,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MuecinTrarkar naw\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUSL1C_TracKker = musiclracker.iew\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 LUTES Ul o =T I L (T3 Mt N = Ted (-1 [0\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added’ do\n16 LUVES TR do-Td G TS Lot i g [of (T oM [N\n® 17 [T Tl d - To] T I 'Hello - dele')\n18 music_tracker.add [('lie - nfl')\nT\n"
  },
  {
    "seconds": 849,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nB 20\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 I\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MuecinTrarkar naw\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.r>\n2 MUS1C_Tracker = fusiciracker.iew\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n] end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added’ do\n16 LVES Tl a1 CYE [T15 ot i g 1ot (-1 oM T\n® 17 [T Tl - To UV G TR T RV T [ R\n18 music_tracker.add [(|'lie - nf’])]\n& 19\n"
  },
  {
    "seconds": 850,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 08_music_desgnmd U X @ 06_music_design_challenge.rb U -8 Do+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker :\np 10 # returns LAsT OT aill musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 ‘ N\ni}\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 LTS Tl - To TR | (VT T =Tl T T2\n35 music_tracker.add('Hello ~ adele')\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MuecinTrarkar naw\n@ 06_music_design_challenge_spec.rb U & @a--\nspec > @ 06_music_design_challenge_spec.r>\n° MUS1C_Lracker.aga\\ newwo — agete )\n7 expect{music_tracker.list).to ['Hello - adele']\n8 | end\n9 = end\n10 xit '~eq L[]\n11 « @xpect\n12 oif elsif else if elsif else rajse_error 'You cannot input an empty string as a track’\n13 end |Oif else if else\n14 0if elsif if elsif\n15 xit '(Obegin else ens. Exception bloc- 15 added’ do\n16 Obegin else Exception block with.\n17 begin ensure Exception block wi-\no) 18 =raise_error\n19\n& o9\n"
  },
  {
    "seconds": 851,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 08_music_desgnmd U X @ 06_music_design_challenge.rb U -8 Do+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker :\np 10 # returns LAsT OT aill musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 ‘ I\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 LTS Tl - To TR | (VT T =Tl T T2\n35 music_tracker.add('Hello ~ adele')\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MuecinTrarkar naw\n@ 06_music_design_challenge_spec.rb U & -\nspec ) @ 06_music_design_challenge_spec.r>\n° MUS1C_TracKker.aga\\ neLio — ageie }\n7 SO (T TR S T LM SIS PR LT I IR T (2 o4 |\n8 end\n9\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added’ do\n16 LTES TR 4y T CY R, 715 ot 2™ [of {-T oM 51\n17 LB TR - T T U s (R AN G T ) A\no) 18 music\n19\n& o9\n"
  },
  {
    "seconds": 852,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U -8 B ++ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (TP B 5 i R T R -1 ) FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MuecinTrarkar naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n° MUS1C_Tracker.agay ne.Lio — aogeie )\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added’ do\n16 LR TR - T CT o 715 Lol 2= Tof {-T oI [CIY]\n17 music_tracker.add('Hello - adele’)\no) 18 music_tracker.add ('lie - nf')\n19\n& 29\n"
  },
  {
    "seconds": 853,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenge.rb U - B B ++ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns LAsT OT aill musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\n36 ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MuecinTrarkar naw\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n° MUS1C_Tracker.aaa\\ neLio — aoeie )\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracke |\n17 music_tracke~music_tracker\no) 18 music_tracke*MusicTracker\n19\n& 29\n"
  },
  {
    "seconds": 854,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [T TR {x-T UL B TR AR REET Y PN\no) 18 music_tracker.add (’lie - nf')\n19 ‘expect(music_tracker]\n)\n"
  },
  {
    "seconds": 855,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [T TR {x-T UL B TR AR REET Y PN\no) 18 music_tracker.add (’lie - nf')\n19 ‘expecti{music_tracker.))\n& 29\n"
  },
  {
    "seconds": 856,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele’)\no) 18 [T TR TG T [ I AR S TR Y A\n19 expect{(music_tracker.)\n)\n"
  },
  {
    "seconds": 857,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenge.rb U - B B ++ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns LAsT OT aill musiC Tracks aaaea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefms \\[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\n36 ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\n° MUS1C_Tracker.aoay neLio — ageie )\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicT=lie\n17 music_tracker.add('Hel=tist\no) 18 music_tracker.add {'1i0loop forever loop\n19 expect/(music_tracker.l)\n)\n"
  },
  {
    "seconds": 858,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefues %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele’)\no) 18 [T TR T G- U s IR S TR ) A\n19 expect|(music_tracker. list]|\n& 29\n"
  },
  {
    "seconds": 859,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerges %[]\n19 (0]\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = Yol Cannot  input an enpty string as a track!\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit '‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele’)\no) 18 music_tracker.add [GASTIEN ) 4D\n19 expect(music_tracker.list).|\n& 29\n"
  },
  {
    "seconds": 860,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 PERRET BT IEL I T J o [T T RN -3 R I}\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele’)\no) 18 music_tracker.add [GASTIN Y 4D\n19 expect(music_tracker.list).to eq |\n& 29\n"
  },
  {
    "seconds": 861,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 music_tracker.add (GRS Y 2D\n19 expect(music_tracker.list).to eq |\n& 29\n"
  },
  {
    "seconds": 862,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T LU I AR S TR Y A\n19 expect(music_tracker.list).to eq |\n& 29\n"
  },
  {
    "seconds": 863,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T LU I AR S TR Y A\n19 expect(music_tracker.list).to eq |\n& 29\n"
  },
  {
    "seconds": 864,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chauefues \\[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 B TRV - T UM TR AR T 1Y A\no) 18 music_tracker.add (’lie - nf')\n19 expect(music_tracker.list).to eq |\n& 29\n"
  },
  {
    "seconds": 865,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chauefues %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq |\n& 29\n"
  },
  {
    "seconds": 866,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq\n& 29\n"
  },
  {
    "seconds": 867,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq\n& 29\n"
  },
  {
    "seconds": 868,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.l IR eq ['Hel L”:\n& 29\n"
  },
  {
    "seconds": 869,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chauefues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y ‘\n19 expect(music_tracker.list).to eq |[*Hello |']I\n& 29\n"
  },
  {
    "seconds": 870,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq [['Hello - adell'[]\n& 29\n"
  },
  {
    "seconds": 871,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq |[['Hello - ade'\n& 29\n"
  },
  {
    "seconds": 872,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Chauefues %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq [['Hello - adele ”\\‘\n& 29\n"
  },
  {
    "seconds": 873,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect{music_tracker.list).to eq |['Hello ~ adele]']]\n& 29\n"
  },
  {
    "seconds": 874,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challerues %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq |['Hello ~ adele']\n& 29\nLn 18, Cal ! T\n"
  },
  {
    "seconds": 875,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq |['Hello - adele', ||\n& 29\n"
  },
  {
    "seconds": 876,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq |['Hello - adele', [\n& 29\n"
  },
  {
    "seconds": 877,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenge.rb U | B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\np 10 # returns L1stT O7 aillL muUsSiAC Tracks aaoea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challefges %[]\n19 end\nT\nIS b3 B PR o1 ) SET T TR TR\n22\nB 23 ‘ # Adding tracks to tracker\nd PZ N 2 S I TS Tl o - Te T | TS T T T TN\n25 music_tracker.add('Hello - adele')\n26 music, list => ['Hello - adele’']\n27 N\n28\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = [¥ol\\cannot input an empty String asa track’\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello ~ adele')\nL ‘ music_tracker.add('lie - nf')\n37 LTS T o Tl T B 5 i B (1R C T () R I 1 |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucdisr trackar — MucinaTrarkar nawus\n@ 06_music_design_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.r>\no Mmusic_tracker.aaay necwo — agewe }\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit ‘adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add(''}).to raise_error 'You cannot input an empty string as a track'\n13 end\nb\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ B TRV - T UM TR AR T Y A\no) 18 [T TR T G- 1 s I AR S TR Y\n19 expect(music_tracker.list).to eq |['Hello - adele', ''|\n& 29\n"
  },
  {
    "seconds": 878,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengeh U - B B+ 8 & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1stT OTF all MUSLC Tracks aaaea (0 array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 ‘ music_tracker = MusicTracker.new\n35 LU T T TP L T T A T, TR TR\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinTrarkar now\n@ 06_music_design_challange_specrb U & na -\nspec > @ 06 music_desion_challenps_spec.it\no [ MmuUs1c_tracker.aaay newwo — aqece §\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 | xit 'list method will return all tracks added’ do\n16 LTS ol o - To Y L S T ool T TN\n17 music_tracker.add('Hello - adele')\n) 18 music_tracker.add ('lie — nf')\n19 expect{music_tracker.list).to eq |['Hello - adele', “lie ']\n& g9 |\n"
  },
  {
    "seconds": 879,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengeh U - B B+ 8 & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1stT OTF all MUSLC Tracks aaaea (0 array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 ‘ music_tracker = MusicTracker.new\n35 LU T T TP L T T A T, TR TR\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinTrarkar now\n@ 06_music_design_challange_specrb U & na -\nspec > @ 06 music_desion_challenps_spec.it\no [ MmuUs1c_tracker.aaay newwo — aqece §\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 | xit 'list method will return all tracks added’ do\n16 LTS ol o - To Y L S T ool T TN\n17 music_tracker.add('Hello - adele')\n) 18 music_tracker.add ('lie — nf')\n19 expect (music_tracker.list).to eq [['Hello - adele', “lie - nf|']]\n& g9 |\n"
  },
  {
    "seconds": 880,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n(R ¥ Otsmusicdesgumdu X @ 06_music_design_challenge.rb U - B B+ 8 & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:)\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 ‘ music_tracker = MusicTracker.new\n35 LU T T TP L T T A T, TR TR\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinaTrarkar now\n@ 06_music.design_challenge.specsb U ¥ na -\nspec > @ 06_music_design_chalenge_spec.>\no [ MUS1C_Tracker.aaay newwo — aqece §\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 LTS Tl - Tel TG TS K f o= T (T M T\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 | xit 'list method will return all tracks added’ do\n16 LTS Tl S - To Y L TS ot Tl =T [0\n17 music_tracker.add('Hello - adele')\n) 18 VTS ol o -Yol Yo=Y 1o I GR & T-IR ) D\n19 expect{music_tracker.list).to ] [['Hello - adele', “-..7‘;.* - nf']\n& 29 |\n"
  },
  {
    "seconds": 881,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n(R Ot msicdesgnmd u X @ 06_music_design_challenge.rh U -] BDm +~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 ‘ music_tracker = MusicTracker.new\n35 LU T T TP L T T A T, TR TR\n36 ‘ music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinaTrarkar now\n@ 06_music.design_challenge.specsb U ¥ na -\nspec > @ 06_music_design_chalenge_spec.\no [ Mmusic_tracKker.aaay necwo — agece )\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 | xit 'list method will return all tracks added' do\n16 LTS Tl 4 0= To Y T oy T =T [0\n17 music_tracker.add('Hello - adele')\no) 18 [ITES ol € -Yol Y=Y 1o IR & IR D »\n19 expect{music_tracker.list).to eq |['Hello - adele', 'lie - nf']\n& 29 |\n"
  },
  {
    "seconds": 882,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJel e T RS g TR TES TR S TR L L T ST 1Y © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\nI 73 B TS Tl d - T T | (TER e = T T T2\n31 * music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 LU T T TP L T T A T, TR TR\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinTrarkar now\n@ 06_music_design_challenge_specrb U & na -\n“)fwm%mﬁuslc_(racner. LLSL) LU G L neLLo — aoele’ )\n8 | end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added’ do\n16 | music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie — nf')\no) 19 expect (music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20\n& g |\n"
  },
  {
    "seconds": 883,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJo) 1o # returns L1st OF all MUS1C Tracks aauea o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\nI 73 B TS Tl d - T T | (TER e = T T T2\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 LU T T TP L T T A T, TR TR\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinaTrarkar now\n@ 06_music_design_challenge_specrb U @ @ -\n“)fwm%mzuslc_(racner. LLSL) LU G L neLLo — aoele’ )\n8 | end\n9\n10 xit ‘adding an empty string will fail' do\n11 [T (i o -Vl T L 7T 5 el =T (T M\n12 (21 0 VES Rall - Tl (e[ R I £ I o B T o T (CITRRC T T i T = TR o T - R o - Tl 3\n13 end\n14\n15 xit 'list method will return all tracks added’ do\n16 LTES TR x-To CIIE | 715 Loy - 1of (-T2\n17 (TS TR 4 - 1o LU S (R AR VIR Y A\n18 music_tracker.add ('lie - nf')\n) 19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20\n&\n"
  },
  {
    "seconds": 884,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJel e T RS g TR TES TR S TR L L T ST 1Y © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nB 20\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\nI 73 B TS Tl d - T T | (TER e = T T T2\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 LU T T TP L T T A T, TR TR\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinTrarkar now\n@ 06_music_design_challenge_specrb U & na -\nSpec > @ 0BMusic_design_chalann_soec.\no =1V\n9 |\n10 xit 'adding an empty string will fail' do\n11 ' music_tracker = MusicTracker.new\n12 expéct(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track®\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 VTS Coll o - Tl T ) VTS oy Tl {-T (S\n17 music_tracker.add('Hello ~ adele')\n18 music_tracker.add ('lie = nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']l\n® p1:] _end\n21\n& 2\n"
  },
  {
    "seconds": 885,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B B+~ B & X\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1st OT allL muUS1C Tracks aagea 1o array © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 \\ # Adding tracks to tracker\nVg PZIE 3 DI TTES Tl - To U VTS T g-Te T T2\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\nI 73 B TS Tl d - T T | (TER e = T T T2\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 LU T T TP L T T A T, TR TR\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskar — MuecinaTrarkar now\n@ 06_music_design_challenge_specrb U @ @ -\nspec > @ 06_music_desion_challangn_soec.m\ng e\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expéct(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 VTS Coll o - Tl T ) TS oy f Tl 0T oM (S\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\nL] expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n28 end )\n® 21\n22\n& 23\n"
  },
  {
    "seconds": 886,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\na ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\nJel e T RS g TR TES TR S TR L L T ST 1Y © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27 L\npi:3\n29 # Adding empty string will fail\nI 73 B TS Tl d - T T | (TER e = T T T2\n31 \" music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 L UVES Kol - T TR | (VT Dol jf - Tl T G T2\n35 LU T T TP L T T A T, TR TR\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | muecisr *racskbar — MuecinTrarkar now\n@ 06_music_design_challenge_specsb U & o -\nspec ) @ 06_music_design_challangn_spec.rd\n£\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expéct(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 VTS Uoll o - Tl T L TS oy f - Ted 0T (S\n17 music_tracker.add('Hello - adele')\n18 LITES Tl 4 T T [ IR & R 1 A\nL] expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\np1:] end\n® 21\n22\n& 23\n"
  },
  {
    "seconds": 887,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nQ ¥ 06_rmsic_designmd U X @ 08_music_design_challenges U | R+~ B & x\n¥ 0B.music,_design.md > () # Adding tracks to tracker .\njo) 10 # returns L1stT OTF all MUSLC Tracks aaaea (0 array © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n19 (0]\nT\nIS 21 3, Create Examples as Tests\n22\nB 23 ‘ # Adding tracks to tracker\nVg PZINE 3 I TTES Dol - To U | TS T T T T\n25 music_tracker.add('Hello - adele')\n26 music,list => ['Hello - adele']\n27\npi:)\n29 # Adding empty string will fail\nI 73 B TS Tl d - T T | (TER e = T T T2\n31 * music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added JI\n34 L UVES Kol - T TR | (VT ol ff =Tl T T2\n35 LU T T TP L T T A T, TR TR\n36 music_tracker.add('lie - nf')\n37 LTS R o Tl (T B 5 i B T R -T2 FR & TR |} A |\n38\n39 #4) # add method will fail if music track already exists in array\nA | mucisr *rackar — MucinTrarkar nawu\n@ 06_music_design_challenge_specsb U & o -\nspec > @ 06_music_design_chaliangn_spec.i\n£\n10 xit 'adding an empty string will fail' do\n11 LTS Tl d - T Y T Tt g 1ol (TR T\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nP} end\n® 21\n22 xit '\n& 23\n"
  },
  {
    "seconds": 888,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 0Bmusic_designmd > (£ # Asding tracks 10 trackes .\nJo) s © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 # Adding tracks to tracker\n® 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\nVd p2:)\npic} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32\n33 #3) # List method will return all tracks added\n34 LTES TR A - T T G | (TR o =Tl T Y T\n35 music_tracker.add('Hello - adele')\n£ music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | LTES TR - T G | (T Dof f =Tl Y T\n41 ‘ LIS Tl = T DT L T T A T T T2\n42 music_tracker.add('Hello - adele') => 'Track already exists!®\n43\naa\n@ 06_music_design_challange_specsd U @ o -\nspec > @ 06_music_design_chalianpn_spec.i\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES Tl - Tel T TS T 1o O-T M (O\n17 ‘ music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end bi\n® 21\n22\n& 23\n"
  },
  {
    "seconds": 889,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 0Bmusic_designmd > (£ # Asding tracks 10 trackes .\nJo) P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 # Adding tracks to tracker\n® 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\nVd 28\npic} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') = \"\n32 !\n33 #3) # List method will return all tracks added\n34 LTES TR A - T T G | (TR o =Tl T Y T\n35 music_tracker.add('Hello - adele')\n£ music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\nLI 7 YR T L T T AR SR SRR & ol TS Tl - T AN ET VO S (S I T 1\n40 LTES TR - T T G | (T Dol f =Tl Y T\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!®\n43\na4\n@ 06_music_design_challange_specsd U @ o -\nspec > @ 06 music_desion_chalanpn_spec.i\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n) 21\n22\n& 23\n"
  },
  {
    "seconds": 890,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_design,md > (£ # Asding tracks 1o trackes .\nJe ‘s © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 # Adding tracks to tracker\n35 PLIE 5 I TES Tl o - To IR | (TES Uef f =Tl (T G TV\ni 25 ‘ music_tracker.add('Hello - adele’')\n26 music.list => ['Hello - adele'l\nB 27\nVg pi:}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add('') =\n32 P\n33 #3) # List method will return all tracks added\n34 | LUTES TR - Te T G (TS e f =Tl T A T\nk1 ‘ music_tracker.add('Hello - adele')\n36 | music_tracker.add('lie - nf')\n37 | music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES TR - Te T G | (TS Tof f =Tl T T\n41 music_tracker.add('Hello - adele')\n42 LUES TR o T T T I AT T B i =T 1 L O S T\n43\na4\n@ 06_music_design_challange_specsb U @ na -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\n22\n& 23\n"
  },
  {
    "seconds": 891,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 0B_music_designmd > (5 # Asding tracks 10 trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 # Adding tracks to tracker\n® 24 #1) music_tracker = MusicTracker.new\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nB 27\nVg pi:}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') = L\n32 |\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 ‘ music_tracker.add('Hello - adele')\n36 | music_tracker.add('lie - nf')\nEy music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 = music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\n43\nV.V 8\n@ 06_music_design_challinge_specsb U @ o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\npri (it 'ad d method will f: 74‘\n& 23\n"
  },
  {
    "seconds": 892,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 I\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUES TR T T LT I IR I 0 B =T e 1 E L YOS\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\nb7 (it 'add method will fai\n& 23\n"
  },
  {
    "seconds": 893,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn B\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUES TR T T LT I IR I 0 B =T e 1 E L YOS\n43\na4\n@ 06_music_design_challange_specrb U @ na -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n@ 2 ‘\n22 (it 'add method will fail if-musil’\n& 23\n"
  },
  {
    "seconds": 894,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUES TR T T LT I IR I 0 B =T e 1 E L YOS\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\n22 (it 'add method will fail if music track ‘\n& 23\n"
  },
  {
    "seconds": 895,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[Q ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\n> 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*!) =\n32 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\n) (it 'add method will fail if music track already ex'\n& 23\n"
  },
  {
    "seconds": 896,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[Q ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\n> 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*!) =\n32 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\n& 23\n"
  },
  {
    "seconds": 897,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[Q ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\n> 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*') =\n32 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\n22 (it 'add method will fail if music track already exists in array|'\n& 23\n"
  },
  {
    "seconds": 898,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\n> 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*!) =\n32 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_spec.sb U X o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\n22 (it 'add method will fail if music track already exists in array'\n@ 23\n"
  },
  {
    "seconds": 899,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[ ¢ Otsmusicdesgumdu X @ 06_music_design_challenge.rb U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJe) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_spec.rb U X% o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 ‘ TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end (af. [ Insert do .. end block\n) 21 (mf\\ [:Y:) Insert do |variable| . w\n22 (it 'add method will fail if music track already exists in array' ¢\n@ 23\n"
  },
  {
    "seconds": 900,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\ne ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\n> 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*!) =\n32 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_spec.rb U X o -\n5p6c > @ 0B_music_design_chaBeanon_spec.b\n£\n10 xit 'adding an empty string will fail' do\no & ! LTES TR 4 - To T TS ot f - Tof (-1 M 15\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L TES U - Tel T E L TS Ml o o Ted (T M [\n17 TS ol =T TG G TR AR T S R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n) 21\nb7) ¢it 'add method will fail if music track already exists in array' d\n@ 23\n"
  },
  {
    "seconds": 901,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\no ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nZ& PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\n“i:wmmﬁan emptly String witut raic do\n11 LTES TR 4 - To T TS Tt g - Tof (-1 oM 12\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTS Ul - Tel T E L TS Ml o o Ted (T M [\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n21\no) 22 xit 'add method will fail if music track already exists in array' do\npx\n& 2\n"
  },
  {
    "seconds": 902,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n% 24 #1) music_tracker = MusicTracker.new\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') => [¥ou cannot input an empty String as a track\"\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 | music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LUTES (R T TP [ [ T A Y T (A )\n42 | music_tracker.add('Hello - adele') => 'Track already exists!®’\n43\nV.V\n@ 06_music_design_challangespecsb U @ o -\nspec > @ 0Bmusic_desion_chalenge_spec.\nw0 X1U 'againg an emply STring witi fall’ Qo\n11 LIS ol o - T T (75 Tof =Tl {-TaM\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 L UTES Ul - Tel T E L TS Ml o o Ted (T M [\n17 music_tracker.add('Hello - adele')\n19 ex=music_design_challenge Hello - adele', 'lie - nf']\n20 end =music_tracker\n21 ~MusicTracker\n® 22 xit 'afmodule Module definition }k already exists in array' do\nb !\n& 2\n"
  },
  {
    "seconds": 903,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\no ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\nE PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUES TR T T LT I IR I 0 B =T e 1 E L YOS\n43\na4\n@ 06_music_design_challinge.specsb U @ o -\nspec > @ 0Bmusic_design_chalenge_spec.d\n10 X1TU 'aqding an empty STring wiil fait’ do\n& LTES TR 4 - To T TS Tt f g Tof (-1 g 12\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 ‘ LTES o 4T T PTG B TR ) )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\nbl end\n21\n® 22 xit 'add method will fail if music track already exists in array' do\n3 | owmsid\n& 2\n"
  },
  {
    "seconds": 904,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\no ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\n38 PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\na4\n@ 06_music_design_challinge_specsb U @ o -\nspec > @ 06_music_design_challenge_spec.rd\n10 X1TU \"aqalng an empty STring wiil fait’ ao\n11 LUTES TR 4 o To G TS ot B g Tof (-1 M (2]\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LUTES T d-Tel TT T R B TR ) e\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n® by xit 'add method will fail if music track already exists in array' do\n23\n& 2 |\n"
  },
  {
    "seconds": 905,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\no ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\n38 PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’]\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') => [¥ou cannot input an empty String as a track\"\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LUES T =T LT LT T A T T U3\n42 LUES TR T T LT I IR I 0 B =T e 1 E L YOS\n43\naa\n@ 06_music_design_challange_specrb U @ o -\nspec > @ 06_music_design_challenge_spec.rd\n10 X1TU \"aqalng an empty STring wiil fait’ ao\n11 LUTES TR 4 o To G TS ot B g Tof (-1 M (2]\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - ddele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.*MusicTracker le - nf1]\nPl end =music\n21\n) 22 xit 'add method will faill=~music_tracker array' do\n23 TEP ol o - (o (=] Musig]\n& 24\n"
  },
  {
    "seconds": 906,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_design_challenges U - B R+~ B & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\no ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\n3 PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele’]\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') => [¥ou cannot input an empty String as a track\"\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUES TR T T LT I IR I 0 B =T e 1 E L YOS\n43\nV.V\n@ 06_music_design_challange_specrb U @ o -\nspec > @ 06_music_design_challenge_spec.rd\nFUR X1TU \"aqalng an empty STring wiil fait’ ao\n11 LUTES TR 4 o To G TS ot B g Tof (-1 M (2]\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to-eq ['Helle - adele', 'lie - nf']\n20 end\n21 .\n® 22 xit 'add method will fail if music t_\n23 usic_tracke MusicTracker.n l\n& 24\n"
  },
  {
    "seconds": 907,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > (£ # Asding tracks o trackes .\nJel ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) # Adding tracks to tracker\n3 PR DI TTES Dol o - To T L (TES U =T T o 2]\ni 25 | music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\nVd i}\n29 | # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n73 W\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker,list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 | music_tracker = MusicTracker.new\n41 LIRS (R T TP [ [ TR T T (A\n42 LUER T Tl TP [ O T AT Y U0 B f =T 1 L S S T LY\n43\naa\n@ 06_music_design_challinge_specsb U ® o -\nspec > @ 06_music_design_challange_spec.id .\nFUT MUS1C_Lracker = fiusiciracker .iew\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LTS Tl o =T T L (71 M f =T (T M 150\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).toveq ['Helle - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) 23 music_tracker = MusicTracker.new\np2 ]\n& 25 |\n"
  },
  {
    "seconds": 908,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng * Oormsicdesonmdy X @ 06_music_design_challenge.rh U -] B ++ B & x\n¥ 0B.music_design.md > (5] # ASding tracks 10 tracker .\ne 7/ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\ni 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\no 26 music.list => ['Hello - adele'l\n& 27\ng pi:]\ni} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add(') = L\n32\n33 #3) # List method will return all tracks added\nkL3 LUTES TR o T TR (TS Vol f =T (T T\n35 music_tracker.add('Hello - adele')\n£ music_tracker.add('lie - nf’')\n37 L TVES Tolll o T TP BT S R (Y R T Y LB § TN |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add(‘Hello ~ adele')\n42 music_tracker.add('Hello - adele') => 'Track already existst'\na3\n44\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design challenge_spec. i\nil MUSLC_Tracker = rusilirdcker « W\n12 expect{music_tracker.add{'')}.to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 ITES Tl d =Tl T L 1S oy - U (T g (0\n17 music_tracker.add('Hello ~ adele')\n18 [T ol -Vl Y [ I B I 1 D\nL} expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end '\n21\n22 xit 'add method will fail if music track already exists in array' do\n) PE) nusic;tﬁ\n24\n@& 25\n"
  },
  {
    "seconds": 909,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng * Oarmsicdesonmdy X @ 06_music_design_challenge.rh U -] B ++ B & x\n¥ 06_music_designmd > () # Adding tracks 1o trackes .\ne i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n% 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\no 26 music.list => ['Hello - adele'l\n& 27\nV-d pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o T TR (TS ol f =Tl T TN\n35 music_tracker.add('Hello - adele')\nk) music_tracker.add('lie - nf')\n37 L TVES Toll o T TP BT S B Y R T ) LS & TN |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add(‘Hello ~ adele')\n42 LIS Tl T DT [T T BT TR A B =T e T IS E S\n43\n44\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.r>\nL MUSL1C_Tracker = rusiliracker ..liew\n12 1 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LUTES Ul o =Tl T o TS ey f ™ T (T M (50\n17 LTES (o - T T MY L [ A N - 1 (1 R )\n18 ‘ music_tracker.ad\n19 expect (music_tra=added , '\"lie - nf']\npl] end ~adding\n21 « adds\n22 xit 'add method will=adele 1 -1l - VAR 1)\n® il music_tracker = «already\np2L)\n& 25\n"
  },
  {
    "seconds": 910,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () # Adding tracks 1o trackes .\ne i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\ni 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o T T | (TES o f =T T TN\n35 music_tracker.add('Hello - adele')\nk) music_tracker.add('lie - nf')\n37 [ TVES Tolll o T T BT E S 5 Y & DT, ) LS & - |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add(‘Hello ~ adele')\n42 LIS Tl T DT [T T BT T A B =T e T S E 1\n43\n44\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_design_challenge_spec.r>\nL MUSLIC_Tracker = fMusilirdcker . .lew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LUTES Ul o =Tl I G TS ™ T (T M (50\n17 LTES o 4 1o Y L T A R C T (Y R\n18 TS Uoflh o - T Y-V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) 23 LVES Tollk 40T T (715 Koy 2 Tof - aM 1Y)\np2.) TES TR d T IS |\n& 2\n"
  },
  {
    "seconds": 911,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\ni 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.id\nL | MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 LTES G 4T LY [ TR A R C T I FR )\n18 music_tracker.add {'lie - nf')\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\no) px] music_tracker = —\n24 TES TR T CIRET s [ )]\n& 25\n"
  },
  {
    "seconds": 912,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LITES Kol T T T [ T Y R T, T A R T (Y =T (TS E S\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.id\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add {'lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) 23 LUVES Tolil 40T Tl sicracker.new\n24 ls.,.vl _tracker.add('he!'|)\n& 25\n"
  },
  {
    "seconds": 913,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) px} LLUVES Tolik 40Tl T L (71 Vor #2= 1ol (Y oM [=1%)\n24 usic_tracker. .-ffq‘:t: 'hello \"[‘,\\\n& 25\n"
  },
  {
    "seconds": 914,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LITES Kol T T T [ T Y R T, T A R T (Y =T (TS E S\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.id\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 PSR TG IR R AR AR R il (TES Dol o -Tol Q-1 0T (VRO £ O T - Tl - VA 6]\no) px] music_tracker = MusicTracker.new\n24 usic_tracker.add('[']) 1\n& 25\n"
  },
  {
    "seconds": 915,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n® px} LUVES ol 40 Tol Tl MusicTrackr.new\n24 u.,.vg :_tracker.add('Hello ')\n& 25\n"
  },
  {
    "seconds": 916,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n® px} LUVES ol 40 Tol Tl MusicTracker.nw\n24 TESTolil o - 1o TR (R ARG REET )\n& 25\nr @o LR T 2\n"
  },
  {
    "seconds": 917,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n® px} LLUVES Tolik 40Tl T L (71 ¥y §2= 1ol () g 110 i\n24 l!.,.@ >_tracker.add('Hello - adele ‘,\n& 25\n"
  },
  {
    "seconds": 918,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U @ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n® px} LLUVES Tolik 40Tl T L (71 ¥y #2= 1ol () g 110\np2.) TES Tl o -Tol CTaRFT [ (R YN GREE T [ - )\n& 25\n"
  },
  {
    "seconds": 919,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U ¥ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) px} LUVES ol 40 Tol Tl sicTracker.new\n24 u.,.L :_tracker.add{'Hello - adele’|')\n& 25\n"
  },
  {
    "seconds": 920,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U ¥ -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) px} LUVES ol 40 Tol Tl sicTracker.new\n24 u.,.L :_tracker.add{'Hello - adele’|')\n& 25\n"
  },
  {
    "seconds": 921,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U X -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n) px} LUVES ol 40 Tol Tl sicTracker.new N\n24 u.,.vg :_tracker.add{'Hello - adele\"’|)\n& 25\n"
  },
  {
    "seconds": 922,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specrb U X -\nspec > @ 06_music_design_challenge_spec.rd\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 PSR TG IR R AR PR G R gl (TES Tl o -To Q-1 0T (VRO £ O T - Tl - VA 6]\no) px) LTS TR d- T I L TS Tod £ 2\" 1ot (- g8 100\n24 u..h -_tracker.add{'Hello - adele’')  _\n& 25 X\n"
  },
  {
    "seconds": 923,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nZ& 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U X -\nspec > @ 06_music_design_challenge_spec.r>\ni1 MUSLC_Tracker = Musicirdcker . .iiew\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 LAUES Uolh o - T T -V L IR B R )\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 PSRRI TG MR AR A NE R gl (TES Dol 4 -Tol Q-1 0T (VRO £ O T - Tl - VARG 6]\no) px) music_tracker = MusicTracker.new\n24 u.,.L -_tracker.add('Hello - adele*') T\n& 25\n"
  },
  {
    "seconds": 924,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ Ot msicdesgumd u X @ 06_music_design_challengerb U | Bon +~ B & %\n¥ 0B.music_design.md > (5] # ASding tracks 10 tracker .\nJo) P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npi) # Adding tracks to tracker\n® 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 2\np 28\ni} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') =\n7\n33 #3) # List method will return all tracks added\nEL music_tracker = MusicTracker.new\n35 [LTES Tl e T L R Y A G E-T T T\n36 music_tracker.add('lie - nf')\n37 L TVES Tolll o T TP BT S R (Y R T Y LB § TN |\n38\n39 #4) # add method will fail if music track already exists in array\n49 music_tracker = MusicTracker.new\n41 music_tracker.add(‘Hello ~ adele')\n42 music_tracker.add('Hello - adele') => 'Track already existst'\na3\n44\n@ 06_music_design_challinge_specsb U X -\n“i:wmm:mslc_tracxer.aauk' J1+T0 raise_errgr \"yYou canngt 1nput an empiy STLring as a track\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 ITES (ol d - Tl T L 1S oy - U (T g (0\n17 TS ol o - Tol T -1 T Y R T T R\n18 music_tracker.add ('lie - nf')\n18 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end '\n21\ni xit 'add method will fail if music track already exists in array' do\nbk} music_tracker = MusicTracker.new\n24\n® 25 i\n& 25 |\n"
  },
  {
    "seconds": 925,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ ¥ 06_music_designmd U X @ 08_music_design_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () # Adding tracks 1o trackes .\nJo) s © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npxc] # Adding tracks to tracker\niy 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\no 26 music.list => ['Hello - adele'l\n& b\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(*!) =\n32\n33 #3) # List method will return all tracks added\n33 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n£ music_tracker.add('lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add(‘Hello ~ adele')\n42 LITES Tl T (TP T [ T Y MY, TR A A - Te (Y N =E T (TS I S\n43\n44\n@ 06_music_design_challinge_specsb U ¥ -\n“i:wmm:mslc_tracxer.aauk\"u.to ralse_errgr “You cannot 1nput an empty sString as a track\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 LTS ol o =Tl Y- [ T T R T T oL\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\np1o] end '\n21\n22 xit 'add method will fail if music track already exists in array' do\npX) music_tracker = MusicTracker.new\n24\n® 25 i\n@& 2\n"
  },
  {
    "seconds": 926,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () # Adding tracks 1o trackes .\no i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n® 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o T T | (TES o f =T T TN\n35 music_tracker.add('Hello - adele')\nk) music_tracker.add('lie - nf')\n37 [ TVES Tolll o T T BT E S 5 Y & DT, ) LS & - |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add(‘Hello ~ adele')\n42 LIS Tl T DT [T T BT T A B =T e T S E 1\n43\na4\n@ 06_music_design_challange_specsd U X -\n“i‘-wn’e_x.“)m?wsm_(racner.aauy'”.to ralse_errgr “You cannot 1nput an empiy String as a track’\n13 | end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\nL] expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n23 LITEBTOR Y y-Tol CIOE 713 Tof - 1ol I LT\n@ 2 music_tracker.add( 'Hello - adele*')\n25 |\n& 2\n"
  },
  {
    "seconds": 927,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nZ& 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LITES Kol T T T [ T Y R T, T A R T (Y =T (TS E S\n43\na4\n@ 06_music_design_challange_specsb U X -\n“i:%mslc_(racner.aaux\"”.to ralse_errgr “You canngt 1nput an empiy String as a track’\n13 | end\n14\n15 xit 'list method will return all tracks added' do\n16 LTS ol o =T S G (T3 ot =Tl (- TaM (O\n17 music_tracker.add('Hello -~ adele')\n18 music_tracker.add {'lie - nf')\nL] expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\n23 LIS Tl T T T3 Lo Tl T Y]\n) 24 LTS Tl 4 - To CLRET [ R T S T O A |\n> | N —\n& 26 |\n"
  },
  {
    "seconds": 928,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i}\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add(*') = {¥ou'cannot input an empty String as a track'\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U © -\n“i:%mslc_(racner.aaux\"”.Io ralse_errgr “You canngt 1nput an empiy SLring as a track’\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LIES ol o =T S G (703 oy f =Tl (- TaM O\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add {'lie - nf')\nL] expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add method will fail if music track already exists in array' do\nPE] LITEBTR y-Tol CIOE, 713 Tof = Tol T ]\no) 24 LTS Tl 4 - To CLRET R T S T L L |\n25\n& 26 |\n"
  },
  {
    "seconds": 929,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U -] BDos +~B & x\n¥ 0B.music_design.md > (5] # ASding tracks 10 tracker .\ne 7/ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nY PZINE S OB [VES ol =T O | (TS Hel Tl (T T\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 2\n® B\ni} # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add(') = L\n32\n33 #3) # List method will return all tracks added\nkL3 LUTES TR o T TR (TS Vol f =T (T T\n35 music_tracker.add('Hello - adele')\n£ music_tracker.add('lie - nf’')\n37 L TVES Tolll o T TP BT S R (Y R T Y LB § TN |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add(‘Hello ~ adele')\n42 music_tracker.add('Hello - adele') => 'Track already existst'\na3\n44\n@ 06_music_design_challange_specsd U @ -\nspec > @ 0BLMusic_deaign_chalienpe_spec.d\n13 E=11Y]\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 LTS o o - Tl Y- T T R T T T R\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\np1] end\n21\n22 PSAET I UL R RA N CEREE R (TE3 Pl - Te QETNCET VDS KL OO T - Tl - VA ]\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello -~ adele'')\n® 25 music_tracker.add('Hello - adele'')\n26\n& 27 |\n"
  },
  {
    "seconds": 930,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 06_music_design_challenges U -] BDos +~B & x\n¥ 06_music_designmd > () # Adding tracks 1o trackes .\ne i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [|\n23 | # Adding tracks to tracker\n& 24 #1) music_tracker = MusicTracker.new\nN 25 |  music_tracker.add('Hello - adele')\no 26 music.list => ['Hello - adele'l\n& 27\nV-d pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o T TR (TS ol f =Tl T TN\n35 music_tracker.add('Hello - adele')\nk) music_tracker.add('lie - nf')\n37 L TVES Toll o T TP BT S B Y R T ) LS & TN |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LS ol d =T U (TEE X f =Y U )\n41 ‘ music_tracker.add(‘Hello ~ adele')\nLY LITES Tl T (TP T [ T Y MY, TR A A - Te (Y N =E T (TS I S\n43\n44\n@ 06_music_design_challange_specsb U ® -\nspec ) @ 0Bmusic_design_chalienge_spec.rb\n15> <y\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\np1] end\n21\n22 PSAET I UL R RANE CEREE R (113 Pl - Te QT NCET VDS KOO T - Tl - VAN ]\n) music_tracker = MusicTracker.new\nb2 music_tracker.add('Hello - adele'')\n® 25 music_tracker.add( 'Hgllo - adele'')\n26\n& 27 [\n"
  },
  {
    "seconds": 931,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () # Adding tracks 1o trackes .\ne i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n® 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i} ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o T T | (TES o f =T T TN\n35 music_tracker.add('Hello - adele')\n£ music_tracker.add('lie - nf')\n37 LTS Mol o -1 Lo B3 o A Y 8 RT3 LR & TP L |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LS ol d =T U (TEE X f =Y U )\n41 music_tracker.add(‘Hello ~ adele')\n4 | LIS Tl T DT [T T BT T A B =T e T S E 1\n43\na4\n@ 06_music_design_challange_specrb U ® -\nspec > @ 06_music_desion_chalienge_spec.rd\n405 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 LTS T - ToL Y G TS Qe - Tl (T g 1\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\np1] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\ni) music_tracker = MusicTracker.new\n24 music_tracker.add(/'Hello - adele'')\n@ music_tiacker.add( 'Hello - adele’ )]\n26\n& g7\n"
  },
  {
    "seconds": 932,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\ne ‘e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nZ& 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i} ‘\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_desion_challenge_spec.rd\n405 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 PSARET LI GG RANE CEREE R (TE3 T T QTR T VO S B O T I T - ARG ]\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele'')\n@ music_trpcker.add( fHello - adele’ )]\ni\n& 27 |\n"
  },
  {
    "seconds": 933,
    "text": "r. [ N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i} ‘\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add('') =\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello — adele')\n4 | LU Tl T TP [ T BT T A B =T e T S B Y\nX}\na4\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n495 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\nb2 nus:l.q_tracker.ad‘liel'l.o - adele'')\n@ = music_tracker.add('Hello - adele\" ]\n26\n& 27\n"
  },
  {
    "seconds": 934,
    "text": "r. [ N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i} ‘\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n495 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add{'Hello - adele'')\n® music_tracker.add('Hello - adele')\n26\n& 27\n"
  },
  {
    "seconds": 935,
    "text": "r. [ N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i} ‘\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LITES Kol T T T [ T Y R T, T A R T (Y =T (TS E S\n43\na4\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n495 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele'')\n) 25 music_tracker.add('Hello - adele')\n26\n& 27\n"
  },
  {
    "seconds": 936,
    "text": "r. [ N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d i} ‘\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n495 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add{'Hello - adele'')\n® 25 music_tracker.add('Hello - adele®)\n26\n@ 27\n"
  },
  {
    "seconds": 937,
    "text": "r. [ N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nIQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n¥ 06_music_designmd > () ¥ Adding tracks 1o trackes .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 |  music_tracker.add('Hello - adele')\ni 26 music.list => ['Hello - adele'l\n& 27\nV-d i} ‘\np1] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 (' music_tracker.add('') = [¥ou/cannot input an empty string as @ track®\n32 e\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello — adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tollh -1 L B3 e A Y A RT3 LR & TSPV i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LU Tl T TP [ T BT T A B =T e T S B Y\n43\na4\n@ 06_music_design_challange_specsb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n495 <lu\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add{'Hello - ade‘l.e'as\n) 25 music_tracker.add('Hello - adele’)\n26\n@ 27\n"
  },
  {
    "seconds": 938,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n[Q ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B BDm +~ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker :\nJe) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n\np] ‘ # Adding tracks to tracker\nY 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n\n26 music.list => ['Hello - adele'l\nY\nd pa:] ‘\n\npi} # Adding empty string will fail\n\n30 #2) music_tracker = MusicTracker.new\n\n31 ' music_tracker.add(\"') = L\n\nk74\n\n33 #3) # List method will return all tracks added\n\n34 LUTES TR o T T | (TES o f =T T Y TV\n\n35 music_tracker.add('Hello - adele')\n\n36 music_tracker.add('lie - nf')\n\n37 LIS Tl T T B T S B Y R CRER-Te 12 U B TR A |\n\n38\n\n39 #4) # add method will fail if music track already exists in array\n\n40 LTS TR d T TR | (TES e f =T (T T\n\n41 ‘ music_tracker.add('Hello — adele')\n\n4?2 LIS Tl T DT [T T BT TR A B =T RV T RS T Y\n\n43\n\na4\n\n@ 06_music_oesign_challenge_specib U @ wa -\nspec > @ 06_music_design_challena_spec.l\n\n40 =V}\n\n14 |\n\n15 xit 'list method will return all tracks added' do\n\n16 music_tracker = MusicTracker.new\n\n17 LTS Ol - T TG [ TR T R DT T A\n\n18 music_tracker.add ('lie - nf')\n\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n\n20 end\n\n21\n\nprd xit ‘add method will fail if music track already exists in array' do\n\npx] music_tracker = MusicTracker.new\n\n2 nusic_tracker.add(‘tello - adelelfy\n® 25 music_tracker.add('Hello - adele')\n\n26\n&\n"
  },
  {
    "seconds": 939,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker :\nJe) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nP ‘ # Adding tracks to tracker\n& 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\no 26 music.list => ['Hello - adele'l\n& 27\nd pi:] ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR - T T | (TES ol f =T (T TN\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\nk¥ LIS Tl - To TP BT S B Y R G112 U T i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTS TR d T TR | (TES e f =T (T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LIS Tl T TET [T T BT TR A B =T VT RS T\n43\na4\n@ 06_music._oesign_challenge._specb U X Lo~\nspec > @ 06_music_design_challenge_spec.lv\n40 =V}\n14 |\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 [ TS Tl - To -V [ T TY R VIRV Y T3\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello ~ adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx) LIS Ul - T (S L TE5 et Tl (VoM\n2 music_tracker.add('Hello - adele*)\n®@ > music_tracker.add('Hello ~ adele’)|\n26\n&\n"
  },
  {
    "seconds": 940,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_dasign_challenge.rh U - B BDos +~B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker :\nJe) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nP ‘ # Adding tracks to tracker\ni 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\no 26 music.list => ['Hello - adele'l\nB 27\nd pi:] ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR - T T | (TES ol f =T (T TN\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\nk¥ LIS Tl - To TP BT S B Y R G112 U T i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 |  music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LIS Tl T TET [T T BT TR A B =T VT RS T\n43\na4\n@ 06_music_gesign_challenge_specsb U @ -\nspec > @ 06_music_design_challenge_spec.lv\n40 =V}\n1\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 LTS Ol - T T [ TR T R DT T A\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to ['Hello ~ adele', 'lie - nf']\n20 end\n21 ~=music\n22 xit ‘[~music_design_challenge ick already exists in array' do\npx) =music_tracker\n24 Omodule Module definition\n® i m=MusicTracker\n26\n&\n"
  },
  {
    "seconds": 941,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng * Oormsicdesonmdy X @ 06_music_design_challenge.rh U -] B ++ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker :\nJe) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\nP ‘ # Adding tracks to tracker\n& 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nd pi:]\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(\"') = L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR - T T | (TES ol f =T (T TN\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\nk¥ LIS Tl - To TP BT S B Y R G112 U T i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 |  music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LIS Tl T TET [T T BT TR A B =T VT RS T\n43\na4\n@ 06_music_gesign_challenge_specsb U @ -\nspec > @ 06_music_design_challenge_spec.iv\n40 =V}\n11\n15 xit 'list method will return all tracks added' do\n16 LIUES Tolh o - T T ol (715 Ty = Tod (-1 aM [0\n17 music_tracker.add('Hello ~ adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n25 mus i\n® 26\n&z\n"
  },
  {
    "seconds": 942,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\ng * Oormsiedesonmdy X @ 06_music_design_challenge.rh U -] B ++ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n% 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nd pi:] ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 music_tracker.add(\"') = [¥ou cannot input an empty string as a track' L\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o T T | (TES ol f =T T Y T\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\nk¥ LITES Tl - To T BT S B Y R -T2 U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 |  music_tracker = MusicTracker.new\n41 ‘ music_tracker.add(‘Hello ~ adele')\n42 LIS Tl T DT [T T BT TR A B =T VT RS T Y\nL\naa\n@ 06_music_gesign_challenge_specsb U @ -\nspec > @ 06_music_design_challenge_spec.lv\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 L ITES TR d y-To CT o 715 Toy B 2™ [of (T aM 21V\n17 music_tracker.add('Hello ~ adele')\n18 music_tracker.add ('lie - nf')\n19 | expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\npas\n22 | xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\no) 25 music,\n26\n@& 2\n"
  },
  {
    "seconds": 943,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(Q ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U -\nspec > @ 06 music_design_challenga_spec.iv\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LTS TR 4 - To UL TR T R VT [ A\n18 music_tracker.add ('lie - nf')\n19 | Lo TTen 0 TVES Kol o - Tol (Y P B S IS oI -T I A T - T 1) PR B TN ) 2 |\n20 end\npa s\n22 PERIE-T [ T2 T VAR R CT RS Rl [TES Ul T G U ET VS B S T Tl - VARG 1)\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n) 25 music_tracker.add('Hello - adele')\n26\n@& 27\n"
  },
  {
    "seconds": 944,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nSpec > @ 06_music_design_challenge_spec.rv\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR dy-To TR, TS Tof B 2™ [of (T aM [0\n17 LTS TR 4 - To TN TR T R VT [ RS\n18 music_tracker.add ('lie - nf')\n19 | expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\nb2} music_tracker.add('Hello - adele*)\n® 25 music_tracker.add('Hello - adele®)\n26\n& 27\n"
  },
  {
    "seconds": 945,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 music_tracker.add('Hello - adele’)\n26\n& 27\n"
  },
  {
    "seconds": 946,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 musilt_tracker.add('Hello - adele’)\n26\n& 27\n"
  },
  {
    "seconds": 947,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 Jinusic_tracker.add('Hello - adele®)\n26\n& 27\n"
  },
  {
    "seconds": 948,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 efusic_tracker.add('Hello - adele')\n26\n& 27\n"
  },
  {
    "seconds": 949,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\nb2 music_tracker.add('Hello - adele*)\n@ 2 expectusic_tracker.add(\"Hello — adele’)\n26\n& 27\n"
  },
  {
    "seconds": 950,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n@ 2 expect (music_tracker.add('Hello - adele’)\n26 | H\n& 27\n"
  },
  {
    "seconds": 951,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 expect (music_tracker.add('Hello - adele'|)}[\n26 |\n& 27\n"
  },
  {
    "seconds": 952,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 ‘expecti{music_tracker.add('Hello - adele')])\n26\n& 27\n"
  },
  {
    "seconds": 953,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® ‘expecti{music_tracker.add('Hello - adele')).to\n26 | —j\n& 27\n"
  },
  {
    "seconds": 954,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 expect{music_tracker.add('Hello - adele')).to eq\n26 |\n& 27\n"
  },
  {
    "seconds": 955,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® p13 expect{music_tracker.add('Hello - adele')).to eq\n26\n& 27\n"
  },
  {
    "seconds": 956,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 13 expect(music_tracker.add('Hello - adele')).to eq 'Tr|'\n26\n& 27\n"
  },
  {
    "seconds": 957,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\nQ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U - B B+ 8 & x\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® pi expect{music_tracker.add('Hello - adele')).to eq 'Track al’\n26\n& 27\n"
  },
  {
    "seconds": 958,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 expect(music_tracker.add('Hello - adele')).to eq 'Track alread'\n26\n& 27\n"
  },
  {
    "seconds": 959,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n) 25 expect{music_tracker.add('Hello - adele')).to eq 'Track already ex'\n26\n& 27\n"
  },
  {
    "seconds": 960,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - Tl T o 715 ol B 2=To (T s [\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!|\n26\n& 7\n"
  },
  {
    "seconds": 961,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U X -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!’|\n26\n& 7\n"
  },
  {
    "seconds": 962,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge.spec.rb U X -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n@ > expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!’|\n26\n& 7\n"
  },
  {
    "seconds": 963,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge.spec.b U X -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n®@ > expect(music_tracker.add('Hello - adele')J.to eq 'Track already exists!’|\n26\n& 7\n"
  },
  {
    "seconds": 964,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n) ¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 1 # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge.spec.b U X -\nspec > @ 06_music_design_challenge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n® 25 expect(music_tracker.add('Hello - adele')).to eq 'Track already SSELL\n26\n& 7\n"
  },
  {
    "seconds": 965,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\nR 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n@ expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!’\n26\n& 7\n"
  },
  {
    "seconds": 966,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\na ¥ 06_music_designmd U X @ 06_music_design_challengesh U - B R+~ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n3& 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LITES Tl o T T BT S B Y R G- 1) U TR Vil |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES Bt d o To T TS K =Tl T T\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.rb U @ -\nspec > @ 06_music_design_chalienge_spec.rd\n40 <Hu\n14 |\n15 xit 'list method will return all tracks added' do\n16 LUTES TR oy To T, TS oy B 2™ [of (T oM [E1]\n17 LUES TR QT YT [ TR T R C T L A\n18 music_tracker.add ('lie - nf')\nI expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx} music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele*)\n@ expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n26\n& 7\n"
  },
  {
    "seconds": 967,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n(g * Oormsiedesonmdu x @ 06_music_design_challenge.rh U -] B ++ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ic © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\npx) ‘ # Adding tracks to tracker\n15 24 #1) music_tracker = MusicTracker.new\nN 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nY\nV-d 28 ‘\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') = [¥ou cannot input an empty string as a track'\n32 3\n33 #3) # List method will return all tracks added\n34 LUTES TR - T IR | (TES ol f =T T T\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LTS Tl - To T T S B YR T 1) RS § T i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 |  music_tracker = MusicTracker.new\n41 ‘ music_tracker.add('Hello — adele')\n42 LU T T T [ T BT Y A B =T VT RS T Y\nX\naa\n@ 06_music_gesign_challenge_spec.sb U @ -\nspec > @ 0B_music_design_challenge_spec.rd\n40 <y\nLR\n15 xit 'list method will return all tracks added' do\n16 LR Tl of - T T o (715 ol f2=To (T g IV\n17 music_tracker.add('Hello ~ adele')\n18 music_tracker.add ('lie — nf')\n19 | expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit ‘add method will fail if music track already exists in array' do\n23 music_tracker = MusicTracker.néw\nb2 music_tracker.add('Hello - adele*)\n) A ﬁ— adele')).to eq 'Track already exists!'\n26\n& 7\n"
  },
  {
    "seconds": 968,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n(D & Ot smsicdesgnmd u X @ 06_music_design_challenge.rh U -] BDm +~ B & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) ‘e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n“ LI DI TTES Dol f o= Te T | (TES U o= Te o =)\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele']\nY\n2 i}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list = ['Hello - adele', 'lie - nf']\nki\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES KR T (LT [ T T A T, T A B =T L T (T B S\nLx]\naa\n@ 06_music_design_challenge_spec.rb U X @\nspec > @ 06_music_design_challenpe_spec.ity\n405 €y\n14\n15 xit 'list method will return all tracks added' do\n16 LTS Tl of - Tl T o (715 ol B 2=To (T g [CI]\n17 music_tracker.add('Hello ~ adele')\n18 music_tracker.add ('lie - nf')\n19 | expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 xit ‘add method will fail if music track already exists in array' do\npx) music_tracker = MusicTracker.new\npZ} [T T Ve LY T Y R I T Y FR jI\no) 25 expect{music_tracker.add{'Hello - adele')).to eq 'Track already exists!®\n26\n& 27\n"
  },
  {
    "seconds": 969,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n(¢ Otsmusicdesgumdu x @ 06_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\nJel i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n3& 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n. 26 music.list => ['Hello - adele'l\n& 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') => [You cannot input an empty String as a track'\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\n43\naa\n@ 06_music_design_challenge_spec.rb U X na--\nspec > @ 06_music_design_chalienge_spec. i\ni8 music_tracker.add ('lie - nf')\n19 ‘ expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0 '\n21\n22 xit 'add method will fail if music track already exists in array' do\npi] LTES TSR a1 TR T3 Ty f 2™ T (T g 51\n24 music_tracker.add{ 'Hello - adele’)\n25 expect{music_tracker.add{'Hello - adele')).to eq 'Track already exists!'\n26\n27\n28\npi:] ZE\n® 380 end\n@\n"
  },
  {
    "seconds": 970,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n@ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\nJel i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n. 26 music.list => ['Hello - adele'l\n& 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') => [You cannot input an empty String as a track'\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\n43\naa\n@ 06_music_design_challenge_spec.rb U '@ na--\nspec > @ 06_music_design_challenge_spec.\n18 LTS Tl 4 Yol T T G TR 1) i\nL] ‘ expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0\n21\n22 xit 'add method will fail if music track already exists in array' do\npx] LUTES TSR 4y To G TS Ty i ™ 1o {-T oM (51\n24 LB TR - T CUE T TR TR R T L A\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n26 end\n27\nb1}\n29 end\n®\n@\n"
  },
  {
    "seconds": 971,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\nJel i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n. 26 music.list => ['Hello - adele'l\n& 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') => [You cannot input an empty String as a track'\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\n43\naa\n@ 06_music_design_challenge_spec.rb U ® @\nspec > @ 06_music_design_challenge_spec.>\n18 [TES T 4 =T (T OV [ R B TR )\n19 ‘ expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0\n21\n22 xit 'add method will fail if music track already exists in array' do\nX} LTES TSR 4 a-To G T3 oy 0™ 1ol (-1 (5]\n24 LB TR - T U TR TR R T Y A\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n26 end\n27\n28 end\n®\n@\n"
  },
  {
    "seconds": 972,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ ¥ 06_music_designmd U X @ 06_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\nJel i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n. 26 music.list => ['Hello - adele'l\n& 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') => [You cannot input an empty String as a track'\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\n43\naa\n@ 06_music_design_challenge_spec.rb U ® @\nspec > @ 06_music_design_challenge_spec.>\n18 | music_tracker.add ('lie - nf')\n19 ‘ expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0\n21\n22 xit 'add method will fail if music track already exists in array' do\nX} LTES TSR 4 a-To G T3 oy 0™ 1ol (-1 (5]\n24 LB TR - T U TR TR R T Y A\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n26\n27 end\n®\n@\n"
  },
  {
    "seconds": 973,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n@ ¥ 06_music_designmd U X @ 08_music_dasign_challengesh U -] B+~ B & X\n¥ 08_music_design.md > (5) ¥ Adding tracks to tracker .\nJel P © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nH 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n. 26 music.list => ['Hello - adele'l\n& 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') => [You cannot input an empty String as a track'\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 LTVES Dol - T T B S SE S I Y R T ) U & TR |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\n43\naa\n@ 06_music_design_challenge_spec.rb U X @\nhat s | expectl';u:sxc_tracxer.aoo\\\"n.to raise_error ‘You cannot 1nput an empty STring as a track*\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 ‘ music_tracker = MusicTracker.new\n17 ‘ LTS TR - T CT RN TR Y A R T T A\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 xit 'add -ethodlzwiu fail if music track already exists in array' do\n23 LIVES ol o - Tol (T L (V03 op f =Tl (TR [0\no) 24 music_tracker.add('Hello - adele')\n& 25 | expect(music_tracker.add{'Hello - adele')).to eq 'Track already exists!'\n13 end|\n"
  },
  {
    "seconds": 974,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n(¥ Otsmusicdesgumd U x @ 06_music_design_challenge.rh U - B B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 LI DI TTES Dol 4 o= To T | (TES U o o= Te o 2]\ni 25 music_tracker.add('Hello - adele')\n. 26 music.list => ['Hello - adele'l\n& 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32 r\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LIS TR o T T T LT IR R T U\n36 music_tracker.add('lie - nf')\nkY [ TES TR - To T B R S R T R T 1) U 6 T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\nLx]\naa\n@ 06_music_design_challenge_spec.rb U X Qo\nspec > @ 06_music_desion_challengs_spec.iy\n10 | xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf') L\n19 expect(musi]&_tracker.listl.to R 8 CIERET ) U & - |\np1] end\n21\n@ 22 PO R T VI T T IR R - DA & ) (V15 Uit of - T Q- 1 E 1L IVAVS B 0 L - Tl -\\ 1)\n& 28 | music_tracker = MusicTracker.new\nLt ! ~ AL\\ Ln26,ColB Spacex4 UTF-8 LF Rul F Q\n"
  },
  {
    "seconds": 975,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n@ Oamsicdesgnmd U X @ 06_music_design_challenge.rh U - B B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE LI DI TTES Dol 4 o= To T | (TES U o o= Te o 2]\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*) =\n32 I\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LIS TR o T T T LT IR R T U\n36 music_tracker.add('lie - nf')\nkY [ TES TR - To T B R S R T R T 1) U 6 T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\nLx]\naa\n@ 06_music_design_challenge_spec.rb U X Qo\nspec ) @ 06 music_design_challenge_spec.rd\n1 require '@6_music_design_challenge’\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add{'Hello - adele’)\ni expect (music_tracker.list).to'eq ['Hello - adele']\n8 end\n9 —\n10 xit 'adding an Jmpty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n{3} \" b it '1i methad i o rn_3 ack added® dn\n"
  },
  {
    "seconds": 976,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 R\n@ Oamsicdesgnmd U X @ 06_music_design_challenge.rh U - B B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nE LI DI TTES Dol 4 o= To T | (TES U o o= Te o 2]\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32 I\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LIS TR o T T T LT IR R T U\n36 music_tracker.add('lie - nf')\nkY [ TES TR - To T B R S R T R T 1) U 6 T ) i |\nk1]\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\nLX)\naa\n@ 06_music_design_challenge_spec.rb U X Qo\nspec ) @ 06 music_design_challenge_spec.rd\n1 require '@6_music_design_challenge’\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n[ music_tracker.add{'Hello - adele’)\ni expect (music_tracker.list).to'eq ['Hello - adele']\n8 end\n9 X L\n190 PERREL LB EEL R T S o [T T RN -5 R 1)\n11 LATES Uil =T T TS f ™ T (- g 2N\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n{3} \" \" i ‘14 methad i re rn_23 Ack added® dn\n"
  },
  {
    "seconds": 977,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn R\n@ ¥ Omusic desgnmd U % @ 06_music_design_challenge.rh U - B B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n38 LI DI TTES Dol 4 o= To T | (TES U o o= Te o 2]\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32 I\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LIS TR o T T T LT IR R T U\n36 music_tracker.add('lie - nf')\nkY [ TES TR - To T B R S R T R T 1) U 6 T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\nLx]\naa\n@ 06_music_design_challenge_spec.rb U X @\nspec ) @ 06 music_design_challenpe_spec.rd\no elu\n9\n10 xit 'adding an empty string will fail' do\n11 LTES (ol 4 =T I TS Tt f 0 T (-] g TN\n12 expect(music_tracker.add('*')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_t racke:31= MusicTracker.new\n17 music_tracker-add('Hello - adele*) r\n18 music_tracker.add ('lie — nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) pi’] end\n21\n& 22 xit ‘add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 978,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 B\n@ ¥ Otmusic desgnmd u x @ 06_music_design_challenge.rb U | R+~ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\n0 i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n15 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 LIRS TR ST A TG I T T 48 |\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 * music_tracker.add(\"') => [You'cannot input an empty string as a Erack'\n32 I\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\nLx]\naa\n@ 06_music_design_challenge_spec.rb U X @\n590> @ 06_music_design_chatiene,_spec.d\n21\n22 PERARET I GT G IR RANE RS &l (V15 Tolh o - Tl - 1 -T-1 IS RS 0 L - Tl - WA )\nP music_tracker = MusicTracker.new\n24 LTS Tl 4 - T YT L TR T R T ) RS\npa} expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®'\n26\n27 end\n31 |\n®\n@\n"
  },
  {
    "seconds": 979,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n@ ¥ Otmusic desgnmd u x @ 06_music_design_challenges U - B R+~ B & x\n¥ 06_music_design.md > (5] ¥ Adding tracks to tracker .\nJo) i © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\n35 24 #1) music_tracker = MusicTracker.new\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') => [You cannot input an empty String as a track'\n32 r\n33 #3) # List method will return all tracks added\n34 | music_tracker = MusicTracker.new\n35 music_tracker.add('Hello - adele')\n36 music_tracker.add('lie - nf')\n37 music_tracker.list => ['Hello - adele', 'lie - nf']\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 LITES R T (LT [ [ T A T, T R S =T L T (TS B S\n43\naa\n@ 06_music_design_challenge_spec.rb U X @\nspec ) @ 06 music_design_challenge_spec i\n40 llua__-l_l._tlﬂbl\\el sdUU 4 LaE & ik g\n19 2T Ta 40 TES TR T (I RS S IS -1 B A T A RERE-T 1) PR & TN ) B |\n20 end\npal\n22 xit 'add method will fail if music track already exists in array' do\npx) music_tracker = MusicTracker.new\nb2 LTS ol =T LT TR Y R T S R\nit expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n26\n27 end\n®\n@\n"
  },
  {
    "seconds": 980,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 Rl\n@ ¥ Omusicdesgnmd U % @ 06_music_design_challenge.rh U - B B+ 8 & x\n¥ 06_music_design.md > (5] # Adding tracks to tracker .\nJo) e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nZ‘ LI DI TTES Dol 4 o= To T | (TES U o o= Te o 2]\ni 25 music_tracker.add('Hello - adele')\n26 music.list => ['Hello - adele'l\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32 r\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LIS TR o T T T LT IR R T U\n36 music_tracker.add('lie - nf')\nkY [ TES TR - To T B R S R T R T 1) U 6 T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 music_tracker = MusicTracker.new\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\n43\naa\n@ 06_music_design_challenge_spec.rb U X @\nspec > @ 06_music_design_challenge_spec. b -\n[ LTS TR 40T L s T AR DT T R )\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n19 xit 'adding an empty string will fail' do\n11 | LTS T -1l CY G TS Vg ff o= 1o (=T g 1S\n12 expect(music_tracker.add('’)).to raise_error 'You cannot input an empty string as a track'\n13 end\n14 I |\n15 xit 'list method will return all tracks added' do\n16 LUTES Tollh f o= Yo T L TS Coy f 2= Tof {1 PN 1500\n17 music_tracker.add('Hello - adele')\n® 18 music_tracker.add ('lie - nf')\n& 19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n"
  },
  {
    "seconds": 981,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges =35 Rl\n[ ¥ 08 msic_desgnmd U X | @ 06 music_ design shallengesh U - B Bos +~ B § x\n¥ 06_music_design.md >E]'MMMDW% .\nJo) e © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n23 | # Adding tracks to tracker\nZ‘ LI DI TTES Dol 4 o= To T | (TES o) o o= Te o 2]\ni 25 lusic_tracker.add('_ﬂello - adele')\n26 music.list => ['Hello - adele'l\nB 27\n2 pi:}\npi] # Adding empty string will fail\n30 #2) music_tracker = MusicTracker.new\n31 ' music_tracker.add(*') =\n32\n33 #3) # List method will return all tracks added\n34 music_tracker = MusicTracker.new\n35 LIS TR o T T T LT IR R T U\n36 music_tracker.add('lie - nf')\nkY [ TES TR - To T B R S R T R T 1) U 6 T ) i |\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES R - Tl (T [TES Kol = ol T T\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\n43\naa\n@ 06_music_design_challenge_spec.rb U X @\nspec > @ 06_music_design_challenge_spec.id\n- MIMI AL L QUG — Dol LG s\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele']\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 LUTES Ul 4 = Yo T TS ey f = Tof (- g S0\n12 expect{music_tracker.add('’)).to raise_error 'You cannot input an empty string as a track' f\n13 end\n14 -\n15 xit 'list method will return all tracks added' do\n16 LIVES Tol o - T (Ul L TS ey f = Tod (TR [\n@ 17 music_tracker.add('Hello — adele'}\n18 FITES Tl o =Tl Y-V [ IR 6 TR 1\n& 19 expect(music_tracker.list).to eq ['Hello - adele'; 'lie - nf']\n"
  },
  {
    "seconds": 982,
    "text": "[ X N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ni) ¥ 06_music designmd U @ 08_music_design_challenge.h U X um- 8 Do+~ B & x\nB> 8 06_music_desigr_dvallenge.b .\nA 1| © 0=+t oRHASTUDENT-Oswin-Pinto-CL7GHAZA06L4 SKILI Challenges % ]\n)\n&\n8\n?\n@ 06_music_design_challenge_spec.rb U X\nB R bt = soins (unnms\n4 LUEE T - T T T L [ TR R T LY\n7 | expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n° X\n10 xit 'adding an empty string will fail' do\n11 LATES Uollh o =T T L (705 Ty f = Td (T[S\n12 | expect{music_tracker.add('\")).to raise_error 'You cannot input an empty string as a track'\n13 end\n14 -\n15 xit 'list method will return all tracks added' do\n16 LTES TR d -1 G (TS ey f - 1o (TR [0\n@ 17 music_tracker.add('Hello - adele’)\n18 music_tracker.add ('lie - nf')\n& 19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n"
  },
  {
    "seconds": 983,
    "text": "(XX} 06_music_design_challenge.rb — Skill_Challenges ng=gn Ji\n[ ¥ Ok desgnmd U | 4 08 musicdesn. shalargest U X wo - @ Don +- B & x\nB > & 06 music_design_challenge.rb .\nA | © \"o STIONT-Oswin-Pinto-CLIGUZAT6LS SkiLL Craltenges & [\n)\n&\n8 |\n?\n\\\n@ 06_music_design_challenge_specb U X\nspec > @ 06_music_design_challenge_spec.rd\n13 | end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21 I\n22 xit 'add method will fail if music track already exists in array' do\npic music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele’)\n() 25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n& 26\nang\n"
  },
  {
    "seconds": 984,
    "text": "o000 06_music_design_challenge.rb — Skill_Challenges DEemlos\ns | # Ofmusic desgnmd U @ 08_music_desgn_challengesh U X uo - @ Deon +- 8 & x\nB > & 06 music_design_challenge. b .\nP ] °> T2 oo-ink-CLTOUEASL4 S attaes »\n%\n&\n8\n?\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06_music_design_chalienge_spec. o\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 | music_tracker.add('Hello - adele') :\n7 | expect(music_tracker.list).to eq ['Hello - adele'l\n3 end\n9\n10 xit 'adding an empty string will fail' do 1\n11 music_tracker = MusicTracker.new L\n12 | expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n® 15 xit 'list method will return all tracks added' do\n& 16 music_tracker = MusicTracker.new\n"
  },
  {
    "seconds": 985,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\ns | ¥ Ofmusic desgnmdU @ 08_music_design_challengesb U X uo - @ Do+~ B & x\nR > 8 06_music_design_challangerb .\nA ) o1 toGHASTUDENT-Oswin-Pinto-C17GMA2406L4 SkillChalltenges * 1\n%\n&\n53\n?\n@ 06_music_design_challenge_spec.rb U X\npec > @ 08_music_design_chatengs_spec. b\n1 require '@6_music_design_challenge*\np\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | LTS o o - T Y TS oy f - Tef (Y g 15\n[ ' music_tracker.add('Hello - adele')\n7 oA (TS LR J -1 (T B R 4 P I B (Y S G- A L\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 L ITES Ul o - T T R L TE3 e f =T (=T L\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ 'list methad i re rn_Aa A ZTa 3 1 B T\n"
  },
  {
    "seconds": 986,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\ns | ¥ Ofmusic desgnmdU @ 08_music_design_challengesb U X uo - @ Do+~ B & x\nR > 8 06_music_design_challangerb .\nA | o1 toGHASTUDENT-Dswin-Pinto-C17GM2406L4 Skill_Challenges *\n%\n&\n53\n?\n@ 06_music_design_challenge_spec.rb U X\npec > @ 08_music_design_chatengs_spec. b\n1 require '@6_music_design_challenge*\n2 [\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 | LTS o o - T Y TS oy f - Tef (Y g 15\n[ ' music_tracker.add('Hello - adele')\n7 oA (TS LR J -1 (T B R 4 P I B (Y S G- A L\n8 end\n9\n10 xit 'adding an empty string will fail' do\n11 L ITES Ul o - T T R L TE3 e f =T (=T L\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ 'list methad i re rn_Aa A ZTa 3 1 B T\n"
  },
  {
    "seconds": 987,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\ns | ¥ Ofmusic desgnmdU @ 08_music_design_challengesb U X uo - @ SRR\nB> 8 06_music_design_challangerb .\nA I ¢ PineintogUSTUDENT-0swin-Pinto-C1TGHAZAQLA SkIU1. Chatienges % rspec\n%\n&\n5\n?\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06 music_design_chalienge_spec.rd\n1 require '@6_music_design_challenge\"'\n2 [\n3 RSpec.describe MusicTracker do\n4 PERIRET [ FR TV I O 4 - 1o Lk 0]\n5 | music_tracker = MusicTracker.new\n6 ‘ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l\n3 end\n9\n10 xit ‘adding an empty string will fail' do\n11 LATES Ul o =Tl T L (TS Kt - T (=T PR [\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L i me Alals i re r'n A A :tl’.t a0\n"
  },
  {
    "seconds": 988,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\ns % Ofmisic_desgamd U | @ 08_music_design_chaliengest U X uao - @ Blon +- 8 & x\nB> 8 06 music_design_chalkinge b\n£ 1 | 07 oeHSTUDOIT-Osin-Pinto-C1IGMIATELA SKIUL Chalanges ¥ rapec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list).to eg ['Hello - adele’]\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MusicTracker\n# ./spec/@6_music_design_challenge_spec.rb:3:in ‘<top (required)>‘\nFinished in @.000803 seconds (files took 0.17507 seconds to load)\n0 examples, © failures, 1 errer occurred outside of examples\n+ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06 music_design_challenge_spec.id\n1 require '06_music_design_challenge\"\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele’)\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit ‘adding an empty string will fail' do\n11 LUTES Ul o = Yol T L TS M ™ T (=T P (5\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L i me Alals i re MANE A K :tl’_t a0\n"
  },
  {
    "seconds": 989,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\ns % Ofmisic_desgamd U | @ 08_music_design_chaliengest U X uao - @ Blon +- 8 & x\nB> 8 06 music_design_chalkinge b\n£ 1 | 07 oeHSTUDOIT-Osin-Pinto-C1IGMIATELA SKIUL Chalanges ¥ rapec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list).to eg ['Hello - adele’]\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MusicTracker\n# ./spec/@6_music_design_challenge_spec.rb:3:in ‘<top (required)>‘\nFinished in @.000803 seconds (files took 0.17507 seconds to load)\n0 examples, © failures, 1 errer occurred outside of examples\n+ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06 music_design_challenge_spec.id\n1 require '06_music_design_challenge\"\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele’)\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit ‘adding an empty string will fail' do\n11 LUTES Ul o = Yol T L TS M ™ T (=T P (5\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L i me Alals i re MANE A K :tl’_t a0\n"
  },
  {
    "seconds": 990,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ns % Ofmisic_desgamd U | @ 08_music_design_chaliengest U X uao - @ Blen +- 8 & x\nR > 8 06_music_desian_challenge. b\nA 1 I ° et oGUSTURET-=Gsuin-Pinto-CHGAZAD0L4 SKELL Cratlenges & repec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add( Hello - adele’}\nexpect (music_tracker.list}.to eq ['Hello - adele']\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track®\nNameError:\nuninitialized constant MusicTracker\n# ./spec/@6_music_design_challenge_spec.rb:3:in ‘<top (required)>'\nFinished in 9.00003 seconds (files took @.17507 seconds to load)\n0 examples, © failures, 1 error occurred outside of examples\n= 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) f [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 'u!;u 0o\n"
  },
  {
    "seconds": 991,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ns % Ofmisic_desgamd U | @ 08_music_design_chaliengest U X uao - @ Blen +- 8 & x\nR > 8 06_music_desian_challenge. b\nA 1 I ° et oGUSTURET-=Gsuin-Pinto-CHGAZAD0L4 SKELL Cratlenges & repec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list}.to eq ['Hello - adele']\n4 end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(’’}).to raise_error ‘You cannot input a\nn empty string as a track® 31\nNameError:\nuninitialized constant MusicTracker\n# ./spec/@6_music_design_challenge_spec.rb:3:in ‘<top (required)>'\nFinished in 9.00003 seconds (files took @.17507 seconds to load)\n0 examples, © failures, 1 error occurred outside of examples\n~ 0SWNPiNtOGMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) f [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 'u!;u 0o\n"
  },
  {
    "seconds": 992,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ns % Ofmisic_desgamd U | @ 08_music_design_chaliengest U X uao - @ Blen +- 8 & x\nR > 8 06_music_desian_challenge. b\nA 1 R ° et oGSTURET-=Gsuin-Pint-CITGAZAD0L4 SKEL Cratlenges & repec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list}.to eq ['Hello - adele']\n4 end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track®\nNameError:\nuninitialized constant _\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>’\nFinished in 9.00003 seconds (files took @.17507 seconds to load)\n© examples, © failures, 1 error occurred outside of examples\n~ 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) f [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 'u!;u 0o\n"
  },
  {
    "seconds": 993,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ns % Ofmisic_desgamd U | @ 08_music_design_chaliengest U X uao - @ Qs+~ 8 & x\nR > 8 06_music_desian_challenge.b\n£y | 0> \" toaSTIDENT-Oswin-PintoCLIGRZANLA SkILl Crallenges & ropec\nAn error occurred while loading ./spec/86_music_design_challenge_spec.rb.\n3‘ Failure/Error:\n[ DY S L TR O 7 T T\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list).to eq ['Hello - adele']\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add('’}).to raise_error ‘You cannot input a\nn empty string as a track®\nNameError:\nuninitialized constant MiSHETEACKErIN\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>'\nFinished in 0.00003 seconds (files took @.17507 seconds to load)\n@ examples, © failures, 1 error occurred outside of examples\n© 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) f [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 'a!;a 0o\n"
  },
  {
    "seconds": 994,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQ.;WU- @ 06_music_design_challenge.rb U & uao - @ B+~ 8 & x\nR > 8 06_music_desian_challenge b\nL ] Ot ceHASTUDBT Oswin-Pinto-CLIGUZAGLS SKLLChallenges & rspec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\n3‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nSN L TES TR T T R S N I R R It I T |\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add('*)).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MiSHGTEACKErIN\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>\"\nFinished in 0.00003 seconds (files took 9.17507 seconds to load)\n@ examples, © failures, 1 error occurred outside of examples\n© 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) f [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 'u!;u 0o\n"
  },
  {
    "seconds": 995,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQ:;'M—N @ 08 _music_desigr challengesh U & wo- @ Bos +~ B & x\nR > 8 06_music_design_challenge. b\np 1 @ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n; An error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nSN L TES TR T T R S N I R R It I T |\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add('*)).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MiSHCTEACKEE\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>\"\nFinished in 0.00003 seconds (files took 9.17507 seconds to load)\n@ examples, © failures, 1 error occurred outside of examples\n© 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) { [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 S 'al;u 0o\nS Ln%, Cob?. | F-B LF Ru\n"
  },
  {
    "seconds": 996,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQ:;'M—N @ 08 _music_desigr challengesh U & wo- @ Bos +~ B & x\nR > 8 06_music_design_challenge. b\np 1 @ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n; An error occurred while loading ./spec/06_music_design_challenge_spec.rb.\nZ‘ Failure/Error:\nRSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nSN L TES TR T T R S N I R R It I T |\ng end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add('*)).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MiSHCTEACKEE\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>\"\nFinished in 0.00003 seconds (files took 9.17507 seconds to load)\n@ examples, © failures, 1 error occurred outside of examples\n© 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) { [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 | expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L S ne alaly re rn 2 2 S 'al;u 0o\nS Ln%, Cob?. | F-B LF Ru\n"
  },
  {
    "seconds": 997,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\na.;m-uu- @ 06_music_design_challenge.rb U uo - @ B+~ B & x\nR > 8 06_music_design_challenge b\np 1 @ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nAn error occurred while loading ./spec/06_music_design_challenge_spec.rb.\n3‘ e, i Failure/Error:\nmusic RSpec.describe MusicTracker do\n& ~=music_design_challenge xit *adds song to tracker' do\n’ music_tracker = MusicTracker.new\n2 *~music_tracker music_tracker.add( Hello - adele')\nSN L TES TR T T R S N I R R It I T |\n4 end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add('*)).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MiSHCTEACKEr\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>\"\nFinished in 0.00003 seconds (files took 9.17507 seconds to load)\n@ examples, © failures, 1 error occurred outside of examples\n© 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06.music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\"'\n2\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n) f [T Lol - T U (71 Cof f o= o (T g L0\n3 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele']\n8 end\n9 -\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ . .\n"
  },
  {
    "seconds": 998,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ’W' 4 06 music_design_challenge rb U & um- a8 B+~ B & x\nB> & 06 music. gesiyn challange b\np 1 class MusicTracker @ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n2 An error occurred while loading ./spec/@6_music_design_challenge_spec.rb.\nB 3 Failure/Error:\n' RSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list).to eg ['Hello - adele’]\n2 end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MSHETEACKEtIN\n# ./spec/@6_music_design_challenge_spec.rb:3:in ‘<top (required)>‘\nFinished in @.000883 seconds (files took ©.17507 seconds to load)\n0 examples, 0 failures, 1 errer occurred outside of examples\n0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.sb U X\npec ) @ 0G_music_design_chalienge_spec.rd\n1 require '@6_music_design_challenge*\nF3\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n9 —\n19 xit 'adding an empty string will fail' do\n11 LITCR o0 4 - Tel T T U ™ Tol T T\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n(I K end\n14\n6} '1ist _methad i re rn_Aa ack added* dn\n"
  },
  {
    "seconds": 999,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ’W‘-\" # 06_rmusic_design_challengesb y ® um- 8 Do+~ B & x\nB > & 08 music. seskn chalienge b\np 1 class MusicTracker @ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n2 An error occurred while loading ./spec/@6_music_design_challenge_spec.rb.\nB 3 Failure/Error:\n. RSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list).to eg ['Hello - adele’]\n2 end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track’\nNameError:\nuninitialized constant MSHETEACKEtIN\n# ./spec/@6_music_design_challenge_spec.rb:3:in ‘<top (required)>‘\nFinished in @.000883 seconds (files took ©.17507 seconds to load)\n0 examples, 0 failures, 1 errer occurred outside of examples\n0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n@ 06_music_design_challenge_spec.sb U X\npec ) @ 0G_music_design_chalienge_spec.rd\n1 require '@6_music_design_challenge*\n3\n3 RSpec.describe MusicTracker do\n4 xit 'adds song to tracker' do\n5 music_tracker = MusicTracker.new\n6 LTS Tl =T U L TR T R VT T R\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n9 —\n19 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n(I K end\n14\n@ '1ist _methad i re rn_Aa A added* do\n"
  },
  {
    "seconds": 1000,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ¥ 08 msic desgnnd U @ 08_muske_design challengesh 0 X wo - B\\ Dos ++ B § x\nB> 8 06music_desin_chalkingesd\no) 1 class MusicTracker @ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n2 | An error occurred while loading ./spec/@6_music_design_challenge_spec.rb.\nR 3 Failure/Error:\n- RSpec.describe MusicTracker do\nP xit 'adds song to tracker' do\nmusic_tracker = MusicTracker.new\ng music_tracker.add(\"Hello - adele')\nexpect (music_tracker.list)}.to eq ['Hello - adele']\n2 end\nxit 'adding an empty string will fail' do\nmusic_tracker = MusicTracker.new\nexpect(music_tracker,add(''}).to raise_error ‘You cannot input a\nn empty string as a track®\nNameError:\nuninitialized constant MusicTracker\n# ./spec/@6_music_design_challenge_spec.rb:3:in “<top (required)>’\nFinished in 0.00003 seconds (files took @.17507 seconds to load)\n0 examples, 0 failures, 1 errer occurred outside of examples\n> 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ '\n|\n@ 06_music_design_challenge_specsd U X\n08¢ ) @ 06_music_design_chalenge_spec.b\n1 require '@6_music_design_challenge*\n2\nY T [T 1 V) e T =T i ]\n4 s AT T T TV I B - Tol T ]\n3 LTS Tl S - T I | (718 Cof f o-Tol (Y M 110\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l\n8 end\n9 —\nb xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n6} . 14 methad i re rn_Aa ack added* dn\n"
  },
  {
    "seconds": 1001,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n@Liﬁ.&_mi* # 06 music_design_challenge.rb U X uo - @ Don ++ B § x\nB> 8 06_music_desgn_challangerd .\n0 1 class MusicTracker  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [I\n2 4\nL\n&\n8\nL4\n@ 06_music_design_challenge_specsb U X -\nspec ) @ 06 music_design_chalienge_spec.iy\n1 require '@6_music_design_challenge*\n2\nI Y T Lol 1 [V K T X1 i )\n4 b R Ts [ EETVT TR o i o - Tol T (0]\n3 LTS Tl € - T LA (715 Cof ff =T (Y g 110\n6 LUEE TR - T T L TR IR T Y A\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n9 —\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L] i me Alals i re r'n A A :tl’_t a0\n"
  },
  {
    "seconds": 1002,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ¥ 08 music designmd U @ 06 music_design_challenge.th U X uao- &8 Blnby +~ B & x\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - Bl GrammarStats\nB ] Sk peturs rue or folse &1 string sarts vith coptal and ends wich\n(S Y Ja i lad:1al )]\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/®6_music_design_challenge_spec.rb:d\n2) MusicTracker adding an empty string will fail\no Seadg st # Temporarily skipped with xit\n& . vx N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker List method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3 RS »describe MuskeTratier o 4) MusicTracker add method will fail if ic track already exists il\n[T} ri r L g n ar\n4 PR F-T [ EREYVT TG i 4 o Tol T O 4] ray sieirac ° usic track a exists in 8\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello - adele') # +/spec/06_fusic_design challenge.spec. (bi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect = wto eq [ ! Finished in 0.98463 seconds (files took .18848 seconds to load)\n8 end 12 examples, © failures, 4 pending\n] f\n10 xit 'adding an empty string will fail' do [ o oswined BT-Oswin-P4 . 14 Skill_challenges »\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn . - -\n"
  },
  {
    "seconds": 1003,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X uao- &8 Bes ++ B & x\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - |23 GrammarStats\nB ] Sk et rue or folse &1 string sarts vith coptal and ends wich\n(S Y Ja i lad:1al )]\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\nEay= O T T IR R =TT o T AT R - £ B )T s R T VY\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/®6_music_design_challenge_spec.rb:d\n2) MusicTracker adding an empty string will fail\no Seadg st # Temporarily skipped with xit\n& . vx N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker List method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3 RS »describe MuskeTratier o 4) MusicTracker add method will fail if ic track already exists il\n[T} ri r L g n ar\n4 PR F-T [ EREYVT TG i 4 o Tol T O 4] ray sieirac ° usic track a exists in 8\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello - adele') # +/spec/06_fusic_design challenge.spec. (bi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect = wto eq [ ! Finished in 0.98463 seconds (files took .18848 seconds to load)\n8 end 12 examples, © failures, 4 pending\n] f\n10 xit 'adding an empty string will fail' do [ o oswined BT-Oswin-P4 . 14 Skill_challenges »\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn . - -\n"
  },
  {
    "seconds": 1004,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X uao- &8 Bes ++ B & x\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - |23 GrammarStats\nB ] Sk et rue or folse &1 string sarts vith coptal and ends wich\n(S Y Ja i lad:1al )]\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\nEay= O T T IR R =TT o T AT R - £ B )T s R T VY\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/®6_music_design_challenge_spec.rb:d\n2) MusicTracker adding an empty string will fail\no Seadg st # Temporarily skipped with xit\n& . vx N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker List method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3 RS »describe MuskeTratier o 4) MusicTracker add method will fail if ic track already exists il\n[T} ri r L g n ar\n4 PR F-T [ EREYVT TG i 4 o Tol T O 4] ray sieirac ° usic track a exists in 8\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello - adele') # +/spec/06_fusic_design challenge.spec. (bi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect = wto eq [ ! Finished in 0.98463 seconds (files took .18848 seconds to load)\n8 end 12 examples, © failures, 4 pending\n] f\n10 xit 'adding an empty string will fail' do [ o oswined BT-Oswin-P4 . 14 Skill_challenges »\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn . - -\n"
  },
  {
    "seconds": 1005,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X uao- &8 D+~ B & x\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\ni - | GrammarStats\nS ] Sk peturs rue or folse &1 string starts vith coptal and ends wich\n[y Jadidl lad 1l\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nUist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\nPRI TES Ty Ta T L LT T IR SR - T U\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\no Seadg st # Temporarily skipped with xit\n¢ . il N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 RS »describe MuskeTratier o 4) MusicTracker add method will fail if STaR {7 T4 -1 ists il\n4 xit 'adds song to tracker' do o usicTracker a music track already exists in ar\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello - adele') # +/spec/06fusic_design challenge.spec. rbi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect( = sto eq T 1 Finished in 0.00463 seconds (files took 0.18848 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n10 xit 'adding an empty string will fail' do [ o oswinpint BNT-0swin-pi : 4 Skill_challenges »\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1006,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ku # 08_music_design_challenge.rb U X w8 [DFT IR = I\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\ni - | GrammarStats\nS ] Sk peturs rue or folse &1 string starts vith coptal and ends wich\n[y Jadidl lad 1l\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nUist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\n]Lndinq: (G FATTTEH AN B3 0 T T T TG G T T T YT TR R O\nstatus)\nPRI TES Ty Ta T L LT T IR SR - T U\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\no Seadg st # Temporarily skipped with xit\n¢ . il N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 RS »describe MuskeTratier o 4) MusicTracker add method will fail if STaR {7 T4 -1 ists il\n4 xit 'adds song to tracker' do o usicTracker a music track already exists in ar\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello - adele') # +/spec/06fusic_design challenge.spec. rbi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect( = sto eq T 1 Finished in 0.00463 seconds (files took 0.18848 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n10 xit 'adding an empty string will fail' do [ o oswinpint BNT-0swin-pi : 4 Skill_challenges »\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1007,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\ni} ku # 06_music_design_challenge.rb U X w8 [EESEN= I\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\ni - | GrammarStats\nS ] Sk peturs rue or folse &1 string starts vith coptal and ends wich\n[y Jadidl lad 1l\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\nPd d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PBDINEE Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nUist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\nPRI TES Ty Ta T L LT T IR SR - T U\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\no Seadg st # Temporarily skipped with xit\n& . vx N # ./spec/96_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge* 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 mpec‘describe NusLeTeatker o 4) MusicTracker add method will fail if STaR {7 T4 -1 ists il\n4 xit 'adds song to tracker' do o usicTracker a music track already exists in ar\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello - adele') # +/spec/06fusic_design challenge.spec. rbi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect( = sto eq T 1 Finished in 0.00463 seconds (files took 0.18848 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n10 xit 'adding an empty string will fail' do [ o oswinpint BNT-0swin-pi : 4 Skill_challenges »\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1008,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X wo- & Blen +~ B & %\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\ni - | GrammarStats\no ] ek peturms e or folse &1 string sarts vith capital and ends wich\n[y Ta T lad &)\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a il N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge* I 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 mpec‘describe NusLeTeatker o 4) MusicTracker add method will fail if ic track al ists il\n4 xit 'adds song to tracker' do o usicTracker a music track already exists in ar\n5 music_tracker = MusicTracker.new # Temporarily skipped with xit\n6 nusic_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_tracker.list).to 'Hello - adele'\npect( = sto eq T 1 Finished in 0.00463 seconds (files took @.18848 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n— o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1009,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X wo- & Blen +~ B & %\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - . GrammarStats\no ] Sk peturms rue or folse &1 string sarts vith capital and ends wich\ncorrect punctuation\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nBET)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n. v a v A N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 RS »degpribe MusleTedcher do 4) MusicTracker add method will fail if ic track al ists il\nri r g n ar\n4 xit zgdds song ta tracker' do ray usicirac @ nusic track already exists in a\n5 sic_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_tracker.list).to 'Hello - adele'\npect - F eq [ ! Finished in 9.00463 seconds (files took 0.18048 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n— > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1010,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X wo- & Blen +~ B & %\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - . GrammarStats\no ] Sk peturms rue or folse &1 string sarts vith capital and ends wich\ncorrect punctuation\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nBET)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a il N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge' 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 -Rspiscs degpribe NusLeTeather do 4) MusicTracker add method will fail if ic track al ists il\ni xit-\\adds song to: tracker' dp oy usicTracker a music track already exists in ar\n5 ]Inusic_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_tracker.list).to 'Hello - adele'\npect - F eq [ ! Finished in 9.00463 seconds (files took 0.18048 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n— > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1011,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\ni} ¥ 08 music designmd U @ 06 music_design_challenge.b U X wo- & Blen +~ B & %\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - . GrammarStats\no ] Sk peturms rue or folse &1 string sarts vith capital and ends wich\ncorrect punctuation\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nBET)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a il N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge' 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 -Rspiscs degpribe NusLeTeather do 4) MusicTracker add method will fail if ic track al ists il\ni xit-\\adds song to: tracker' dp oy usicTracker a music track already exists in ar\n5 ]Enusic_tracker = MusicTracker.new # Temporarily skipped with xit\n6 music_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_tracker.list).to 'Hello - adele'\npect - F eq [ ! Finished in 9.00463 seconds (files took 0.18048 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n— > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1012,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\ni} ku # 06_music_design_challenge.rb U X w8 Bos +~ B8 § x\nB > & 06 mwsic_design_challenge.rd .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\np - . GrammarStats\no ] Sk peturms rue or folse &1 string sarts vith caital and ends wich\ncorrect punctuation\né} returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\n4 d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nBET)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a il N # ./spec/06_music_design_challenge_spec.rb:10\nspec 06_music_design_challenge_spec.\n1 require '@6_music_design_challenge' 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3 Rspiscs describe MusLeTedther do 4) MusicTracker add method will fail if ic track al ists il\n4 xit 'adds song ta tracker' do oy usicTracker a music track already exists in ar\n5 IE LTS Tl A - To T T3 oy Tl =T oM T # Temporarily skipped with xit\n6 music_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_tracker.list).to 'Hello - adele'\npect - F eq [ ! Finished in 9.00463 seconds (files took 0.18048 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n~ o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track’\n® 13 end\n14\n& s . .\nmethad return A acks_added® dn -\n"
  },
  {
    "seconds": 1013,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (In=Nn J\n© ¥ Ofmisic desgnmd U & 08 music_desgn_shalkngesb U - 8 Bor +- B & x\nB> & 06 mwusic_design_challenge. b .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP _ GrammarStats\nB ] Sk petrns troe or folse 41 string starts wih capital and ends wich\nh correct punctuation\nP returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\nPd d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a ¢ lm wa # ./spec/06_music_design_challenge_spec.rb:10\n56C ) @ 06_music_desion_chalenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nIR Y =Tl [T LTS [V Rl =T T i )\na I. ¥iladdsi sonalta Erack dt 4) MusicTracker add method will fail if music track already exists in ar\nFit ‘adds song to tracker' do ray\n5 LTS Tl 30 T TR ) (7105 T f o= Tof (T g [0 # Temporarily skipped with xit\n6 nusic_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_tracker.list).to 'Hello - adele'\npect - ). eq [ ! Finished in 0.00463 seconds (files took 0.18048 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ . 3 3 .\nnethad return A a added ' do i ,\n"
  },
  {
    "seconds": 1014,
    "text": "(- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (In=Nn JE\n[+ ¥ 08 misic desgnmnd U & 08 music_desgn_shalkngesb U - 8 Bor +- B & x\nB > & 06 mwusic_design_challenge. b .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP _ GrammarStats\nB ] Sk petrns troe or folse 41 string starts wih capital and ends wich\nh correct punctuation\nP returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\nPd d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a ¥ .m wa # ./spec/06_music_design_challenge_spec.rb:10\n56C ) @ 06_music_desion_chalenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nR Y =Tl [T TS [V Kl =T (T G )\nP sy SERCPPWPTES - ML, TP 4) MusicTracker add method will fail if music track already exists in ar\n4 it 'adds song to tracker' ray\n5 LU Tl 40 T TR (7108 T f o= Tof (T g [0 # Temporarily skipped with xit\n6 nusic_tracker.add('Hello — adele') # ./spec/06_music_design_challenge_spec.rb:22\n7 expect(music_trackey.list).to 'Hello - adele'\npect - eif ). eq [ ! Finished in 0.00463 seconds (files took 0.18048 seconds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n& ) .\n& nethad re rn_a A added® do . ’\n"
  },
  {
    "seconds": 1015,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n[ | V0t desgnmd U | 4 06 musictesshalngest U % - @ Ben ++ B & x\nB > & 06 mwusic_design_challenge. b .\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP _ GrammarStats\nB ] Sk petrns troe or folse 41 string starts wih capital and ends wich\nh correct punctuation\n:P returns a interger the percentage of text checked so far that passed\na5 Todo\n#add method will add task as a string to an array. returns string + adde\nPd d\n© #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (PENDING: Temporarily skipped with xit)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adds song to tracker\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:4\n2) MusicTracker adding an empty string will fail\n- sk st # Temporarily skipped with xit\n¢ v a \"'m wa # ./spec/06_music_design_challenge_spec.rb:10\n56C ) @ 06_music_desion_chalenge_spec.\n1 require '@6_music_design_challenge' 3) MusicTracker list method will return all tracks added\n2 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nR Y Tl (T L TS [V Kl =T (T G )\na e A S AT e T 4) MusicTracker add method will fail if music track already exists in ar\nL ‘adds song to tracke ray\n5 LU Tl - T T ) (7108 T f o= Tof (T g [0 # Temporarily skipped with xit\n3 music_tracker.add('Hello - adele') P # -/5pac/R6 husic_design challenge_spec. rbi22\n7 expect(music_tracker.list).to 'Hello - adele'\npect - ). eq [ ! Finished in 9.00463 seconds (files took 0.18048 ijonds to load)\n8 end 12 examples, @ failures, 4 pending\n] f\n2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n& ) .\n& nethad re rn_a A added® do . ’\n"
  },
  {
    "seconds": 1016,
    "text": "[ X N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n(0 | ¥ 0t misc desgnmd U | @ 08 msic desm shalngest U - Dor +~ 5 & x\nR > 8 06_music_design_challingerd .\nJel 1 class MusicTracker - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % rspec]\n2\nS\n&\n53\n4\n@ 06_music_design_challenge_spec.rb U X -\nspec > @ 06_music_design_chalienge_spec.rd\n1 require '06_music_design_challenge\"' B\np\nI Y =Tl [T TS [VE Kl =T (T G )\n4\n5 music_tracker = MusicTracker.new [\n6 music_tracker.add('Hello - adele')\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 l expect{music_tracker.add('*)).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n@ b B o ] 5 \" \" o .\n"
  },
  {
    "seconds": 1017,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=0n NN\no ¥ O misic desgnmd U & 08 music_desgn_shalkngesb U R} B+~ 5 & x\nR > 8 06 mwsic_design_chaliengerd .\n. #check returns true or Talse if string starts with capital and ends with\nR 1 class MusicTracker correct punctuation\nR 2 _ returns a interger the percentage of text checked so far that passed\nUL\n:P #add method will add task as a string to an array, returns string + adde\n]\nE:C,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nP oY S ©m - 3) MusicTracker add method will fail if music track already exists in ar\nray\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' B # ./spec/06_music_design_challenge_spec,rb:22\nP\nR Y =Tl [T o LTS [V Kl =T (T G ) Failuresi\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello — adele’)\n6 music_tracker.add('Hello - adele') MoMethodErrors\n7 X ic tracker. t 'Hello - adele' undefined methed “add’ for #<MusicTracker:0x0000000133398648>\n€ peCt(ms c_uracker ustlsto eq ['Hello dele’] # ./spec/86_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>®\n]\nFinished in 0.08452 seconds (files took ©.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 L ITES Tl f =T 1 MusicTradl(fr.new . . Failed -\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n11iet methad will refurn A A dded® dn © 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1018,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=0n NN\no ¥ O misic desgnmd U & 08 music_desgn_shalkngesb U R} B+~ 5 & x\nR > 8 06 mwsic_design_chaliengerd .\n. #check returns true or Talse if string starts with capital and ends with\nR 1 class MusicTracker correct punctuation\nR 2 _ returns a interger the percentage of text checked so far that passed\nUL\n:P #add method will add task as a string to an array, returns string + adde\n]\nE:C,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nP oY S ©m - 3) MusicTracker add method will fail if music track already exists in ar\nray\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' B # ./spec/06_music_design_challenge_spec,rb:22\nP\nR Y =Tl [T o LTS [V Kl =T (T G ) Failuresi\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello — adele’)\n6 music_tracker.add('Hello - adele') MoMethodErrors\n7 X ic tracker. t 'Hello - adele' undefined methed “add’ for #<MusicTracker:0x0000000133398648>\n€ peCt(ms c_uracker ustlsto eq ['Hello dele’] # ./spec/86_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>®\n]\nFinished in 0.08452 seconds (files took ©.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 L ITES Tl f =T 1 MusicTradl(fr.new . . Failed -\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n11iet methad will refurn A A dded® dn © 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1019,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=0n NN\ni8] !Wﬂ # 06 music_design_challenge.rb U X | Dos ++ B # x\nR arpyes #check returns t false if string starts with capital and ends with\ns C| urns true or false string s S w. [=:1 3R] Ny-] ends w:\nR 1 class MusicTracker correct punctuation\nE 2 L returns a interger the percentage of text checked so far that passed\n3 T o\n:P #add method will add task as a string to an array. returns string + adde\nd\nE:C,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n@ o8 sk st ux ©m - 3) MusicTracker add method will fail if music track already exists in ar\nray\n$pec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' ‘ # ./spec/06_music_design_challenge_spec,rb:22\n2 |\nC Y T T g L [T K f =T T i ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele)\n3 music_tracker.add('Hello - adele') NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add’ for #<MusicTracker:0@x0000000138898648>\nexpe L c_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took @.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LTS Dol o =Tl X MusicTracIl(fr.new ) , Failed examples:\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n11iet methad will refurn A A dded® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill Challenges % Il\n"
  },
  {
    "seconds": 1020,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=0n NN\ni8] !Wﬂ # 06 music_design_challenge.rb U X | Dos ++ B # x\nR arpyes #check returns t false if string starts with capital and ends with\ns C| urns true or false string s S W [£:1 R -1 Np-] ends w:\nR 1 class MusicTracker correct punctuation\nE 2 returns a interger the percentage of text checked so far that passed\n3. Todo\n:P #add method will add task as a string to an array. returns string + adde\nd\nE:C,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n@ o8 sk st vk ©m - m?;) MusicTracker add method will fail if music track already exists in ar\n$pec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' ‘ # ./spec/06_music_design_challenge_spec,rb:22\n2 r\nC Y T T g L [T K f =T T i ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele)\n3 music_tracker.add('Hello - adele') NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:0x0000000138898648>\nexpe L c_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took @.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LTS Dol o =Tl X MusicTracIl(fr.new ) , Failed examples:\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n11iet methad will refurn A A dded® dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1021,
    "text": "[ N N ) 06_miusic_design_challenge.rb — Skill_Challenges Ing=0n NN\n[} % 0& s desgnnd U @ 08_music_desgn_shallenge.b U X uo - @ Do+~ B & x\nB> 8 06music_design_challangerd\nP 1 MusicTrack = #check returns true or false if string starts with capital and ends with\nL LRI i correct punctuation\n“ p returns a interger the percentage of text checked so far that passed\nE - Todo\nP #add method will add task as a string to an array, returns string + adde\nd\nEF,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nP o 3) MusicTracker add method will fail if music track already exists in ar\nray\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit ‘\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec,rb:22\n2 -\nC Y T T g L [T K f =T T i ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele)\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 xpect ic tracker.list).to 'Hello - adele' undefined method “add‘ for #<MusicTracker:0@x0000000138898648>\nexpe L c_tracke istl. eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new PP p——\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n‘list methad will return A A added® dn © 0Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill Challenges % [] |\n"
  },
  {
    "seconds": 1022,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\nin] QWU # 06_music_design_challenge.rb U X w8 Bos +~ B 8§ x\nR > 8 06_music_design_challenge.rd\np 1 MusicTracke: #check returns true or false if string starts with capital and ends with\nR ) [T W TSRS T\n“ p returns a interger the percentage of text checked so far that passed\nE - Todo\nP #add method will add task as a string to an array, returns string + adde\nd\nEF,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nP o 3) MusicTracker add method will fail if music track already exists in ar\nray\n56C ) @ 06_music_desion_chalenge_spec.b # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec,rb:22\n2 -\nC Y T T g L [T K f =T T i ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele’)\n[ music_tracker.add('Hello - adele') NoMethodError:\n7 xpect ic tracker.list).to 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000000138898648>\nexpe L c_tracke istl. eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new Failed examples:\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 \\\n11iet methad will refurn A A dded® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1023,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\n7Y ¥ 08 s desgnmd U 4 08 music_design_challengesb U B~ @ Blos ++ B & x\nwre onr? #check ret t false if stril tarts with ital and ends with\np = d urns true or false string s s capital and ends w:\n2 1 class MusicTracker correct punctuation\n“ 2 returns a interger the percentage of text checked so far that passed\nE Todo\n:P 4 end #add method will add task as a string to an array, returns string + adde\nd\nE:C,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n@ 06_music_design_challenge_specib U X ra:) MusicTracker add method will fail if music track already exists in ar\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' # ./spec/06_music_design_challenge_spec,rb:22\n2 -\nC Y T T g L [T K f =T T i ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele’)\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000000138898648>\nexpect{music_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni i . Failed examples:\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 \\\n11iet methad will refurn A A dded® dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1024,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\n[ ¥ 08 misic desgnnd U & 08 music_desgn_shalkngesd U % um- 8 Blon +~ B & x\nwre & #check ret t false if stril tarts with ital and ends with\np = d urns true or false string s s capital and ends w:\n2 1 class MusicTracker correct punctuation\n“ 2 returns a interger the percentage of text checked so far that passed\nE Todo\n:P 4 end #add method will add task as a string to an array, returns string + adde\nd\nE:C,’ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n@ 06_music_design_challenge_specib U X ra:) MusicTracker add method will fail if music track already exists in ar\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' # ./spec/06_music_design_challenge_spec,rb:22\n2 -\nC Y T T g L [T K f =T T i ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele’)\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000000138898648>\nexpect{music_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni i . Failed examples:\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 \\\n11iet methad will refurn A A dded® dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1025,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\n@ ¥ 08 misic desgnnd U & 08 music_desgn_shalkngesd U ® um- 8 Blon +~ B & x\nwre s #check ret t false if stril tarts with ital and ends with\ncl urns true or false if string starts capital and ends w.\nP 1 class MusicTracker correct punctuation\n“ 2 returns a interger the percentage of text checked so far that passed\nE] Todo\n:P a #add method will add task as a string to an array, returns string + adde\nd\n2 5 end #1list method will return all tasks added within the array\n#add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n@ 06_music_design_chalienge_specib U X ra:) MusicTracker add method will fail if music track already exists in ar\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' # ./spec/06_music_design_challenge_spec,rb:22\n2 -\nR Y =Tl (T o TS [VE Kl =Tl T G ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele’)\n6 [T Tl - T TV G TR T R VR T [ RS NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000000138898648>\nexpect{music_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n' ' « Failed examples:\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 \\\n‘list methad will return A A added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1026,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\n@ ¥ 08 s desgnmd U 4 08 music_design_challengesb U @ B~ @ Blos ++ B & x\nwre #check ret t false if stril tarts with ital and ends with\n{d urns true or false string s S capltal al ends w.\n2 1 class MusicTracker correct punctuation\n“ 2 returns a interger the percentage of text checked so far that passed\nE T add Todo\n:P a 1 #add method will add task as a string to an array, returns string + adde\nd\no 5 end ~ added #1list method will return all tasks added within the array\n&\n= adding #add method will fail if given empty string\nP #remove method will remove the given task from the todo array\ni = adds\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nP . 3) MusicTracker add method will fail if music track already exists in ar\nspec > @ 06_music_design_challenge_spec. b # Temporarily skipped with xit\n1 require '@6_music_design_challenge' # ./spec/06_music_design_challenge_spec,rb:22\n2 -\nR Y =Tl (T o TS [VE Kl =Tl T G ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele’)\n6 [T Tl - T TV G TR T R VR T [ RS NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000000138898648>\nexpect{music_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\nFailed examples:\n12 expect(music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& 11iet methad will refurn A A dded® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1027,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\nQQWO # 06 music_design_challengerb U ® um- 8 Blon +~ B & x\nwre #check ret t false if stril tarts with ital and ends with\ncl urns true or false if string starts capital and ends w.\n2 1 class MusicTracker correct punctuation\n“ b ; returns a interger the percentage of text checked so far that passed\nE] T add Todo\n:P a 1 #add method will add task as a string to an array, returns string + adde\nd\n2 5 end ~ added #1list method will return all tasks added within the array\n= adding #add method will fail if given empty string\nP #remove method will remove the given task from the todo array\n° = adds\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n@ 06_music_design_chalienge_specib U X ra:) MusicTracker add method will fail if music track already exists in ar\nspec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' # ./spec/06_music_design_challenge_spec,rb:22\n2 -\n3 RSpec.describe MusicTracker do Failures:\n4 1) MusicTracker adds song to tracker\n5 [LUVES Tolk 4 o-To T (718 Koy g Tol (- [0 Failure/Error: music_tracker.add('Hello - adele')\n6 [T Tl - T TV G TR T R VR T [ RS NoMethodError:\n7 xpect ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000000138898648>\nexpect{music_tracke istl.to eq [*Hello ele'] # ./spec/06_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took 0.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n' ' « Failed examples:\n12 expect{music_tracker.add('‘)).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 ,\n‘list methad will return A A added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1028,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQrWU’\\cmmwuo w8 B+ 8 & x\ne #check ret t false if stril tarts with ital and ends with\nCl urns true or talse string starts w cap: al €enas\n2 1 class MusicTracker correct punctuation\nn 2 returns a interger the percentage of text checked so far that passed\n3 def add Todo\nP a4 #add method will add task as a string to an array. returns string + adde\nd\n55’ 5 #list method will return all tasks added within the array\n6 end #add method will fail if given empty string\n? #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 08_music_desin_challenge_specb U X - a:) MusicTracker add method will fail if music track already exists in ar\n$00c > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge' # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 it dds song to tracker 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele)\n6 music_tracker.add('Hello — adele') NoMethodError:\n7 ct ic tracker.list).to 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x0000009138398648>\nexpe: L C_tracke ist) eq ['Hello adele’] # ./spec/86_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.00452 seconds (files took ©.11975 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ [T T 4 =T {1 o MusicTracl.(?r.new . . Failed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1029,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nY ¥ 08 music_designmd U | @ 08 music_design_chalkogeb U ® no- @ Do ++ B & x\nwre A #check ret t false if string starts with capital and ends with\nCl urns true or talse str: starts w. cap: al €enas\n2 1 class MusicTracker correct punctuation\nh 2 returns a interger the percentage of text checked so far that passed\n3 def add Todo\nmethod w task as a string to an array. returns string +\n& a #add method will add task ot ing + adde\nd\n55’ ] E #list method will return all tasks added within the array\n[ . #add method will fail if given empty string\n? 7 end -qnd #remove method will remove the given task from the todo array\n- @ MusicTracker\nadds song to tracker (FAILED - 1)\n= exists adding an empty string will fail (PENDING: Temporarily skipped with xit)\nw@xists! list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n« gxpect add method will fail if music track already exists in array (PENDING: Te\n0if elsif else if elsif else mporarily skipped with xit)\n0if else if else make_snippet method\n. i 3 return string if less then 5 words or equal\nOif elsif ‘“ elsif returns first 5 words of a longer string & appended ellipsis\nObegin else ens.. Exception bloc.\nCbegin else Exception block with- P:tn:tzg, (Failures listed here are expected and do not affect your suite's\nJbegin ensure Exception block wi-\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 ameie ek caleaInet b X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\nP\n3 RSpec.describe MusicTracker do Failures:\n4 ] dds song to tracker 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker,add('Hello — adele’)\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 ct ic tracker.list).t 'Hello - adele' undefined method “add‘ for #<MusicTracker:@x000e0e9138398648>\nexpel L ckracke st).to &q [*Hello adele’] # ./spec/86_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>®\n]\nFinished in 0.00452 seconds (files took ©.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = HusicTrad.(fr.new . . Failed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\n'1ist methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1030,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQFW'U\".MWVO no- @ Do ++ B & x\ne P #check ret t false if string starts with ital and ends with\nCl urns true or talse str: s 3 ) cap: al €enas\n2 1 class MusicTracker correct punctuation\nn 2 returns a interger the percentage of text checked so far that passed\n3 def add Todo\n:P 4 #add method will add task as a string to an array. returns string + adde\nd\n55’ ] #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 ameie ek caleaInet b X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_challenge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\nP\n3 RSpec.describe MusicTracker do Failures:\n4 dds song to tracker 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele)\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 ct ic tracker.list).t 'Hello - \\ry undefined method “add‘ for #<MusicTracker:@x000e0e9138398648>\nexpel L ckracke st).to &q [*Hello adele’] # ./spec/86_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>®\n]\nFinished in 0.00452 seconds (files took ©.11975 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = HusicTrad.(fr.new . . Failed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\nL methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1031,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nlgc_‘m*ng'\\cwwu- uwo- @ Do ++ B & x\ne #check ret t false if stri tarts with ital and ends with\n(o urns true or tTalse string s S W cap: al ends\n2 1 class MusicTracker correct punctuation\n“ 2 returns a interger the percentage of text checked so far that passed\n3 def add Todo\n:P 4 #add method will add task as a string to an array. returns string + adde\nd\n55’ ] #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X - a:) MusicTracker add method will fail if music track already exists in ar\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 dds song to tracker 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello - adele)\n6 LTS TR 4T UM TR AR TR Y A ] NoMethodError:\n7 ct ic tracker.list).t 'Hello - adele' undefined methed “add’ for #<MusicTracker:0x0000000138398648>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/86_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>*\n]\nFinished in 0.00452 seconds (files took ©.11975 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracI.(fr.new . . Failed examples:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\n' methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1032,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n@c—m—u.n-u-u | @ 08 music_design _challenge.b U X uwo- @ Do ++ B & x\ne #check ret t false if stril tarts with ital and ends with\n(o urns true or talse string s S W. [=: 10} al ends\n2 1 class MusicTracker correct punctuation\n3 p returns a interger the percentage of text checked so far that passed\n3 def add Todo\n:P 4 #add method will add task as a string to an array. returns string + adde\nd\n55’ 5 #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15 ][\na0 soskan_chal 0% 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: music_tracker.add('Hello — adele’)\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 ct ic tracker.list).t 'Hello - adele' undefined methed “add’ for #<MusicTracker:0x0000000138898648>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/@6_music_design_challenge_spec.rb:6:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00452 seconds (files took ©.11975 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracI.(fr.new . . Failed examples:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1033,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n[ | ® Otmskdeionndd. | @ o0 s s shatergess ¥ X wo- @ Don +- B 8\n> @ 06_music_desian_challange b ,\n0 1 class MusicTracker -+ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % ||\n2\n® 5 def add -\n& 4 -\ng° 5\n6\n2 7 end\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge\"\n5 .\n3 RSpec.describe MusicTracker do\n2\n5 music_tracker = MusicTracker.new\n6 LIEE TR 4T T T L TR TR C - T L A\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ] music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\nb\n@ L me alals re r'n B B Talal-7s M on\n"
  },
  {
    "seconds": 1034,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@c—u.n—u-u-u | @ 08 music_design _challenge.b U X uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb . Tmb\n2 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nR 3 def add #list method will return all tasks added within the array\ne 9] #add method will fail if given empty string\n:P 4 2} #remove method will remove the given task from the todo array\ng5 5 MusicTracker\n[ adds song to tracker (FAILED - 1)\n? 7 d adding an empty string will fail (PENDING: Temporarily skipped with xit)\nGl st method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in arcay (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suvite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker 1ist method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.id Failures:\n1 require '@6_music_design_challenge'\n2 = 1) MusicTracker adds song to tracker\nFailure/Error:\n3 RSpec.describe MusicTracker do def add\n4 end\n5 music_tracker = MusicTracker.new Pu—\nuentError:\n6 LIEE TR 4T T T L TR TR C - T L A wirong number of arguments (given 1, expected @)\n7 ct ic tracker.list).t 'Hello - adele' ¥ ./lib/06_music_design_challenge.rb:3:in “add’\nexpect{music_tracker:liat).to eq ['Hello - adels'] # ./spec/86_music_design_challenge_spec.rb:6:in ‘hlack {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LIS Uollh o =Tl T L 703 oy =Tl (TR TS PP p——\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' methad ratirn A arks added' dn 2 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1035,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n© c—m-da.n-u-iu | @ 08 music_design challenge.b U X uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb Tmb\n2 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nE 3 def add #list method will return all tasks added within the array\n- _ #add method will fail if given empty string\n4 [ #remove method will remove the given task from the todo array\n& hod will he gi k from the\ng5 5 MusicTracker\n[ adds song to tracker (FAILED - 1)\n? 7 d adding an empty string will fail (PENDING: Temporarily skipped with xit)\nGl st method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in arcay (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suvite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAL ITES U F- T TT R ES T T A R R BT B Y R S T g VLT\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n\" Tuporﬂ;ély skipped with xit\n# ./specy96_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.id Failures:\n1 require '@6_music_design_challenge\"\n2 = 1) MusicTracker adds song to tracker\nFailure/Error:\nER Y Tl (T 1 TS [VE Rl =Tl T G ) def add\n4 end\n5 music_tracker = MusicTracker.new Pu—\nuentError:\n6 LIEE TR 4T T T L TR TR C - T L A wrong number of arguments (given 1, expected @)\n7 ct ic tracker.list).t 'Hello - adele' ¥ ./lib/06_music_design_challenge.rb:3:in ~“add’\nexpect{music_tracker:liat).to eq ['Hello - adels'] # ./spec/86_music_design_challenge_spec.rb:6:in ‘hlack {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LUTES TR 4 =TS T T3 Rl T T SN Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' methad ratirn A arks added' dn 2 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1036,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@c—u.n—u-u-u | @ 08 music_design challenge.b U X uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb Tmb\n2 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nE 3 def add #list method will return all tasks added within the array\n- _ #add method will fail if given empty string\n:P 4 | #remove method will remove the given task from the todo array\ng5 5 MusicTracker\n[ adds song to tracker (FAILED - 1)\nP adding an empty string will fail (PENDING: Temporarily skipped with xit)\ni 7 end Uist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in arcay (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suvite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAL ITES U F- T TT R ES T T A R R BT B Y R S T g VLT\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.id Failures:\n1 require '@6_music_design_challenge\"\n2 = 1) MusicTracker adds song to tracker\nFailure/Error:\nER Y Tl (T 1 TS [VE Rl =Tl T G ) def add\n4 end\n5 LIRS TR T LT TS Ca = 1ol T O Pu—\nuentError:\n6 LIEE TR 4T T T L TR TR C - T L A wirong number of arguments ‘gﬁn 1, expected @)\n7 ct ic tracker.list).t 'Hello - adele' ¥ ./lib/06_music_design_challeng&.rb:3:in ~“add’\nexpect{music_tracker:liat).to eq ['Hello - adels'] # ./spec/86_music_design_challenge_spec.rb:6:in ‘hlack {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LIS Uollh o =Tl T L 703 oy =Tl (TR TS PP p——\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' methad ratirn A arks added' dn 2 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1037,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@c—u.n—u-u-u | @ 08 music_design _challenge.b U X uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb Tm\n2 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nR 3 def add ]I #list method will return all tasks added within the array\net A #add method will fail if given empty string\n:P 4 #remove method will remove the given task from the todo array\ng5 5 MusicTracker\n[ adds song to tracker (FAILED - 1)\nP adding an empty string will fail (PENDING: Temporarily skipped with xit)\n© 7 end list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i> Failures:\n1 require '@6_music_design_challenge\"\n2 = 1) MusicTracker adds song to tracker\nFailure/Error:\nER Y Tl (T 1 TS [VE Rl =Tl T G ) def add\n4 end\n5 music_tracker = MusicTracker.new A (&\numentError:\n6 LTS TR 4T UM TR AR TR Y A ] r?,m,.q number of arguments (givERNINNEXPECted o)\n7 ct ic tracker.list).t 'Hello - adele' # ./1ib/06_music_design_challenge.rb:3:in “add’\nexpe (mus c_tracke ist).to &q [*Hello adele’] # ./spec/@6_music_design_challenge_spec.rb:6:in ‘block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LIS Uollh o =Tl T L 703 oy =Tl (TR TS PP p——\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' methad ratirn A arks added' dn 2 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1038,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@c—u.n—u-u-u | @ 08 music_design _challenge.b U X no- 8 Do+ 8 & x\nb > @ 06_music_design_challenge.rb Todo\n2 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nk 3 #list method will return all tasks added within the array\n#add method will fail if given empty string\n:P 4 #remove method will remove the given task from the todo array\ngy 5 - MusicTracker\n6 adds song to tracker (FAILED - 1)\n? 7 d adding an empty string will fail (PENDING: Temporarily skipped with xit) |\nen list method will return all tracks added (PENDING: Temporarily skipped w |\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te |\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR ITES U f- T TT R RS T T A R T BT R S T R T T\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar ;\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i> Failures:\n1 require '@6_music_design_challenge\"\n2 = 1) MusicTracker adds song to tracker\nFailure/Error:\nER Y Tl (T 1 TS [VE Rl =Tl T G ) def add\n4 end\n5 music_tracker = MusicTracker.new JU—\nntError:\n[ music_tracker.add('Hello - adele') r?lrong number of arguments (givENEMNEXPECted 0)\n7 ct ic tracker.list).t 'Hello - adele' # ./11ib/06_music_design_challenge.rb:3:in “add’\n# ./spec/@6_music_design_challenge_spec.rb:6:in \"block (2 levels) in\nexpect(music_tracker.list).to eq ['Hello - adele'] . f )\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracI.(fr.new . . Failed -\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' methad ratirn A arks added' dn 2 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] '\n"
  },
  {
    "seconds": 1039,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQc—nu—u-u-u | @ 08 music_design challengeb U & uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb Tmh\nL 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nk 3 #list method will return all tasks added within the array\n#add method will fail if given empty string\n4 #remove method will remove the given task from the todo array\n& hod will he gi k from the todo\ng 5 end MusicTracker\n[ adds song to tracker (FAILED - 1)\n? 7 d adding an empty string will fail (PENDING: Temporarily skipped with xit)\nen list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR ITES U £ T TT o R RS T T I R R T BT R S T L L L\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i> Failures:\n1 require '@6_music_design_challenge\"\n2 - 1) MusicTracker adds song to tracker\nFailure/Error:\n3 RSpec.describe MusicTracker do def add\n4 end\n5 LIRS TR T LT TS Ca = 1ol T O JU—\nnteError:\n[ music_tracker.add('Hello - adele') r?lrorlg number of arguments (givERNENNEXPEcted 0)\n7 r r. t).t 'Hello - \\ry # ./1ib/06_music_design_challenge.rb:3:in “add’\nexPeCt(msj'c\"t acker.list).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:6:in ‘block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracI.(fr.new . . PP ——\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\n' methad ratirn A arks added' dn 2 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1040,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nac—nu—u-u-u | @ 08 music_design challengeb U ® uwo- @ Do ++ B & x\nb > @ 06_music_design_challenge.rb Todo\nL 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nk 3 #list method will return all tasks added within the array\n#add method will fail if given empty string\n:P 4 #remove method will remove the given task from the todo array\ng° 5 end =track MusicTracker\n6 =tracker adds song to tracker (FAILED - 1)\nP adding an empty string will fail (PENDING: Temporarily skipped with xit)\n© 7 end =tracks list method will return all tracks added (PENDING: Temporarily skipped w\n=Track ith xit)\nadd method will fail if music track already exists in array (PENDING: Te\n£ (V15 X f Ve (T mporarily skipped with xit)\nB VS 414 (T g nake_sn method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAL ITES U f- T T R RS T A R R T B T R S T L L L\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i> Failures:\n1 require '@6_music_design_challenge\"\n2 - 1) MusicTracker adds song to tracker\nFailure/Error:\nER Y Tl (T 1 TS [VE Rl =Tl T G ) ]\n4 end\n5 music_tracker = MusicTracker.new JU—\nnteError:\n[3 LTS TR 4T UM TR AR TR Y A ] r?lrong number of arguments (giviINNERPECted 0)\n7 ct ic tracker.list).t 'Hello - adele' # ./1ib/06_music_design_challenge.rb:3:in “add’\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:6:in ‘block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracI.(fr.new . . Failed -\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n{3} b 1\n' methad ratirn A arks added' dn 2 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1041,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nac—nu—u-u-u | @ 08 music_design challengeb U @ uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb Tmh\nL 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nk 3 #list method will return all tasks added within the array\n#add method will fail if given empty string\n:P 4 #remove method will remove the given task from the todo array\n& 5 end = tracker MusicTracker\n6 =tracks adds song to tracker (FAILED - 1)\nP adding an empty string will fail (PENDING: Temporarily skipped with xit)\n© 7 end = Track list method will return all tracks added (PENDING: Temporarily skipped w\n«MusicTr ith xit)\nsdoTragkep add method will fail if music track already exists in array (PENDING: Te\n=music_tracker mporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR ITES Ta f- T T R RS T 4 T A R R BT B Y R R S T L\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i> Failures:\n1 require '@6_music_design_challenge\"\n2 - 1) MusicTracker adds song to tracker\nFailure/Error:\nER Y Tl (T 1 TS [VE Rl =Tl T G ) def add\n4 end\n5 music_tracker = MusicTracker.new\n\"Hell dele') ArgumentError:\n[3 music_tracker.add('Hello - adele wrong number of arguments (givifNEXDEcted 0)\n7 ct ic tracker.list).t 'Hello - adele' # ./1ib/06_music_design_challenge.rb:3:in “add’\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:6:in ‘block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LIS Uollh o =Tl T L 703 oy =Tl (TR TS PP ——\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\n' methad ratirn A arks added' dn 2 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1042,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@c—m—u.n-u-u | @ 08 music_design _challenge.b U X uwo- @ Do ++ B & x\nb > @ 06_music_design_challengesb Tmh\n2 1 class MusicTracker #add method will add task as a string to an array. returns string + adde\nP d\nk 3 #list method will return all tasks added within the array\n#add method will fail if given empty string\n4 #remove method will remove the given task from the todo array\n& hod will he gi k from the todo\ng 5 end MusicTracker\n[ adds song to tracker (FAILED - 1)\n? 7 d adding an empty string will fail (PENDING: Temporarily skipped with xit)\nen list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR ITES Ta f- T T R RS T 4 T A R R BT B Y R R S T L\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X\nspec > @ 06_music_design_challenge_spec.i> Failures:\n1 require '@6_music_design_challenge\"\n2 - 1) MusicTracker adds song to tracker\nFailure/Error:\n3 RSpec.describe MusicTracker do def add\n4 end\n5 LIRS TR T LT TS Ca = 1ol T O JU—\nnteError:\n[ music_tracker.add('Hello - adele') r?lrorlg number of arguments (givEfNENNEXpEcted 0)\n7 ct ic tracker.list).t 'Hello - adele' # ./1ib/06_music_design_challenge.rb:3:in “add’\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:6:in ‘block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00475 seconds (files took 0.1184 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracI.(fr.new . . PP ——\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 .\n' methad ratirn A arks added' dn 2 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1043,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@ ndU @ 06 music_design challengesh U X o @ Don +- B & x\n> @ 06_music_design_challengesd\nfel 1 class MusicTracker - aswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ '\n2 -\n% 3\n& 4\ng° 5 end\n6\n2 7 end\n@ 06_music_design_challenge_spec.rb U X\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge\"\n: .\n3 RSpec.describe MusicTracker do\n\"\n5 LIRS TR T LT TS Ca = 1ol T O\n6 LIEE TR 4T T T L TR TR C - T L A\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 ] music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\nb\n@ L me alals re r'n B B Talal-7s M on\n"
  },
  {
    "seconds": 1044,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n() | % Ol desgnmd U | @ 08 muicdesr.shalngest U X no- @ By ++ B & x\n> @ 06_music_design_challange.sd ) .\n0 1 class MusicTracker - 0swinpintoGMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n2 ~ GrammarStats\nR 3 #check returns true or false if string starts with capital and ends with\n[y Ja i lad:1el )]\n:P 4 returns a interger the percentage of text checked so far that passed\n&D ) end | Todo\n[ #add method will add task as a string to an array. returns string + adde\nPd d\no 7 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nL TES T g g:To 21\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\n[ list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n@ 06_fmusic_design_challenge_spec.ib U X # ./spec/06_music_design_challenge_spec,rb:15\nspec > @ 06_music_design_challenge_spec.i>\n1 require '@6_music_design_challenge\" 3) MusicTracker add method will fail if music track already exists in ar\n= ray\n2 # Temporarily skipped with xit\nER Y Tl (T 1 TS [VE Rl =Tl T G ) # ./spec/06_music_design_challenge_spec.rbi22\nA 1\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l\n-] end\n]\n10 | xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L me alals o) rn._A B '--:- 0o\n"
  },
  {
    "seconds": 1045,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n@Afwu' | @ 08 music_design _challenge.h U % uwo- @ Do ++ B & x\ne #check ret t false if stri tarts with ital and ends with\n(o urns true or tTalse string starts w cap: al ends\n2 1 class MusicTracker correct punctuation\n“ 2 - returns a interger the percentage of text checked so far that passed\nE} Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 ] dds song to tracker 1) MusicTracker adds song to tracker.\n5 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 ct ic tracker.list).t 'Hello - adele' undefined methed “list' for #<MusicTracker:@x00e000011d1d2b36>\nexpe (mus c_tracke ist).to &q [*Hello adele’] # ./spec/@6_music_design_challenge_spec.rb:7:in “block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracl.(fr.new . . Failed examples:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n'1ist _mathad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1046,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n@Afwu' | @ 08 music_design _challenge.h U % uwo- @ Do ++ B & x\ne #check ret t false if stril tarts with ital and ends with\n(o urns true or tTalse string starts w [=: 10} al ends\n2 1 class MusicTracker correct punctuation\nZ‘ p - returns a interger the percentage of text checked so far that passed\nE} Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/96_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 ‘ dds song to tracker 1) MusicTracker adds song to tracker.\n5 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n6 music_tracker.add('Hello - adele') NoMethodError:\n7 ct ic tracker.list).t 'Hello - adele' undefined method “list' for #<MusicTracker:@x000000011d1d2b36>\nexpe (mus c_tracke ist).to &q [*Hello adele’] # ./spec/@6_music_design_challenge_spec.rb:7:in “block {2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracl.(fr.new . . Failed examples:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1047,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n@Afwu' | @ 08 music_design _challenge.h U % uwo- @ Do ++ B & x\ne #check ret t false if stril tarts with ital and ends with\n(o urns true or talse string starts w. (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ p - returns a interger the percentage of text checked so far that passed\n3 Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X - a:) MusicTracker add method will fail if music track already exists in ar\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n5 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n6 LTS TR 4T UM TR AR TR Y A ] NoMethodError: \\]I\n7 ct ic tracker.list).t 'Hello - adele' undefined methed “ist for #<MusicTracker:@x000000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracl.(fr.new . . Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1048,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n@Afwu' | @ 08 music_design _challenge.h U X uwo- @ Do ++ B & x\ne #check ret t false if stril tarts with ital and ends with\n(o urns true or talse string starts w. (=10} al ends\n2 1 class MusicTracker correct punctuation\nZ‘ p - returns a interger the percentage of text checked so far that passed\nK] Todo\n4 method w task as a string to an array. returns string +\n& #add method will add task ot ing + adde\nd\ns ] end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 end #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker,list}.to eq ['Hello - adele’]\n6 nusic_tracker.add('Hello - adele’) NobtethodError e R e\n7 ct ic tracker.list).t 'Hello - adele' —s ‘ for #<MusicTracker:@x000800011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>’\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Uolih o - Tof X MusicTracl.(fr.new . . Failed examples:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1049,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n@c—u.n—u-u-u | @ 08 music_design_challenge.b U X uwo- @ Do ++ B & x\nwre #check ret t false if string starts with capital and ends with\n(o urns true or talse string s S W (=10} al ends\n2 1 class MusicTracker correct punctuation\nZ‘ p returns a interger the percentage of text checked so far that passed\nki def add{track) Todo\n4 method w task as a string to an array. returns string +\n& #add method will add task ot ing + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 #remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\n]I list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit ‘\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\n3 RSpec.describe MusicTracker do Failures:\n4 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker,list}.to eq ['Hello - adele’]\n6 nusic_tracker.add('Hello - adele’) e —\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:@x@00000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LIS Uollh o =Tl T L 703 oy =Tl (TR TS Failed examples:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' nethad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1050,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQfm—u-u-du | @ 08 music_design challengeh U # uwo- @ Don +- 8 & x\ne eyl #check ret t false if stril tarts with ital and ends with\n(o urns true or talse string starts w. (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ 2 returns a interger the percentage of text checked so far that passed\n3 def add{track) Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 #remove method will remove the given task from the todo array\n8 end MusicTracker\nadds song to tracker (FAILED - 1)\nadding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X - a:) MusicTracker add method will fail if music track already exists in ar\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker,list}.to eq ['Hello - adele’]\n6 nusic_tracker.add( ‘Hello — adele®) I R oo\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:@x000000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracl.(fr.new . . Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 H\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1051,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQc—u.n—u-u-u | @ 08 music_design challengeh U # uwo- @ Do ++ B & x\nwre o #check ret t false if string starts with capital and ends with\n(o urns true or talse string s S W (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ 2 returns a interger the percentage of text checked so far that passed\nk] def add{track) Todo\n4 method w task as a string to an array. returns string +\n& #add method will add task ot ing + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 #remove method will remove the given task from the todo array\n8 MusicTracker\nadds song to tracker (FAILED - 1)\ng end =1list adding an empty string will fail (PENDING: Temporarily skipped with xit)\nDloop forever loop list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nOif elsif else if elsif else add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X - a:) MusicTracker add method will fail if music track already exists in ar\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker,list}.to eq ['Hello - adele’]\n6 nusic_tracker.add( ‘Hello — adele®) e S s e T\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:0x000000011d1d2b30>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 H\n' nethad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1052,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQc—nu—u-u-u | @ 08 music_design challenge.b U @ uwo- @ Do ++ B & x\nwre o #check ret t false if string starts with capital and ends with\n(o urns true or talse string s S W (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ 2 returns a interger the percentage of text checked so far that passed\nE} def add(track) Todo\n:P 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 #remove method will remove the given task from the todo array\n8 MusicTracker\nadds song to tracker (FAILED - 1)\ng end adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n5 LTS Tl 4 - T L (718 Cof ff =T (Y M (10 Failure/Error: expect(music_tracker,list).to eq ['Hello - adele‘]\n6 nusic_tracker.add( ‘Hello — adele®) e (i ST T\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:@x000000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 H\n' nethad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1053,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQfm—u-u-du | @ 08 music_design challenge.b U @ uwo- @ Do ++ B & x\nwre o #check ret t false if string starts with capital and ends with\n(o urns true or talse string starts w. (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ 2 returns a interger the percentage of text checked so far that passed\nE} def add(track) Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 det list #remove method will remove the given task from the todo array\n8 MusicTracker\nadds song to tracker (FAILED - 1)\n9 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n16 end list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X - a:) MusicTracker add method will fail if music track already exists in ar\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n5 LTS Tl 4 - T L (718 Cof ff =T (Y M (10 Failure/Error: expect(music_tracker,list).to eq ['Hello - adele‘]\n6 nusic_tracker.add( ‘Hello — adele®) e (i ST T\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:@x000000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracl.(fr.new . . Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 H\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1054,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQfm—u-u-du | @ 08 music_design challenge.b U @ uwo- @ Do ++ B & x\nwre o #check ret t false if string starts with capital and ends with\n(o urns true or talse string starts w. (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ 2 returns a interger the percentage of text checked so far that passed\nE} def add(track) Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 det list #remove method will remove the given task from the todo array\n8 MusicTracker\nadds song to tracker (FAILED - 1)\n9 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n10 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n11 end add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X - a:) MusicTracker add method will fail if music track already exists in ar\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker,list}.to eq ['Hello - adele’]\n6 nusic_tracker.add( ‘Hello — adele®) e (i ST T\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:@x000000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 H\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1055,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n© ¥ 06 music_desgnmd U@ 06 musi_desin_challeogerd U X uwo- @ Don +- 8 & x\nwre o #check ret t false if string starts with capital and ends with\n(o urns true or talse string starts w. (=10} al ends\nbl 1 class MusicTracker correct punctuation\nZ‘ 2 returns a interger the percentage of text checked so far that passed\nE} def add(track) Todo\nP 4 #add method will add task as a string to an array. returns string + adde\nd\ns 5 end #list method will return all tasks added within the array\n[ #add method will fail if given empty string\n? 7 det list #remove method will remove the given task from the todo array\n8 MusicTracker\nadds song to tracker (FAILED - 1)\n9 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n10 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n11 end add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n@ 00 sSen HalnguIPeciD U X 3) MusicTracker add method will fail if music track already exists in ar\nray\npec > @ 06_music_design_chalienge_spec. # Temporarily skipped with xit\n1 require '@6_music_design_challenge\" # ./spec/06_music_design_challenge_spec.rb:22\n2\nI YTl o T [VE Rl =T T G ) Failures:\n4 1) MusicTracker adds song to tracker\n3 music_tracker = MusicTracker.new Failure/Error: expect(music_tracker,list}.to eq ['Hello - adele’]\n6 nusic_tracker.add( ‘Hello — adele®) e (i ST T\n7 ct ic tracker.list).t 'Hello - adele' r #<MusicTracker:@x000000011d1d2b3e>\nexpe L ctracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.00394 seconds (files took ©.12989 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracl.(fr.new . . Failed les:\n12 expect{music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/06_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 H\n'1ist _methad ratirn A arks added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1056,
    "text": "o000 06_music_design_challenge.rb — Skill_Challenges DBEmlos\n(G | % Ol desgnmd U | @ 06 muicdesr.shalngest U X wo - @ Do+ 5 & x\nb > @ 06_music_design_challenge.sb '\n0 1 class MusicTracker - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skitl_Challenges % [\n2\n» ki def add(track)\n& 4\ng° 5 end\n6 3l\nB 7| def ust ‘\n8\n9\n10 |\n11 end\nX\n@ 06_music_design_challenge_spec.rb U X\nspec ) @ 06_music_design_challenge_spec.rd\n1 require '@6_music_design_challenge\" L\n2\nI YTl o T [VE Rl =T T G )\n2\n5 music_tracker = MusicTracker.new\n6 LIEE TR 4T T T L TR TR C - T L A\n7 expect(music_tracker.list).to eq ['Hello - adele'l\n8 end\n]\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 ] expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n(S end\n& b\n"
  },
  {
    "seconds": 1057,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n(0 | % Ol desgnmd U | @ 06 muicdesr.shalngest U X no- @ By ++ B & x\nb > @ 06_music_design_challenge.sb i\n0 1 class MusicTracker -+ 0swinpintoGMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skitl_Challenges % rspec\ng 2 GrammarStats\n#check returns true or false if string starts with capital and ends with\nk] def add(track) correct punctuation\n:P 4 returns a interger the percentage of text checked so far that passed\ng° 5 end Todo\n[ - #add method will add task as a string to an array. returns string + adde\nPd d\n° 7 def list ‘ #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 T #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker (FAILED - 1)\n11 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n::;::«.mwwm\" % N # ./spec/06_music_design_challenge_spec.rb:15\n06_music._design_challenge_spec.\n1 require '@6_music_design_challenge\" 3) MusicTracker add method will fail if music track already exists in ar\n= ray\n2 # Temporarily skipped with xit\nI YTl o T [VE Rl =T T G ) # ./spec/@6_music_design_challenge_spec.rbi22\nA 1\n5 music_tracker = MusicTracker.new\n6 music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'l\n-] end\n]\n10 | xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ L ne alals o) rn._A B '--:- 0o\n"
  },
  {
    "seconds": 1058,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ni8] 'wb | @ 08 smusic_design._shallenget U X no- 8 Boh +~B § x\n> @ 06_music._design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nH 2 Todo\n3 def add(track) “ #add method will add task as a string to an array. returns string + adde\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n6 =\nP MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n'9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 epd\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n'“\")“\"“\"\"\"- DBAINIEAREID S X N # ./spec/06_ausic_design_challenge_spec.rb:22\n$p6C ) @ 06_Music_desion_challengs,_Spec.\n1 require '@6_music_design_challenge'\n2 ol - FAUTTY - H\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 e T Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele‘]\n5 LUTES Ul - T GRS TS oy 0™ Tot () M T2 expectectl: (;lllello - adele] ][\n. H\n6 music_tracker.add('Hello - adele*) %\n7 expect ic_tr r.list).t 'Hello - a ! (compared using ==)\n{music_tracker.list).to eq ['Hello dele'] # ./spec/@6_music_design_challenge_spec.rb:7:in ‘block {2 levels) in\n‘8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit ‘adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Nl o =T L L TS e - Tt (-T2 ¢\ni i i P ailed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' sathad atrini o ke added! dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n"
  },
  {
    "seconds": 1059,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ni8] 'wb | @ 08 smusic_design._shallenget U X no- 8 Boh +~B § x\n> @ 06_music._design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 def add(track) #add method will add task as a string to an array. returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n6 =\nP MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n'9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 epd\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n'“\")“\"“\"\"\"- DBAINIEAREID S X N # ./spec/06_ausic_design_challenge_spec.rb:22\n$p6C ) @ 06_Music_desion_challengs,_Spec.\n1 require '@6_music_design_challenge'\n2 ol - FAUTTY - H\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 e T Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele‘]\n5 LUTES Ul - T GRS TS oy 0™ Tot () M T2 expectectl: (;lllello - adele] I[\n. tn\n6 music_tracker.add('Hello - adele') 9\n7 {o14 ic_tr r.list).t 'Hello - a ! (compared using ==)\nSipe L ¢ tracke ist).to eq [*Hello dele’] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block {2 levels) in\n‘8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit ‘adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new :\ni i i P ailed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' sathad atrini o ke added! dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n"
  },
  {
    "seconds": 1060,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ni8] 'wb | @ 08 smusic_design._shallenget U X no- 8 Boh +~B § x\n> @ 06_music._design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nH 2 Todo\n#add method will add task as a string to an array. returns string + adde\nki def add{track) d\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n6 =\nP MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n'9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 epd\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n'“\")“\"“\"\"\"- DBAINIEAREID S X N # ./spec/06_ausic_design_challenge_spec.rb:22\n$p6C ) @ 06_Music_desion_challengs,_Spec.\n1 require '@6_music_design_challenge'\n2 ol - FAUTTY - H\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 e T Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele‘]\n5 LUTES Ul - T GRS TS oy 0™ Tot () M T2 expecte«ti: Ii‘illlello - adele]\n. H\n6 music_tracker.add('Hello - adele') 9\n7 expect ic_tr r.list).t 'Hello - a ! (compared using ==)\n{music_tracker.list).to eq ['Hello dele'] # ./spec/@6_music_design_challenge_spec.rb:7:in ‘block {2 levels) in\n8 end <top (required)s’\n9\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit ‘adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new :\ni i i P ailed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' sathad atrini o ke added! dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n"
  },
  {
    "seconds": 1061,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ni8] 'wb | @ 08 smusic_design._shallenget U X no- 8 Boh +~B § x\n> @ 06_music._design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nH 2 Todo\n#add method will add task as a string to an array. returns string + adde\nki def add{track) d\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n6 =\nP MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n'9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 epd\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n# Temporarily skipped with xit\n'“\")“\"“\"\"\"- DBAINIEAREID S X N # ./spec/06_ausic_design_challenge_spec.rb:22\n$p6C ) @ 06_Music_desion_challengs,_Spec.\n1 require '@6_music_design_challenge'\n2 ol - FAUTTY - H\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 e T Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele‘]\n5 LUTES Ul - T GRS TS oy 0™ Tot () M T2 expectectl: (;lllello - adele]\n. H\n6 music_tracker.add('Hello - adele*) % X\n7 expect ic_tr r.list).t 'Hello - a ! (compared using ==)\n{music_tracker.list).to eq ['Hello dele'] # ./spec/@6_music_design_challenge_spec.rb:7:in ‘block {2 levels) in\n‘8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit ‘adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LS Nl o =T L L TS e - Tt (-T2 ¢\ni i i P ailed examples:\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\n' sathad atrini o ke added! dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n"
  },
  {
    "seconds": 1062,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\no [ % Otmusc desgnmd U | @ 08 musk_desin_challergert v X no- o Do +- 8 & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nE 2 Todo\n#add method will add task as a string to an array. returns string + adde\n3 def add(track) d\n4 #list method will return all tasks within the array\n& 14 hod will 148 ks added within the\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n6 =\nPd MusicTracker\n© U def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n'9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 epd\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:1@\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\nspec 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 il - FAUTTY T H\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\na Failure/Error: expect(music_tracker.list}.to eq [‘Hello - adele‘]\n5 music_tracker = MusicTracker.new e\n6 music_tracker.add('Hello - adele')\n7 t ic_tracker.list).to 'Hello - adele' (compared using =)\nexpect{music_tracke ist) eq ['Hello dele’] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block {2 levels) in\n8 end <top (required)s’\n]\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PP ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\nf sathad atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n"
  },
  {
    "seconds": 1063,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n(0 [ ¥ Ot desgnmd U | 4 o8 music_des.shalungests v X no- @ Don +~ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\np3 Todo\nE 3 def add(track) #add method will add task as a string to an array. returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n6 =\nPd MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 end\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 = Failures:\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\na Failure/Error: expect(music_tracker.list},to eq [‘Hello - adele‘]\n5 music_tracker = MusicTracker.new cxpecmtﬁ l;*l'el.lo *j[wele\"l\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele’ (compared using =)\nexpect{music_tracke ist) eq ['Hello dele’] E AL TS TS TS T T R R T T T H S T I U T VAR VA RS R T\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PR P ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\nf atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i\n"
  },
  {
    "seconds": 1064,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n(0 [ ¥ Ot desgnmd U | 4 o8 music_des.shalungests v X no- @ Don +~ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nE p3 Todo\n#add method will add task as a string to an array. returns string + adde\nk def add{track) 1 d\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n3\nPd MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nmporarily skipped with xit)\n11 end\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 = Failures:\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\na Failure/Error: expect(music_tracker.list},to eq [‘Hello - adele‘]\n5 music_tracker = MusicTracker.new cxpecmtﬁ l;*l'el.lo - edele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele’ (compared using =)\nexpect{music_tracke ist) eq ['Hello dele’] E AL TS TS TS T T R R T T T H S T I U T VAR VA RS R T\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PR P ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14\nf atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i\n"
  },
  {
    "seconds": 1065,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n(0 [ ¥ Ot desgnmd U | 4 o8 music_des.shalungests v X no- @ Don +~ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\np3 Todo\nE 3 def add(track)IE #add method will add task as a string to an array. returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n3\nPd MusicTracker\n© 7 def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\n11 end mporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\nspec 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 = Failures:\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\na Failure/Error: expect(music_tracker.list},to eq [‘Hello - adele‘]\n5 music_tracker = MusicTracker.new expecmti: [;rliel_lo - edele\"]\nH\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele’ (compared using =)\nexpect{music_tracke ist) eq ['Hello dele’] E AL TS TS TS T T R R T T T H S T I U T VAR VA RS R T\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took @.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = MusicTracker.new - les:\n12 expect{(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\nrspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n® 13 end\n12 to tracker\n& f atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i\n"
  },
  {
    "seconds": 1066,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\no [ % Obmusic desgnmd U | @ 08 musk_desin_challergert U X no- @ BDon +- B & x\n> @ 06_music_design_challenge.rd\np 1 m“ - returns a interger the percentage of text checked so far that passed\nE p3 Todo\n3 def add(track) P #add method will add task as a string to an array. returns string + adde\n:P 4 #list method will return all tasks added within the array ‘\n#add method will fail if given empty string\n2 5 end #remove method will remove the given task from the todo array\n3\nPd [ TERTa g T 0T\n© U def list adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit) |\n10 add method will fail if music track already exists in array (PENDING: Te |\n11 end mporarily skipped with xit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's |\nstatus)\n1) MusicTracker adding an empty string will fail\nLR TSR S T AR I S 4\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar H\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 = Failures:\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list)},to eq [‘Hello - adele’]\n5 music_tracker = MusicTracker.new expecm:= l;*l'ello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PR ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nf sathad atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1067,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQ.wﬁ ‘ @ 06_music_design_challengerty U & no- & Bos ++ B & x\n> @ 06_music_design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nE 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 dé»~describe :;;s’t.::m:d':ﬂlfrﬁugg a}l tasb(‘sm,adcledt 1u1thin the array\nR, ) given em| string\n2 5 Ndef method definition #remove method will remove the given task from the todo array\n6 en=music_design_challenge\nPd = 9N g [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele’]\n5 music_tracker = MusicTracker.new expecm:: [;lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpect{music_tracke ist) eq ['Hello dele’] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PR ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nf sathad atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1068,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n(G | * Chmsedesonndy | 4 06 muic desnhsberoers v @ no- @ Don +~ B & x\n> @ 06_music_design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nA Todo\nE 3 #add method will add task as a string to an array., returns string + adde\nd\n& 4 def add{track)} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele’]\n5 music_tracker = MusicTracker.new expecte«:= l:iliello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9°\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 ;\nU nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1069,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design _challenget1 U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nE 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track)} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 ;\nU nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1070,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n(| O desonnd | @ 06 sk sesgn habaness 0 & wo - @ Dor +- 3 & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nE 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def 1] #list method will return all tasks added within the array\ni #add method will fail if given empty string\n2 5 < input #remove method will remove the given task from the todo array\n» [ end |=it MusicTracke\nB sicTracker\n© 7 oif if adds song to tracker (FAILED - 1)\n8 def UD4if else if else adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 Oclass init Class definition wit. ith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge'\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do FRR TESTS (Tt VAR R O T\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new exoecteg= l:iliello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpect{music_tracke ist) eq ['Hello dele’] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PR ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 ;\nf sathad atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1071,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQ'wﬁ | @ 08 music_design_challengest U @ no- @ BDon +- B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nE 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def 1] #list method will return all tasks added within the array\ni #add method will fail if given empty string\n2 5 < input #remove method will remove the given task from the todo array\n» 6 end |«it MusicTracke\nB sicTracker\n© 7 oif if adds song to tracker (FAILED - 1)\n8 def UD4if else if else adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 Oclass init Class definition wit. ith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n@ 14 [}\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1072,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design_chalingeb U @ no- o Do +- 8 & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\npA N Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\nP ; def a ﬂ.ist.::::::d':{tlfrﬁu;: a}l taSK;ty”d:diuithin N\nP N ) given em| string\n[ 5 Oclass init Class definition wit- #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\nspec 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge'\n2 — Failures:\n3 RSpec.describe MusicTracker do FRR TESTS (Tt VAR R O T\n4 Failure/Error: expect(music_tracker.list).to eq [‘Hello - adele’]\n5 music_tracker = MusicTracker.new exoecteg= l:iliello - adele\"]\nH\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = MusicTracker.new PR ——\n12 expect{(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1073,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track) #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1074,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track) #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1075,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\n3 d\n& 4 def add{track} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1076,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\n3 d\n& 4 def add{track} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1077,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1078,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1079,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1080,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track)} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1081,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n(G | ¥ Ot sesonnd | 4 06 i s huberoers U @ wo- @ Den -8 & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track)} #list method will return all tasks added within the array\n#add method will fail if given empty string\nEg’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecm:: [:lllello - adele\"]\ni\n(3 music_tracker.add('Hello - adele') %\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ITES Tl o =T 1 HusicTracl.(fr.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\n' ' > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1082,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n@ .wjﬂ ‘ @ 06_music_design_challenge.rb U X no- & Bwms +- B & x\n> @ 06_music_design_challenge.sd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n& 4 def add{track)} #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 end\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 end add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nU nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1083,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQ'w‘ | @ 08 music_design_challengesh U wo- 8 Bes ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initalize Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd [ TERTa - T 0T g\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n1 add method will fail if music track already exists in array (PENDING: Te\n1: def list mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new exoecteg= l:iliello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpect{music_tracke ist) eq ['Hello dele’] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ music_tracker = HusicTracl.(?r.new ) ) PR ——\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nf sathad atrini o ke added® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1084,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n(| ® Obmesesonndd @ 06 msic desnchalerger U @ no- @ Do+~ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initalize Todo\nh 3 #add method will add task as a string to an array, returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nEg’ 5 ) #remove method will remove the given task from the todo array\n[ d«end\nPd [ TERTa - T 0T g\n© 7 = eq adds song to tracker (FAILED - 1)\n8 = axists adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 =@xists! ith xit)\n10 expect add method will fail if music track already exists in array (PENDING: Te\nrarily ski with xit)\n11 0if elsif else if elsif els mporarily skipped\nmake_snippet method\n12 0if else 3f sls return string if less then 5 words or equal\nb 01if elsif if elsif returns first 5 words of a longer string & appended ellipsis\n1% wnd Dbeg%\" olse ens- E_\"“tw\" hllnc_ Pending: (Failures listed here are expected and do not affect your suite's\nObegin else Exception block with.. status)\nObegin ensure Exception block wi. 1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecm:: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LTES Tl o =T T TS oy f ™ T (=T M T2 Failed -\n12 expect{(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\nG'} A RT: nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1085,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\n(| Obmmcdesonnd | @ 06 sk sesgn habangess U & wo- o Do+ 8 & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\npA def initalize Todo\n?i 3 #add method will add task as a string to an array, returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nEg’ 5 A i #remove method will remove the given task from the todo array\n[ d=end\nPd [ TERTa - T 0T g\n© 7 ~eq adds song to tracker (FAILED - 1)\n8 exists adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 =@xists! ith xit)\n10 expect add method will fail if music track already exists in array (PENDING: Te\nrarily ski with xit)\n11 0if elsif else if elsif els mporarily skipped\nmake_snippet method\n12 0if else 3f sls return string if less then 5 words or equal\nbk 01if elsif if elsif; returns first 5 words of a longer string & appended ellipsis\n1t wnd Dbeg%\" olse ens- E_\"“tw\" hllnc_ Pending: (Failures listed here are expected and do not affect your suite's\nObegin else Exception block with.. status)\nObegin ensure Exception block wi. 1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecm:: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 LTES Tl o =T T TS oy f ™ T (=T M T2 Failed -\n12 expect{(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nA RT: nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1086,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nauwﬁ | @ 08 music_design challengeb U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\npA def initalize Todo\n?i 3 #add method will add task as a string to an array, returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd [ TERTa - T 0T g\n© 7 _ adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nU nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1087,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design_challengeh U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\np3 def initalize Todo\nE 3 #add method will add task as a string to an array, returns string + adde\nd\n4 #list method will return all tasks within the array\n& 14 hod will n ks added within the\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd [ TERTa - T 0T g\n© 7 \" adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 ‘end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nU nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1088,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n N\nQuwt | @ 08 music_design_challengeh U @ no- o Don ++ B & x\n> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\np3 def initalize Todo\n3‘ 3 #add method will add task as a string to an array, returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nag’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd [ TERTa - T 0T g\n© 7 ] adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 ‘end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/0@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\n1A sodlanst # Temporarily skipped with xit\n¢ a v xm # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) @ 06_music_design_chalenge_spec.\n1 require '@6_music_design_challenge\"\n2 ol - FAUTTY\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LLUVES ToliR 4 0-To T (T8 oy g 1ol (T aM [0 expecteg: [:lllello - adele\"]\ni\n6 music_tracker.add('Hello - adele') 9\n7 t ic_tracker.list).to 'Hello - adele' (compared using ==)\nexpec (mus Cc_tracke ist) eq ['Hello dele'] # ./spec/06_music_design_challenge_spec.rb:7:in ‘block (2 levels) in\n8 end <top (required)>'\n]\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 ‘ LTS TR 4 =T ‘= HusicTracl.(?r.new ) ) Failed -\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nU nathad ratirn A acke added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1089,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ'Mpi\\-u.u-w-w:hv- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n) def initalize Todo\n3 3 #add method will add task as a string to an array., returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\nadd method will fail if music track already exists in array (PENDING: Te\n12 def List LTI TR R AT S 1T O R IS R 9\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\nE VAT L TS o 5 € [ R Y T TN S\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal (T 1 TS [VE Rl =Tl (T G ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new exmcteg= l;illello - adele”]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' (compared using ==)\nexpect{music_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\nP d . P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 |\nf s ami o ; ~dded® dn © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1090,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n) def initalize Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 1tkiszt7ethod will return all tracks added (PENDING: Temporarily skipped w\nX\nadd method will fail if music track already exists in array (PENDING: Te\n12 def List mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - FAUTTY T\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new exnecteg= l;illello - adele”]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' (compared using ==)\nexpect{music_tracke ist).to eq ['Hello adele'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\nP d . P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& . nethad o i o ; Added® dn © 0swinp1nto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1091,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ'%g-\\-ou-w-ww- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initalize Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n1 add method will fail if music track already exists in array (PENDING: Te\n12 def st mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1092,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQW“!WU' uwo- & Bos ++ B & x\nb > @ 06_music_design_challenge.rb\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initdfize Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\n:P 4 #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n1 add method will fail if music track already exists in array (PENDING: Te\n12 def st mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\nin\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\n' methad ratirn A 3 added' dn > 0Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1093,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ\"%!'\\'WM\"' uno- 8 Do +- B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n1 add method will fail if music track already exists in array (PENDING: Te\n12 def st mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1094,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n[ *Obmesmnnid @ o6 msicdeson shlerger U & uo- o Den -8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 | initalize it Todo\n3 3 ° | #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{% U methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1095,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 initalize 18 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{% U methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1096,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 initalize 18 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{% U methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1097,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& f s ami o ; dded® dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1098,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& f s ami o ; dded! dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1099,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& f s ami o ; dded! dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1100,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& f s ami o ; dded! dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1101,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n& f s ami o ; dded! dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1102,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n'33&%9-\\-W-Mu- uwo- @ Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\nP 4 - ][ #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n¥ end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1103,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n(| ®Obmesmnnid | @ o6 msiceson halerges U & uo- o Den -8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initialize Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n5 #add method will fail if given empty string\nEF,’ #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nf s ami o ; dded! dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1104,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n@M\" | @ 0t music_design.shallngesh U % uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initialize Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1105,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n@'%g- | @ 0t music_design.shallngesh U % uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n2 def initialize Todo\n3 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n5 #add method will fail if given empty string\nE:C,’ #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1106,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n@'%g- | @ 0t music_design.shallngesh U % uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\ng 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1107,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nan | @ 0t music design.shallrgesh U @ uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n) def initialize Todo\nR 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1108,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nan | @ 0t music design.shallrgesh U @ uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nR 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1109,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\na'%g-‘-wmu- uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nR 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{E} U methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1110,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\na'%g-\\-wmu- uo- o Don +~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\n?i 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n[rravey #add method will fail if given empty string\n= 5 *=MusicTracker #remove method will remove the given task from the todo array\n[ def add(tracl~music_tracker\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\ni‘ﬁ U methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1111,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\na'%g-‘-wmu- uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\n?i 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1112,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n@'%g-‘-wmux uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nk 3 #add method will add task as a string to an array. returns string + adde\nd\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\nailure/Error: expect(music_tracker.list).to eq 0 - e\n4 Failure/E ct(music_tracker.list).t [*Hell adele']\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{9 U methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1113,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\n@\"%!'\\'WMU* uno- 8 Do +- B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nB 2 def initialize Todo\nT #add method will add task as a string to an array. returns string + adde\nk] @tracker = [] d\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nEF,’ 5 #remove method will remove the given task from the todo array\n[}\nP - . MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . \"X ® # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [?llello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nf s ami o ; dded! dn © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1114,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ'%!'\\-Wmu- uwo- & Bo +~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nh 2 def initialize Todo\nT #add method will add task as a string to an array. returns string + adde\nk] @tracker = [] d\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP : MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski with xit)\n1 def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1115,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ng'%!'\\nwmu- uwo- & Bo +~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nh 3 @tracker = 3] #add method will add task as a string to an array. returns string + adde\n- d\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP . MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\n1 def list mporarily skipped with xit)\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{E} U methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1116,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\ng'%!'\\nwmu- uwo- & Bo +~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nh 3 @tracker = 3] #add method will add task as a string to an array. returns string + adde\n- d\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP . MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\n1 def list mporarily skipped with xit)\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{E} U methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1117,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\na'%g-‘-wmu- no- @ Do+ 5 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nh 2 def initialize Todo\n_ #add method will add task as a string to an array. returns string + adde\nk] @tracker = [] d\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nP MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nI[ list method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski with xit)\n1 def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ' P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\nﬁ} 14 [}\nU methad ratirn A - added® dn > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1118,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\na'%g-\\-wmu- uo- o Don +~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nZ‘ 3 @tracker = 3] #add method will add task as a string to an array. returns string + adde\n- d\n& 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\nE:C,’ 5 #remove method will remove the given task from the todo array\n6 def add(track\nP ( ) MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\n1 def list mporarily skipped with xit)\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh sodlan st # Temporarily skipped with xit\n¢ . v 'n # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 ol - AT\n3 RSpec.describe MusicTracker do 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 music_tracker = MusicTracker.new expecmt:: [;lllello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %°\n7 t ic_tri r.list).t 'Hello - le' e Rl\nEXpeG (L c_tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>'\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 | xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n\" ] P Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n12 to tracker\n{9 U methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1119,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ'Mgi‘-mwmu- uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% b JiF dgacialize TO4add method will add task 1 ing + adde\ny method w. task as a string to an array. returns string +\nk] @tracker = [] d\ngP I’ end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\nJiet methar ami o ; ~dded® Ao © 0sWiNPiNto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1120,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ'Mgi‘-mwmu- uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% b JiF dgacialize TO4add method will add task 1 ing + adde\ny method w. task as a string to an array. returns string +\nk] @tracker = [] d\ngP I’ end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\nJiet methar ami o ; ~dded® Ao © 0sWiNPiNto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1121,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ'Mpi\\-wmu- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% b ied JgRcialive TO4add method will add task 1 ing + adde\n2 method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n13 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele’]\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1122,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mpi\\-wmu- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% by Jied Apirislize TO4add method will add task 1 ing + adde\n=2 method w. task as a string to an array. returns string +\n3 @tracker = [] d\n:P 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporartly skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added' dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1123,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQII—MMQF}-MWMU- no- B B+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n5 #add method will fail if given empty string\n55’ #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\n© 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n11 | def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n14 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n:*) B \" xn # ./spec/06_music_design_challenge_spec.rb:22\n0B_music._design_challenos_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectet:: l:iliello - adele\"]\n) i\n[ music_tracker.add('Hello - adele') %\n7 13 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpe fuus c.tracke 1st).to &q ['Hello adele’] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\n) i e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1124,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nh P def initialize Todo\n3 @tracker = [] P #add method will add task as a string to an array. returns string + adde\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\nGl 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n11| def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nboid Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1125,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nh 3 [ @tracker = [] #add method will add task as a string to an array. returns string + adde\n- d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\n1 def list mporarily skipped with xit)\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nboid Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n11 to tracker\n& Jiet methar ami o ; ~dded® Ao © 0sWiNPiNto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1126,
    "text": "(XX} 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n(@ | % Otmsisesgnmay | 4 o6 muicdesshabengest U X no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nh P def initialize Todo hod will add task . .\n= #add method w. task as a string to an array. returns string + adde\n3| @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\nGl 7 adds song to tracker (FAILED - 1)\n8 I[ adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n11 | def list mporarily skipped\n12 make_snippet method\nreturn string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nboid Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1127,
    "text": "(XX} 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n@'Mpi\\-wmux no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n) s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\nmake_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nboid Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i N xn # ./spec/@6_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1128,
    "text": "(XX} 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n(O | % Otmsiesesgnmdy | 4 o6 musicdesshabengest v X no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n5 #add method will fail if given empty string\n55’ #remove method will remove the given task from the todo array\n3 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\nmake_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nboid Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\nJiet methar ami o ; ~dded® Ao © 0sWiNPiNnto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1129,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nan | @ ot music design.shalngesh U @ uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nk 3 @tracker = [] #add method will add task as a string to an array. returns string + adde\n- d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n3 end adding an empty string will fail (PENDING: Temporarily skipped with xit)\n9 list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n10 def list add method will fail if music track already exists in array (PENDING: Te\n1 return @tracker mporarily skipped with xit)\n12 end make_snippet method\nreturn string if less then 5 words or equal\n13 returns first 5 words of a longer string & appended ellipsis\n14 end Pending: (Failures listed here are expected and do not affect your suite's\nHEND)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\n11 to tracker\n& ‘Jict methad o ’ ~dded® Ao © 0SwWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1130,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nan | @ ot music design.shalngesh U @ uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd ? MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n3 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\nmake_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n1 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i N xn # ./spec/@6_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1131,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mpi\\-wmv- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd g MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\nmake_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n1 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1132,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mpi\\-wmv- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\nmake_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n1 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1133,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\nmake_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n1 Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1134,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n| make_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nbt Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1135,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\n% s jued Tnirislize TO4add method will add task 1 ing + adde\n= method w. task as a string to an array. returns string +\n3 @tracker = [] d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n| make_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nbt Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1136,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mp:\\-mwmu- no- @ Oen +~ 5 8§ x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nE P def initialize Todo\n3 @tracker = [] P #add method will add task as a string to an array. returns string + adde\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 | def add(track)\nPd | MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n| make_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n1, Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1137,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mpi\\-wmv- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nP def initialize Todo\nh 3 @tracker = [] #add method will add task as a string to an array. returns string + adde\n- d\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 | def add(track)\n-4 | ] MusicTracker\ni 7 atrag adds song to tracker (FAILED - 1)\n8 =track adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n] end tracker ith xit)\n10 = tracks add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n11 def list |=Track . Y skipped\n| make_snippet method\n12 retl «MusicTracker return string if less then 5 words or equal\n13 end =music_tracker returns first 5 words of a longer string & appended ellipsis\n1, Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1138,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mpi\\-wmv- no- B Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nE P def initialize Todo\n3 @tracker = [] P #add method will add task as a string to an array. returns string + adde\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 | def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n| make_snippet method\n12 retura @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\n1, Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 il - FAUTTY T H\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpectimusic_tracker.list).to eq ['Hello - adsle'] # ./spec/@6_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1139,
    "text": "oee® 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\nQ'Mgi‘-mwmu- uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nE P def initialize Todo\n3 @tracker = [] P #add method will add task as a string to an array. returns string + adde\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 | def add(track)\nP4 o ey MusicTracker\n° 7 tracke rack adds song to tracker (FAILED - 1)\n8 = track adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end =tracker ith xit)\n10 = tracks add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n11 def list = Track e Y skipped\n| make_snippet method\n12 retyra @tracqu =MusicTracker return string if less then 5 words or equal\n13 end =music_tracker returns first 5 words of a longer string & appended ellipsis\n1| Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n3 [ > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1140,
    "text": "(XX} 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\n@'Mgi\\-mwmux no- B Don +~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nE P def initialize Todo hod will add task . .\n#add method w. task as a string to an array. returns string + adde\n3 @tracker = [] d \" o e \"\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 | def add(track)\nPd MusicTracker\nGl 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 PISETY: mporarily skipped\n| make_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nbt Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\nj[ 1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i \" xn # ./spec/06_music_design_challenge_spec.rb:22\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge'\n2 = Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LUTES (ol { o T TR | TS Lot g g™ Tt {-T g [0 expectetti: [:tliello - adele\")\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1141,
    "text": "(XX} 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\n@'Mgi‘-mwmux uo- o Do+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker returns a interger the percentage of text checked so far that passed\nZ‘ P def initialize Todo\n3 | @tracker = [] P #add method will add task as a string to an array. returns string + adde\ngP 4 end #list method will return all tasks added within the array\n#add method will fail if given empty string\n55’ 5 #remove method will remove the given task from the todo array\n6 | def add(track)\nPd MusicTracker\ni 7 adds song to tracker (FAILED - 1)\n8 adding an empty string will fail (PENDING: Temporarily skipped with xit)\nlist method will return all tracks added (PENDING: Temporarily skipped w\n9 end ith xit)\n10 add method will fail if music track already exists in array (PENDING: Te\nrarily ski, with xit)\n1 def list mporarily skipped\n| make_snippet method\n12 return @tracker return string if less then 5 words or equal\n13 end returns first 5 words of a longer string & appended ellipsis\nbt Pending: (Failures listed here are expected and do not affect your suite's\n15 end status)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:10\nARG ITES T g - T TR B R T T I R ST B Y R R O TR\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\n3) MusicTracker add method will fail if music track already exists in ar\nray\noh solan st # Temporarily skipped with xit\n¢ i N xn # ./spec/@6_music_design_challenge_spec.rb:22\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge' I[\n2 Failures:\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) 1) MusicTracker adds song to tracker\n4 Failure/Error: expect(music_tracker.list).to eq ['Hello - adele']\n5 LTS ol - T LR 703 Lot = Toy (=T [ expectetti= l:fliello - adele\"]\ni\n[ music_tracker.add('Hello - adele') %\n7 11 ic_tr r.list).t 'Hello - le' (compared using ==)\nexpes {mus ¢ tracke ist).to eq ['Hello adele'] # ./spec/06_music_design_challenge_spec.rb:7:in “block (2 levels) in\n8 end <top (required)>*\n9\nFinished in 0.01609 seconds (files took 0.12653 seconds to load)\n10 xit 'adding an empty string will fail' do 12 examples, 1 failure, 3 pending\n11 music_tracker = MusicTracker.new\ni e . . Failed examples:\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n@ 13 end rspec ./spec/@6_music_design_challenge_spec.rb:4 # MusicTracker adds song\nto tracker\n& 14 '\n*1ist methad ratirn A - added® dn > 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1142,
    "text": "(X X ) 06_music_design_challenge.rb — Skill_Challenges In=Nn Rl\n(O | Otmie smignmay | @ 08 e des.shalerges U X uo- B Deon +- B & x\np w7 -1 class MusicTracker [ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I '\n% 2 | def initialize\n\n3 | | @tracker = []\n& 4 end\n. r\n\n6 def add(track)\n? i\n\n8\n\n] end\n\n10\n\n11 def list\n\n12 | return @tracker\n\n13 end\n\n14\n\n15 end\n\n@ 06_music_design.challenge_specsd U X I[\nspec > @ 06_music_design_challenge_spec.l\n\n1 require '@6_music_design_challenge' y\n\n2\n\n3 RSpec.describe MusicTracker do F\n\n4\n\n5 LTS ol - T LR 703 Lot = Toy (=T [\n\n6 music_tracker.add('Hello - adele')\n\nk4 expect(music_tracker.list).to eq ['Hello - adele']\n\n8 end\n\n9\n\n10 xit 'adding an empty string will fail' do\n\n11 music_tracker = MusicTracker.new\n\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® k3 end\n@ 14 .+ N o had ra rn A o .._;. An\n"
  },
  {
    "seconds": 1143,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n(O | % Otmsisesgnmdy | 4 o6 msicdesgshabengest v X uo- o Bnty ++ B § x\nB> @ 06_music_design_challenge.rd I\np 1 class MusicTracker « 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nk P def initialize GrammarStats\n= #check returns true or false if string starts with capital and ends with\n3 | [T G [l [y Ta T ladT: S 1))\nP 4 end B returns a interger the percentage of text checked so far that passed\ngo L | Todo\n[ def add(track) #add method will add task as a string to an array. returns string + adde\nPd d\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 L ESTa g g T 21g\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nL oa.):-:ammuhnmu x . # ./spec/06_music_design_challenge_spec.rb:15\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge' b 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker\n5 music_tracker = MusicTracker.new Finished in 0.00454 seconds (files took 9.12688 seconds to load)\n- 12 examples, ® fail 3 pendi\n6 music_tracker.add('Hello - adele') ples, © Tailures, 3 pending .\n7 expect(music_tracker.list).to eq ['Hello - adele'l = 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & I\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1144,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n@'%pi‘amwmux uo- o Bl ++ B & x\nB> @ 06_music_design_challenge.rd I\np 1 class MusicTracker « 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nR s jued Tnirislize Gr}\\ek ' false if 4 with ital and ends with\n= #check returns true or false if string starts with capital and ends wit\n3 | [T G [l [y Ta T ladT: S 1))\nP 4 end B returns a interger the percentage of text checked so far that passed\ngo L | Todo\n- [ def add(track) s #add method will add task as a string to an array. returns string + adde\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end Eay= O T T IR R =TT o T AT R - £ B )T s R T VY\n10 L ESTa g g T 21g\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nL oa.):-:ammuhnmu x . # ./spec/06_music_design_challenge_spec.rb:15\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge' b 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker\n5 music_tracker = MusicTracker.new Enishedl:n 060?42: secongs (ﬁ}.es took 9.12688 seconds to load)\nexamples allures\n6 music_tracker.add('Hello - adele') ples, r 3 pending .\n7 expect(music_tracker.list).to eq ['Hello - adele'l = 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & I\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.u;. an\n"
  },
  {
    "seconds": 1145,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n@'%91\\-mwmux uwo- @ [DE = I\nB> @ 06_music_design_challenge.rd l\np 1 class MusicTracker « 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nk P def initialize GrammarStats\n= #check returns true or false if string starts with capital and ends with\n3 | [T G [l [y Ta T ladT: S 1))\nP 4 end b returns a interger the percentage of text checked so far that passed\ngo 5 | Todo\n[ def add(track) s #add method will add task as a string to an array. returns string + adde\nP4\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end Eay= O T T IR R =TT o T AT R - £ B )T s R T VY\n10 L ESTa g g T 21g\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/®6_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n@ 06_music_design.challenge_specsd U X # ./spec/os_music_deslgn_:hallenqz_spec.rb:15\n508C) W 0BLMusic_desion_challenge,_spec.b\n1 require '@6_music_design_challenge' b 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker\n) LTES TR 4 r = MusicTracker.new Finished in 0.00454 seconds (files took 0.12688 seconds to load)\nusic_trac 12 les, © fail 3 pendi\nexamples allures\n6 music_tracker.add('Hello - adele') ples, r 3 pending .\n7 expect(music_tracker.list).to eq ['Hello - adele'l = 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & I\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1146,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n(0 | % Otmsisesgnmay | 4 o6 e desshabengest v X no- @ Beh ++ 5 8§ x\nB> @ 06_music_design_challenge.rd l\np 1 class MusicTracker « 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nk P def initialize GrammarStats\n= #check returns true or false if string starts with capital and ends with\n3 | [T G [l [y Ta T ladT: S 1))\nP 4 end b returns a interger the percentage of text checked so far that passed\ngo 5 | Todo\n[ def add(track) #add method will add task as a string to an array. returns string + adde\nPd d\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end Eay= O T T IR R =TT o T AT R - £ B )T s R T VY\n10 L ESTa g g T 21g\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite’s\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) HusicTrac% list method will return all tracks added\n# Temporarily skipped with xit\nﬂoa.)n:ammuhnmu x . # ./spec/06_music_design_challenge_spec.rb:15\n508C) W 0BLMusic_desin_chalenge,_spec.\n1 require '@6_music_design_challenge' b 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker\n5 LS T 30 To T V18 Ta g Tt (TR [0 Finished in 0.08454 seconds (files took 9.12688 seconds to load)\n- 12 examples, ® fail 3 pendi\n6 music_tracker.add('Hello - adele') ples, © Tailures, 3 pending .\n7 expect(music_tracker.list).to eq ['Hello - adele'l = 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & I\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1147,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n(0 | % Otmsisesgnmay | 4 o6 e desshabengest v X no- @ Beh ++ 5 8§ x\nB> @ 06_music_design_challenge.rd l\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nh s jued Tnirislize Grhek N false if 4 with ital and ends with\n= #check returns true or false if string starts with capital and ends wit\n3 | [T G [l correct punctuation\nP 4 end L returns a interger the percentage of text checked so far that passed\n8 5 Todo\n[ 3 def add(track) #add method will add task as a string to an array. returns string + adde\n-4 d\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nEU R IO - Te (T\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end LEO T\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAN TES TG g Td -1y liﬂpmhod will return all tracks added\n# Temporarily skxpped with xit\nﬂoa.)n:ammuhnmu x . # ./spec/06_music_design_challenge_spec.rb:15\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge' b 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker\n5 LS T 30 To T V18 Ta g Tt (TR [0 Finished in 0.00454 seconds (files took 9.12688 seconds to load)\n» 12 examples, 0 fail ERT B\n6 music_tracker.add('Hello - adele') ples, © tailures, 3 pending .\nb expect(music_tracker.list).to eq ['Hello - adele'] - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & I\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1148,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n(0 | % Otmsisesgnmay | 4 o6 e desshabengest v X no- @ Beh ++ 5 8§ x\nB> @ 06_music_design_challenge.rd l\np 1 class MusicTracker | * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nh P def initialize GrammarStats\n= #check returns true or false if string starts with capital and ends with\nE | @tracker = 8] correct punctuation\nP 4 end | 58 returns a interger the percentage of text checked so far that passed\n8 5 Todo\n[ 3 def add(track) #add method will add task as a string to an array. returns string + adde\n-4 d\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nEUERE T IR T (T\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nL oa.)n:nmmdhnm\" % N # ./spec/06_music_design_challenge_spec.rb:15\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge' X b 3) MusicTracker add method will fail if music track already exists in ar\nray\n2 (] # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker\n5 LS T 30 To T V18 Ta g Tt (TR [0 ‘ Finished in 0.00454 seconds (files took 9.12688 seconds to load)\n» 12 exampl 9 fail ERT L B\n6 music_tracker.add('Hello - adele') ples, © Tailures, 3 pending .\nb expect(music_tracker.list).to eq ['Hello - adele'] 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & [l\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1149,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n@'%pi‘amwmux uo- o B+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker | * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nh P def initialize GrammarStats\n= #check returns true or false if string starts with capital and ends with\nE | @tracker = 8] correct punctuation\nP 4 end | 58 returns a interger the percentage of text checked so far that passed\n8 5 Todo\n[ 3 def add(track) #add method will add task as a string to an array. returns string + adde\n-4 d\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nEUERE T IR T (T\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAN TES TG - T TR S TS T 1T A R R B 7 T B T R T T T\n# Temporarily skipped with xit\nL oa.)n:nmmdhnm\" % N # ./spec/06_music_design_challenge_spec.rb:15\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge' X 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker® \\\n5 LS T 30 To T V18 Ta g Tt (TR [0 Finished in 0.00454 seconds (files took 9.12688 seconds to load)\n» 12 exampl 9 fail ERT L B\n6 music_tracker.add('Hello - adele') ples, © Tailures, 3 pending .\nb expect(music_tracker.list).to eq ['Hello - adele'] 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & [l\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1150,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges = fH\n@'%pi‘amwmux uo- o B+~ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker | * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nh P def initialize GrammarStats\n= #check returns true or false if string starts with capital and ends with\nE | @tracker = 8] correct punctuation\nP 4 end | 58 returns a interger the percentage of text checked so far that passed\n8 5 Todo\n[ 3 def add(track) #add method will add task as a string to an array. returns string + adde\n-4 d\n© 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nEUERE T IR T (T\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAN TES TG - T TR S TS T 1T A R R B 7 T B T R T T T\n# Temporarily skipped with xit\nL oa.)n:nmmdhnm\" % N # ./spec/06_music_design_challenge_spec.rb:15\n5p6c) W 06Music_design_challenge, Spec.\n1 require '@6_music_design_challenge' X 3) MusicTracker add method will fail if music track already exists in ar\nray\nz # Temporarily skipped with xit\nR Y T-Tal Xl o U T (V15 Rl =T Tl ) # ./spec/06_music_design_challenge_spec.rb:22\n4 : dds song to tracker® \\\n5 LS T 30 To T V18 Ta g Tt (TR [0 Finished in 0.00454 seconds (files took 9.12688 seconds to load)\n» 12 exampl 9 fail ERT L B\n6 music_tracker.add('Hello - adele') ples, © Tailures, 3 pending .\nb expect(music_tracker.list).to eq ['Hello - adele'] 2 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges & [l\n;] end\n9\n10 xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 '.;;. an\n"
  },
  {
    "seconds": 1151,
    "text": "[ X N ] 06_music_design_challenge.rb — Skill_Challenges = fH\ni8] ¥ 06 music_sesignmd U | @ 06_musle_design_challingeh u % uwo- @ D+ B & x\nB> @ 06_music_design_challenge.rd\nfel 1 class MusicTracker * 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nh 2 def initialize Gra-h:rsmk s fatse if strd Vith conital and ends with\n_ #check returns true or false if string starts with capital and ends wit\nE @tracker = [] correct punctuation\n:P 4 end - returns a interger the percentage of text checked so far that passed\ng 5 Todo\n[ def add(track) #add method will add task as a string to an array. returns string + adde\nPd ]\n° 7 #Uist method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker ;.tst Tethod will return all tracks added (PENDING: Temporarily skipped w\nith xit\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR TES (e T TR R ES T T R R AT B RO TR T\noa goakinsh \" # Temporarily skipped with xit\n:‘) - N xn # ./spec/06_music_design_challenge_spec.rb:15\n0B_music._design_challenos_spec.\n1 require '@6_music_design_challenge' 3) MusicTracker add method will fail if music track already exists in ar\nray\n2 # Temporarily skipped with xit\nIR Y T-Tal X ol o U T (V15 Rl =T (Tl ) # ./spec/@6_music_design_challenge_spec.rb:22\n4 .\n5 LUES ol - T T e 705 Loy = Tod (=T S Finished in 0.02454 seconds (files took 9.12688 seconds to load)\n6 nusic_tracker.add('Hello — adele') 12 examples, © fatlures, 3 pending |\n7 expect(music_tracker.list).to eq ['Hello - adele'] 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill Challenges & Il\n;] end I[\n9\n10 - xit 'adding an empty string will fail' do\n11 music_tracker = MusicTracker.new\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n® 13 end\n14\n@ + S me alals o) rn 2 2 'nl:n a0\n"
  },
  {
    "seconds": 1152,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n0 N @ Ol shalengect u xt uo- 8 Don ++ B & x\n06_music_design.challenge.rb\nfel * -1 class MusicTracker * 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\n3 P def initialize Gra-nh;rstatk s fatse if strd Vith conital and ends with\n_ #check returns true or false if string starts with capital and ends wit\n3 @tracker = 1 correct punctuation\né} 4 end L returns a interger the percentage of text checked so far that passed\ng° 5 Todo\n[ def add(track) #add method will add task as a string to an array. returns string + adde\nPd ]\n° 7 #Llist method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker ;lst Tethod will return all tracks added (PENDING: Temporarily skipped w\nith xit\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n::“)\": s ssansholingaapecss ¢ % . # ./spec/06_nusic_design_challenge_spec.rb:15\n5 | \" music-tracker = MusicTracker.new 3) MusicTracker add method will fail if music track already exists in ar\n- 2 r\n6 music_tracker.add('Hello - adele') i # Temporarily skipped with xit\n7 expect{music_tracker.list).to eq ['Hello - adele'] # ./spec/06_music_design_challenge_spec.rb:22\n8 end\n9 [ Finished in 0.00454 seconds (files took 9.12688 seconds to load)\n12 examples, ® failures, 3 pending\n19 xit 'adding an empty string will fail' do .\n1 music_tracker = MusicTracker.new 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [l\n12 expect(rlusic_tracker.add('z)).to raise_error 'You cannot input an empty string as a track’\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n(&) 17 P TES o - To T TR AR T 1 1)\n& 18 nusic_tracker.add ('lie - nf')\n0 ~ ~ ™ - - ~ n_an (Y¥P - Aol [} ne | . -\n"
  },
  {
    "seconds": 1153,
    "text": "AV =T\n[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n[ N @ Otmusiocragr chalenget d uo- 8 Don ++ B & x\n\nB> @ 06_music_design_challenge.rd '\nfel 1 class MusicTracker * oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n3 P def initialize Gr_h:mk s fatse if strd vith canital and ends with\n_ #check returns true or false if string starts with capital and ends wit\n3 @tracker = 1 correct punctuation\né} 4 end L returns a interger the percentage of text checked so far that passed\ng° 5 Todo\n- [ def add(track) P #add method will add task as a string to an array. returns string + adde\n© 7 @tracker << track #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list 7ethod will return all tracks added (PENDING: Temporarily skipped w\nith xit\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 | mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR TES Ua f T TR B TS T T A R R AT B R R ST TR T T\n# Temporarily skipped with xit\n::“)\": s ssansholingaapecss ¢ % . # ./spec/06_nusic_design_challenge_spec.rb:15\n5 \" music-tracker = MusicTracker.new 3) MusicTracker add method will fail if music track already exists in ar\n- 2 \"\n6 LTS R T CT L L T AR T [ A i # Temporarily skipped with xit\n7 expect(music_tracker.list).to eq ['Hello - adele'] # ./spec/@6_music_design_challenge_spec.rb:22\n8 end\n9 Finished in 9.00454 seconds (files took 9.12688 seconds to load)\n12 examples, ® failures, 3 pending\n19 x]lt 'adding an empty string will fail' do '\n1 music_tracker = MusicTracker.new - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track‘\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 LS R - To IR TR o Tol (T Y\n(&) 17 FITES o - To TN TR AR R T T L)\n& 18 music_tracker.add ('lie - nf')\n1 1\n"
  },
  {
    "seconds": 1154,
    "text": "# . . Y\n[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn JE\n() |1 Otms gty | @ 06 muskc s shallergest U X - a8 Do +- B & x\nB> @ 06_music_design_challenge.rd\nfel 1 class MusicTracker * oswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nE P def initialize Gr_h:mk s fatse if strd vith canital and ends with\n_ #check returns true or false if string starts with capital and ends wit\n3 [T S 1 correct punctuation\nP 4 end L returns a interger the percentage of text checked so far that passed\ng° 5 Todo\n[ def add(track) #add method will add task as a string to an array. returns string + adde\nPd ]\n° 7 #List method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker list 7ethod will return all tracks added (PENDING: Temporarily skipped w\nith xit\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\nAR TES Ua f T TR B TS T T A R R AT B R R ST TR T T\n# Temporarily skipped with xit\n:l\"‘)':' ssmeancholangaipecso ! # . wa # ./spec/06_nusic_design_challenge_spec.rb:15\n0B_Music. design. chatenps_spec.|\n5 | music-tracker = MusicTracker.new 3) MusicTracker add method will fail if music track already exists in ar\n— 2 r\n6 LTS TR o - T ML L TR YR TR T [ A i # Temporarily skipped with xit\n7 expect(music_tracker.list).to eq ['Hello - adele'] # ./spec/@6_music_design_challenge_spec.rbi22\n8 end\n9 Finished in 0.00454 seconds (files took 9.12688 seconds to load)\nR— - - 12 examples, ® failures, 3 pending\n10 it ‘adding an emwpty string will fail ,\n1 music_tracker = MusicTracker.new -~ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track‘\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n® 17 FITES o - To TN TR AR R T T L)\n& 18 music_tracker.add ('lie - nf')\n1 1\n"
  },
  {
    "seconds": 1155,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn JE\n@'mp:\\-mwmux -\\ Deon +- 8 & x\nB> @ 06_music_design_challenge.rd\nfel 1 class MusicTracker * 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nE 2 | Je7 Afi1risiize Gra-h:rita’ts false if 1 with ital and ends with\n_ #check returns true or false if string starts with capital and ends wit\n3 [T S 1 correct punctuation\nP 4 | end L returns a interger the percentage of text checked so far that passed\ng° 5 Todo\n[ def add(track) #add method will add task as a string to an array. returns string + adde\n4 d\n° 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 end #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker Uist method will return all tracks added (PENDING: Temporarily skipped w\nith xit)\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n'““)':' ssmeansholncaapecss U 'n wa # ./spec/06_nusic_design_challenge_spec.rb:15\n506C) @ 06_Music, design_chaenge_spec.\n5 music-tracker = MusicTracker.new 3) MusicTracker add method will fail if music track already exists in ar\no ray\n6 music_tracker.add('Hello - adele') # Temporarily skipped with xit\n7 [ expect{music_tracker.list).to eq ['Hello - adele'l] # ./spec/@6_music_design_challenge_spec.rb:22\n8 end\n9 Finished in 9.00454 seconds (files took 9.12688 seconds to load)\n10 e o o AT — o 12 examples, ® failures, 3 pending\nit 'adding an empty string will fail\nC ] 3 wil 1\n1 music_tracker = MusicTracker.new -~ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n12 expect(music_tracker.add('\")).to raise_error 'You cannot input an empty string as a track’\n13 end i\n14\n15 xit 'list method will return all tracks added' do\n16 LVES Ui o - T (T G TS Tt f o~ Ted O-T M\n® 17 LTS o =Tl TN TR Y R T [ TR )\n& 18 music_tracker.add ('lie - nf')\n0 A - - - ~ o.n LE¥ P ~ adalAal 1 nf !\n"
  },
  {
    "seconds": 1156,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n() Ofmsicssgnmay @ 06 musc desinhalergest U X - Bor+-8 8 x\nWb > @ 06_music. desian_challenge.rb 1 '\np 1 class MusicTracker * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n% 2 | def initialize GrammarStats\n_ #check returns true or false if string starts with capital and ends with\nE @tracker = [] [l Ja gl Tad: e )]\nP 4 | end L returns a interger the percentage of text checked so far that passed\ng° 5 Todo\n- [ def add(track) P #add method will add task as a string to an array. returns string + adde\n° 7 #list method will return all tasks added within the array\n8 #add method will fail if given empty string\n9 . #remove method will remove the given task from the todo array\n10 MusicTracker\nadds song to tracker\n11 def list adding an empty string will fail (PENDING: Temporarily skipped with xit)\n12 return @tracker “rl;l)s(;t?ethod will return all tracks added (PENDING: Temporarily skipped w\n13 end add method will fail if music track already exists in array (PENDING: Te\n14 mporarily skipped with xit)\n15 end make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's\nstatus)\n1) MusicTracker adding an empty string will fail\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:10\n2) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n'““)':' ssmeansholncaapecss U 'n wa # ./spec/06_nusic_design_challenge_spec.rb:15\n56C) @ 06_Music, design_chaenge_spec.\n5 ’ music_tracker = MusicTracker.new ra-::) MusicTracker add method will fail if music track already exists in ar\n6 music_tracker.add('Hello - adele') # Temporarily skipped with xit\n7 expect(music_tracker.list).to eq ['Hello - adele'l # ./spec/@6_music_design_challenge_spec.rb:22\n-] [0\n9 Finished in 9.00454 seconds (files took 9.12688 seconds to load)\n10 — - — - 12 examples, ® failures, 3 pending\n: m T e 1\n11 music_tracker = MusicTracker.new I - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspecl\n12 expect(music_tracker.add('\")).to raise_error 'You cannot input an empty string as a track'\n13 end\n14\n15 xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n® 17 music_tracker.add('Hello - adele')\n& 18 music_tracker.add ('lie - nf')\n0 ~ - -— ~ ~ 1 ~ - -l ~1 1 - 1\n"
  },
  {
    "seconds": 1157,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n@'mp: | @ 08 musc.sesign shallngeb U % -\\ Glnby ++ 5 & x\ne Pending: (Fail listed he cted and do not affect ite's '\nng: (Failures lis re are expe affect your suite's\nP 1 class MusicTracker status)\n% 2 | def initialize\n_ 1) MusicTracker adding an empty string will fail\n3 @tracker = [] # Temporarily skipped with xit\nP 4 | end [ # ./spec/06_music_design_challenge_spec.rb:10\ng 5 2) MusicTracker list method will return all tracks added\n[ def add(track) # Temporarily skipped with xit\nQ 7 # ./spec/06_music_design_challenge_spec.rb:15\n8 3) MusicTracker add method will fail if music track already exists in ar\nray\n9 end # Temporarily skipped with xit\n10 # ./spec/@6_music_design_challenge_spec.rb:22\n11 def list\nFinished in ©.00454 seconds (files took 0.12688 seconds to load)\ni; d return @tracker 12 .examples, @ failures, 3 pending\n(=]\n14 > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n15 end GrammarStats\n#check returns true or false if string starts with capital and ends with\ncorrect punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + adde\nd\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\noh solan st .. MusicTracker\n¢ v na adds song to tracker\n®9c) @ ORIMOUCHDILLIMIINILADE:. 1D adding an empty string will fail (FAILED - 1)\n5 ’ music tracker = MusicTracker.new list method will return all tracks added (PENDING: Temporarily skipped w\n- ith xit)\n[3 music_tracker.add('Hello - adele') add method will fail if music track already exists in array (PENDING: Te\n7 expect(music_tracker.list).to eq ['Hello - adele'l mporarily skipped with xit)\n8 end make_shippet method\n] return string if less then 5 words or equal\n10 retures First 5 wares of @ fomer strit € sppenaes <\nt 'adding an empty string will fail\n11 music_tracker = MusicTracker.new Pending: (Failures listed here are expected and do not affect your suite's\n= 2 R\n12 ‘ expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track' I\n13 end PR ITES Ta - T T R R T3 < IR RS TR R O T 3\n# Temporarily skipped with xit\n14 | # ./spec/86_music_design_challenge_spec.rb:15\n15 xit 'list method will return all tracks added\" do 2) MusicTracker add method will fail if music track already exists in ar\n16 LTS Tl 4 - T T (715 Col f o= 1o (Y g (10 ray ‘1 - 'dth By\nemporarily skip xit\n@ 17 l“‘51‘:—'r'a‘:ke\"\"add('“eu\" - adele') # ./spec/06_music_design_challenge_spec.rb:22\n& 18 LTS TR - T T R S TR ) 1\n0 A . m— koo o 10017 0 adalal 1 Nl \"\n"
  },
  {
    "seconds": 1158,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n[ RS @ otmuldesgnshalegedt U X - B Blon +~ B & x\nv addi ty string will fail tFAXLED — 1) '\nng an empty string ) -\nR 1 class MusicTracker ist method will return all tracks added (PENDING: Temporarily skipped w\n% 2 | def initialize ith xit)\n_ add method will fail if music track already exists in array (PENDING: Te\n3 @tracker = [] mporarily skipped with xit) ~\n& 4 end - e\n5 | make_snippet method\n55’ return string it less then 5 words or equal\n[ def add(track) returns first 5 words of a longer string & appended ellipsis\nP\n© 7 Pending: (Failures listed here are expected and do not affect your suite's\n8 status)\n9 end 1) MusicTracker list method will return all tracks added\n10 # Temporarily skipped with xit\n# ./spec/06_music_des challenge_spec.rb:15\n1 def list pec/ioN fan_chatlenge_spe\n12 return @tracker 2) MusicTracker add method will fail if music track already exists in ar\nray\nbk} end # Temporarily skipped with xit\n14 | # ./spec/06_music_design_challenge_spec.rb:22\n15 end .\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cann\not ipput an empty string as a track’\nexpected Exception with \"You taonut. input an ewpty string as a trac\nk\" but was not given a block\n# . /spec/@b_music_design_challenge_spec.rb:12:in “block (2 levels) ih\n<top (reguired)>'\nDeprecation Warnings:\n& SRampesndanSolarpaserio o 8 %0 The tmplicit block expectation syntax is deprecated, you should pass & blo\n®6c) @ GomOsCSeein challenge_spec. D ck rather than an argument to ‘expect’ to use the provided block expectati\n| music t r= Tr r.onew on matcher or the matcher must implement °supports_value_expectations?”, e\n5 usic_tracke Hufic acke e . +g ‘expect { value }.to raise Exception with \"You cannot input an empty s\n[ music_tracker.add('Hello - adele') tring as a track™ not ‘expect(value).to raise Exception with \"You cannot\n7 expect(music_tracker.list).to eq ['Hello - adele'l input an empty string as a track® I\n8 end\n] If you need more of the backtrace for any of these deprecations to\n—— — — — identify where to make the necessary changes, you can configure\n10 “contig. raise_errors_for_deprecations!, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 ‘ expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track' 1 deprecation warning total\n13 end Finished in 0.0198 seconds (files took 0.12722-seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 LIRS TR S-To TR, TS Ty g Tol TR Jspec/o6 music desion chal 010 # MusicTracker add\n@ 17 nusic_tracker.add( 'Hello - adele') r;p::y.s:ﬁng wﬂ:sf;?l. sign_cl enge_spec. rb: usicTracker ng an\n& bt} music_tracker.add ('lie - nf')\n- T I s eral  il4a el © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1159,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n[ RS @ otmuldesgnshalegedt U X - B Blon +~ B & x\nv addi ty string will fail tFAXLED — 1) '\nng an empty string ) -\nR 1 class MusicTracker ist method will return all tracks added (PENDING: Temporarily skipped w\n% 2 | def initialize ith xit)\n_ add method will fail if music track already exists in array (PENDING: Te\n3 @tracker = [] mporarily skipped with xit) ~\n& 4 end - e\n| make_snippet method\n55’ 5 return string it less then 5 words or equal\n[ def add(track) returns first 5 words of a longer string & appended ellipsis\nP\n© 7 Pending: (Failures listed here are expected and do not affect your suite's\n8 status)\n9 end 1) MusicTracker list method will return all tracks added\n10 # Temporarily skipped with xit\n# ./spec/06_music_des challenge_spec.rb:15\n1 def list pec/ioN fan_chatlenge_spe\n12 return @tracker 2) MusicTracker add method will fail if music track already exists in ar\nray\nbk} end # Temporarily skipped with xit\n14 | # ./spec/06_music_design_challenge_spec.rb:22\n15 end .\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cann\not ipput an empty string as a track’\nexpected Exception with \"You taonut. input an ewpty string as a trac\nk\" but was not given a block\n# . /spec/@b_music_design_challenge_spec.rb:12:in “block (2 levels) ih\n<top (reguired)>'\nDeprecation Warnings:\n& SRampesndanSolarpaserio o 8 %0 The tmplicit block expectation syntax is deprecated, you should pass & blo\n®6c) @ GomOsCSeein challenge_spec. D ck rather than an argument to ‘expect’ to use the provided block expectati\n| music t r= Tr r.onew matcher or the matcher must implement ‘supports_value_expectations?*, e\n5 usic_tracke Hufic acke e . Ifg “expect { value }.to raise Exception with \"You cannot input an empty s\n[ music_tracker.add('Hello - adele') tring as a track™ not ‘expect(value).to raise Exception with \"You cannot\n7 expect(music_tracker.list).to eq ['Hello - adele'l input an empty string as a track®\n8 end\n] PRI T T N R T TN T T B ¢ LT YT T 1 @ D L )\n—— — — — identify where to make the necessary changes, you can configure\n10 “contig. raise_errors_for_deprecations!, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track' 1 deprecation warning total\n13 end Finished in 0.0198 seconds (files took 0.12722-seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 LIRS TR S-To TR, TS Ty g Tol TR Jspec/o6 music desion chal 010 # MusicTracker add\n@ 17 nusic_tracker.add( 'Hello - adele') r;p::y.s:ﬁng wﬂ:sf;?l. sign_cl enge_spec. rb: usicTracker ng an\n& bt} music_tracker.add ('lie - nf')\n- T I s eral  il4a el © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ406L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1160,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n[ RS @ otmuldesgnshalegedt U X - B Blon +~ B & x\nv addi ty string will fail (FAILED — 1) '\ning an empty string ) -\nR 1 class MusicTracker list method will return all tracks added (PENDING: Temporarily skipped w\n% 2 | def initialize ith xit)\n_ add method will fail if music track already exists in array (PENDING: Te\nE @tracker = [] mporarily skipped with xit)\n& 4 end r\n5 | make_snippet method\n55’ return string if less then 5 words or equal\n[ def add(track) returns first 5 words of a longer string & appended ellipsis\nP\n© 7 Pending: (Failures listed here are expected and do not affect your suite's\n8 status)\n9 end 1) MusicTracker list method will return all tracks added\n10 # Temporarily skipped with xit\n# ./spec/06_music_des challenge_spec.rb:15\n1 def list pec/ibm ian_chatlenge_spe\n12 return @tracker 2) MusicTracker add method will fail if music track already exists in ar\nray\nbk} end # Temporarily skipped with xit\n14 | # ./spec/06_music_design_challenge_spec.rb:22\n15 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error ‘You cann\not input an empty string as a track’\nexpected Exception with \"You cannet. input an ewpty string as a trac\nk\" but was not given a block\n# ./spec/@6_music_design_challenge_spec.rb:12:in “block (2 levels) ih\n<top (required)>'\nDeprecation Warnings:\n& ShampesndanSolarpaserso o i %0 The implicit block expectation syntax is deprecated, you should pass a blo\nWec) @ 05muskc_design_chasnge_spec. b ck rather than an argument to ‘expect’ to use the provided block expectati\n| music_t r= Tr: r.new on matcher or the matcher must implement ‘supports_value_expectations?”, e\n9 usic_tracke Mufic acke g . <:[]:>.° “expect { value }.to raise Exception with \"You cannot input an empty s\n[ music_tracker.add('Hello - adele') ‘tring as a track\"' not ‘expect(value).to raise Exception with \"You cannot\n7 expect(music_tracker.list).to eq ['Hello - adele'l input an eapty string as a track®\n8 end\n[ If you need more of the backtrace for any of these deprecations to\n—— BEEEEENEm———., identify where to make the necessary changes, you can configure\n10 “config. raise_errors_for_deprecations!', and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 ‘ expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track' 1 deprecation warning total\n13 end Finished in 0.0198 seconds (files took .12722 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 LIRS TR S-To TR, TS Ty g Tol TR Jspec/o6 music desion chatl 010 # MusicTracker add\n@ 17 nusic_tracker.add( 'Hello - adele') r;p::y.s:ﬁng wﬂ:sf;h sign_cl enge_spec.rb: usicTracker ng an\n& bt} music_tracker.add ('lie - nf')\n- T I s eral  il4a el © 0SWinpiNto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1161,
    "text": "[ N N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=xn NN\n[ PSSt @ otmuledesgnshalegedtia’X - & Don ++ B & x\nv addil empty stri ill fail (FAILED - 1) '\nng an y string wi ) -\nR 1 class MusicTracker list method will return all tracks added (PENDING: Temporarily skipped w\nE P def initialize ith xit) §\n_ add method will fail if mustc track already exists in array (PENDING: Te\n3 @tracker = [] wporarily skipped with xit)\n& 4 end\n5 make_snippet method\n55’ return string if less then S words or equal\n[ def add(track) returns first 5 words af a longer string & appended ellipsis\n© 7 gLFACRET << tTaCK Pending: (Failures'listed here are expected and do not affect your. suite's\n8 status)\n9 end 1) MusicTracker list method will return all tracks added\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_chal e_ «rb:1s\n11 def st pe gn.chellenge_spec\n12 return @tracker 2) MusicTracker add method will fall if music track already exists in ar\nTay\nbk} end # Temporacily skipped with xit\n14 # ./spec/P6_music_design_challenge_spec.rb:22\n15 end\nFailures:\n1} MusicTracker adding an empty string will fail\nFailure/Error: expect{music_tracker.add('‘)).to raise_error 'You cann\not input an empty string as a track'\nexpected Exception with \"You cannot input an empty string as a trac\nk\" but was not given a block\n# ./spec/86_music_design_challenge_spec.rb:12:in “block (2 levels) in\n<top (required)>'\nDeprecation Warnings:\n€ Chomn.eekinsSnlprsapeesy | 6 B0 | The implicit block expectation syntax is deprecated, you should pass a blo\n060 @ 08_music, design_chalange_spec. ck rather than an argument to “expect’ to use the provided block expectati\nmusic tr £ i on matcher or the matcher must implement \"supports_value_expectations?'. e\n3 usic_tracker Hufchracker. new' % «g ‘expect { value }.to raise Exception with “You cannot input an empty s\n6 music_tracker.add('Hello — adele') tring s a track\"' not ‘expect(value).to raise Exception with \"You cannot\n7 expect (music_tracker.list).to eq ['Hello - adele'l input an empty string as a track”\n] end\n9 [ If you need more of the backtrace for any of these deprecations to\n- — . — identify where to make the necessary changes, you can configure\n10 it *adding an empty string .n‘-I fail* ¢ “config.raise_errors_for_deprecations!’, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings, into errors, giving you the full .backtrace,\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track®’ 1 deprecation warning total\n13 end Finished in 0.0198 seconds (files took 9.12722 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list _method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new 1\n. design_chall .rb:10 # MusicTracker addin\n(COT | music_tracker.add('Hello - adele’) ety sirdnn WL fait m-challenge._spec sicliacker adCing 2\n& 18 [ TS TR 4T T T L IR S TR )\n2 PO PR WINE PP SIPORIPUR T T T PN PUC PN LT _Lgq ooms.mog«snnen-omomm Skill_Challenges % i |\n"
  },
  {
    "seconds": 1162,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=xn NN\n[ PSSR @ otmusledesgnshalemgedtia;X e o Don ++ B & x\n\no> @ oam adding an empty stri ill fail (FAILED - 1) '\nan y string wi ai -\nR 1 class MusicTracker list method will return all tracks added (PENDING: Temporarily skipped w\nE 2 Je7 Afi1risiize n:d;u) hod will fail if k al ists in (PENDING: T\n_ met a music track already exists in array : Te\nE @tracker = [] mporarily skipped with xit)\n& 4 end\nmake_snippet method\ng 5 return string if less then 5 words or equal\n[ def add(track) returns first 5 words of a longer string & appended ellipsis\n° 7 @tracker rack Pending: (Failures listed here are expected and do not affect your suite’s\n8 status)\n9 end 1) MusicTracker 1ist method will return all tracks added\n10 # Temporarily skipped with xit\n1 def list # ./spec/@6_music_design_challenge_spec.rb:15\n12 return @tracker PARL IS Ta fr T T L e DL S RN FRRES RN TR 0T QN -r TN S E S L T\nray\nbk} end # Temporarily skipped with xit\n14 | RV TS T 3 T LI R R TS T B o\n15 end\nL3R\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect{music_tracker.add(‘‘)).to raise_error 'You cann\not input an empty string as a track’\nexpected Exception with “You cannot input an empty string as a trac\nk\" but was not given a block\nPRV L T Tl S UL B IR T S VS U I I S AR G S I T\n<top (required)>’\nDeprecation Warnings:\n@ s stalnaeapecid U & B0 e implicit block expectation syntax is deprecated, you should pass a blo\n2040 @ 08_music design_chalange_spec. ck rather than an argument to “expect’ to use the provided block expectati\nmusic tr = i on matcher or the matcher must implement supports_value_expectations?’. e\n3 usic_tracker Hufchracker.new' a .g ‘expect { value }.to raise Exception with \"You cannot input an empty s\n© music_tracker.add('Hello — adele') tring as a track” not “expect(value).to raise Exception with \"You cannot\n7 expect (music_tracker.list).to eq ['Hello - adele'l input an enpty string as a track”\n] end\n9 If you need more of the backtrace for any of these deprecations to\n- - . — identify where to make the necessary changes, you can configure\n10 it ‘adding an empty string will fail' ¢ *config.raise_errors_for_deprecations!\", and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track®’ 1 deprecation warning total\n13 end Finished in 8.0198 seconds (files took ©.12722 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new )\n® 17 music_tracker.add('Hello - adele') oty vy WL foiL m_challienge_spec.rb:lf ¥ HusicTracker adding an\n& 18 [ TS TR 4T T T L IR S TR )\n2 P R PP PO TR T PUC PN LT _Lgq < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I |\n"
  },
  {
    "seconds": 1163,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn JE\n@ ¥ 06_music_sesign.md U ‘ @ 06_music_design_challenge.rb u % g Bos +~ 8 & x\n\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker #remove method will remove the given task from the todo array '\nE P def initialize Hu;;dﬂracher §\n_ s song to tracker\n3 @tracker = [] adding an empty string will fail (FAILED - 1)\né} 4 end 1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped\ng° 5 with xit)\n[ def add(track)\nP make_snippet method\n© 7 @tracker = RTaLR return string if less then 5 words or equal\n8 returns first 5 words of a longer string & appended ellipsis\n9 end Pending: (Failures listed here are expected and do not affect your suite's status)\nb 1) MusicTracker List method will return all tracks added\n11 def list # Temporarily skipped with xit\n12 return @tracker # ./spec/06_music_ddsign_challenge_spec.rb:1s\n13 end 2) MusicTracker add wethod will fait if music track already exists in array\n14 | # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec,rbi22\n15 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect{music_tracker.add(‘')).to raise_error ‘You cannot input mn empty\nstring as a. track®\nexp:cted Exception with “You cannot input an empty string as a track but was not gi\nven a blocl\n# ./spec/06_music_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>\n@ 06_music_design_challenge_specsd U X u @ - | Deprecation Warnings:\nspec) @ 08 musie design_chalange_spec.r The implicit block expectation syntax is deprecated, you should pass a block rather than an\ni i i argument to “expect’ to use the provided block expectation matcher or the matcher must imp\ns wugdc_tracker Hufchracker. new. <:[]:> lement “supports_value_expectations?’. e.g ‘expect { value }.to raise Exception with \"You\n© music_tracker.add('Hello — adele') cannat input an empty string as a track\"' not \"expect(value).to caise Exception with \"You ¢\n7 expect(music_tracker.list).to eq ['Hello - adele'] annot input an empty string as a track\"\n] end\n9 If you need more of the backtrace for any of these deprecations to\n. , — identify where to make the necessary changes, you can configure\n10 it ‘adding an empty string will fail' ¢ *config. raise_errors_for_deprecations!”, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings. into errors, giving you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track®’ 1 deprecation warning total\n13 end Finished in 8.0198 seconds (files took .12722 seconds to l0ad)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new )\n@ 17 nusic_tracker.add( \"Hello - adele’) {s;;:il./specloﬁ_wsi;_dzsign_d\\allu\\ge_spec.rb.ll # MusicTracker adding an empty string wil\n& 18 [ TS TR 4T T T L IR S TR )\n2 N . M deban 14oi) en an Fluat1a PUC PN LT - < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Sk:l.lLlﬁI |\n"
  },
  {
    "seconds": 1164,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn JE\n[ PSS @ otmuslodesgnshalengedtia;X -8 Don ++ B & x\n\nv #atid method will fall if given empty stri '\ne w. a given string\nR 1 class MusicTracker #remove method will remove the given task from the todo array\n% 2 | def initialize\n_ MusicTracker\nE @tracker = [] adds song to tracker\n& 4 end adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n55’ 5 | add method will fail if music track already exists in array (PENDING: Temporarily skipped w\n[ def add(track) ith xit)\nCValRer Talk make_snippet method\n8 return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10 LS UL TR LSRRI G & T T ST T I T T S VLT TR CALRE S E1 T Y\n11 def list 1} MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n:; d return @tracker # ./spec/86_music_design_challenge_spec.rb:15\n(=]\n14 2) MusicTracker add method will fail if music track already exists in array\n! # Temporarily skipped with xit\n15 end ¥ ./spec/@6_music_design_challenge_spec.rb:22\nFailures:\n1} MusicTracker adding an qﬁy string will fail\nFailure/Error: expect(music_tracker.add(’')}).to raise_error 'You camnot input en empty s\ntriog as a track'\nexpected Exceptien with \"You cannot input an empty string as a track\" but was not give\nn a block\n# ./spec/06_music_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>*\n@ 06_music_design_challenge_specsd U X @ @ - | Deprecation Warnings:\n94> @ Of.musia desigh_challange_spso.d The implicit block expectation syntax is deprecated, you should pass a block rather than an a\nmusic tr r= i o rgument to ‘expect’ to use the provided block expectation matcher or the matcher must impleme\n3 usic_tracke Mu.f.lcTracker new. ~+~ nt “supports_value_expectations?’. e.g ‘expect { value }.to raise Exception with “You cannot\n6 music_tracker.add('Hello - adele') )| input an empty string as a track\"’ not ‘expect{value).to raise Exception with “You cannot in\n7 expect(music_tracker,list).to eq ['Hello - adele'] put an empty string as a track\"\n8 end\n9 If you need more of the backtrace for any of these deprecations to\n- n R— — identify where to make the necessary changes, you can configure\n10 it ‘adding an empty string will fail' ¢ *config. raise_errors_for_deprecations!’, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 expect{music_tracker.add('*)).to raise_error 'You cannot input an empty string as a track' 1 deprecation warning total\n13 end Finished in .0198 seconds (files took 0.12722 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 LIS Ul o - T T 705 oy = Tod {-T M [ P, . ‘cTracke -\n@ 17 nusic_tracker.add( \"Hello - adele') ;:ﬁc ./spec/86_music_design_challenge_spec.rb:18 # MusicTracker adding an empty string w:\n& 18 [ TS TR 4T T IR S TR )\ni - - s A —— Ba— — . - 0SWiNPiNto@MASTUDENT-O0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % I |\n"
  },
  {
    "seconds": 1165,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=xn NN\n() | ¥ Ofmsicgesgumdy @ 06 music.design shallngeh u X - | Do+~ B 8§ %\n\nv #atid method will fall if given empty stri '\ne w. a given string\nR 1 class MusicTracker #remove method will remove the given task from the todo array\n% 2 | def initialize\n_ MusicTracker\nE @tracker = [] adds song to tracker\n& 4 end adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\nE:? 5 | add method will fail if music track already exists in array (PENDING: Temporarily skipped w\n6 def add(track) ith xit)\ne 7 Fracker < track\n@tracker track make_snippet method\n8 return string if less then 5 words or equal\n9 - returns first 5 words of a longer string & appended ellipsis\n10 Pending: (Failures listed here are expected and do not affect your suite's status)\n11 def list 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n:; d return @tracker # ./spec/86_music_design_challenge_spec.rb:15\n(=]\n14 2) MusicTracker add method will fail if music track already exists in array\n! # Temporarily skipped with xit\n15 end ¥ ./spec/@6_music_design_challenge_spec.rb:22\nFailures:\n1} MusicTracker adding an qﬁy string will fail\nFailure/Error: expect(music_tracker.add(’')}).to raise_error 'You camnot input en empty s\ntriog as a track'\nexpected Exceptien with \"You cannot input an empty string as a track\" but was not give\nn a block\n# ./spec/06_music_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>*\n@ 06_music_design_challenge_specsd U X n @ - | Deprecation Warnings:\n94> @ Of.musia desigh_challange_spso.d The implicit block expectation syntax is deprecated, you should pass a block rather than an a\nmusic tr r= i o rgument to ‘expect’ to use the provided block expectation matcher or the matcher must impleme\n3 usic_tracke Mufchracker new. -|-' nt “supports_value_expectations?’. e.g ‘expect { value }.to raise Exception with “You cannot\n6 music_tracker.add('Hello - adele') input an empty string as a track\"’ not “expect(value).to raise Exception with \"You cannot in\n7 expect(music_tracker.list).to eq ['Hello - adele'] put an empty string as a track\"\n8 end\n9 If you need more of the backtrace for any of these deprecations to\n. —— identify where to make the necessary changes, you can configure\n10 it ‘adding an empty string will fail® o *config. raise_errors_for_deprecations!’, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 expect{music_tracker.add('*)).to raise_error 'You cannot input an empty string as a track' 1 deprecation warning total\n13 end Finished in .0198 seconds (files took 0.12722 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 LTS Tl o - ToL T L V3 Ty g T T [N P, . ‘cTracke -\n@ 17 nusic_tracker.add( \"Hello - adele') ;:;Ec ./spec/86_music_design_challenge_spec.rb:18 # MusicTracker adding an empty string w:\n& 18 [ TS TR 4T T IR S TR )\nan ek il 2 el e THas aaTaw Tluadd P TP TR i I P 211 ©.0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 snu,_cm i | y\n"
  },
  {
    "seconds": 1166,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N 06_music_design_challenge_spec.rb — Skill_Challenges Ing=xn NN\n@ ¥ 06_music_sesign.md U ‘ @ 06_music_design_challenge.rb u % g Bos +~ 8 & x\n\ne #add method will fall -if ‘gis ty ‘strin '\nme W all if ‘given empty string\nR 1 class MusicTracker #remove method will remove the given task from the todo array\n3 P def initialize MusicTracke\n= sicTracker\n3 @tracker = 1 ELLEELL IR G e T\né} 4 end adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\nE:? 5 i add method will fail if music track already exists in array (PENDING: Temporarily skipped w\n[ def add(track) ith xit)\ne Vi @tracker < track\nRBLudLRel L =L make_snippet method\n8 return string if less then 5 words or equal\n9 end returns Tirst 5 words of a longer string & appended ellipsis\n10 Pending: (Failures listed here are expected and do not affect your suite's status)\n11 def list 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n:; d return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n(=]\n14 | 2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n15 end # ./spec/06_music_design_challenge_spec.rb:22\nLR H\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect{music_tracker.add( ‘)).to raise_error 'You cannot input an empty s\ntring as a track'\nexpected Exception with \"You cannot input an empty string as a track™ but was not give\nn a block\n# ./spec/06_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n@ 06_music_design_challenge_specib U X @ m - | Deprecation Warnings:\nspec) @ 08 musie design_chalange_spec.r The implicit block expectation syntax is deprecated, you should pass a block rather than an a\n[TES TR d ¢ = i rgument to ‘expect' to use the provided block expectation matcher or the matcher must impleme\n3 usic_tracker Hufchracker. new. <:[]:> nt supports_value_expectations?’. e.g ‘expect { value }.to raise Exception with “You cannot\n© music_tracker.add('Hello — adele') input an empty string as a track”' not “expect(value).to raise Exception with \"You cannot in\n7 expect(music_tracker.list).to eq ['Hello - adele'] ‘put an empty string as a track”\n] end\n9 If you need more of the backtrace for any of these deprecations to\n— - — . — identify where to make the necessary changes, you can configure\n10 it ‘adding an empty string will fail® ¢ ‘config.raise_errors_for_deprecations!’, and it will turn the\n11 music_tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track®’ 1 deprecation warning total\n13 end Finished in ©.8198 seconds (files took 0.12722 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit ‘list method will return all tracks added\" do Failed exanples:\n16 music_tracker = MusicTracker.new . R\n@ 17 nusic_tracker.add( \"Hello - adele') ;:ﬁc ./spec/b&_msgc_design_challum_spec.rb.l' # MusicTracker adding an empty string wil\n& 18 [ TS TR 4T T L AR S TR )\nan M I e O Tk YA IS — o 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I |\n"
  },
  {
    "seconds": 1167,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn JE\n@ ¥ 06_music_sesign.md U ‘GMWUX g Bos +~ 8 & x\n\nv #list method will return all fasks added within the '\nS retarn a SKS n array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\nE @tracker = [] MusicTracker\n& 4 end adds song to tracker .\nadding an empty string will fail (FAILED - 1)\nE:? 5 1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nCOE | @tracker << track 1w\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are expected and do not affect your suite's status)\n1 def list \" pe ¥e\n1) MusicTracker list method will return all tracks added\n12 return @tra‘:ker # Temporarily skipped with xit\nbk} end # ./spec/06_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n® . /spec/06_music_design_challenge_spec,rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add( ')).to raise_error 'You cannot input an empty string\na5 a track®\nexpected Exception with \"You cannot jnput an empty string as a track\" but was not given a b\ntock\n# ./spec/06_music_design_challenge_spec.rb:12:in \"block (2 levels) in <top (required)>'\n@ 06_music_design_challenge_specsb U X Qo Deprecation Warnings:\npec > l 08_musie_design_challenge_spec.rd\nmusic tr 3 ; The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracker Hufchracker. new. ‘+. nt to \"expect’ to use the provided block expectation matcher or the matcher must implement \"suppor\n© music_tracker.add('Hello — adele') 11\" ts_value_expectations?‘. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(uusic tracker.list).to eq ['Hello - adele'] string as a track\"’ not “expect(value).to raise Exception with “You cannot input an empty string\n- as a track\"’\n] end\n9 — - . — If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail® ¢ identify where to make the necessary changes, you can configure\n= “config.raise_errors_for_deprecations!”, and it will turn the\n11 music_tracker = MusicTracker.new deprecation ings into errors, givi.na you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\nhic) end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took ©.12722 seconds to load)\n15 xit ‘list method will return all tracks added do 12 exanples, 1 faflure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n(@) 17 TS TR - T LU L TR T R R T 1) ] rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T T L AR S TR )\n| T v TR v S Ve SRS ¢ LAY S S v o 1.0  0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [l |\n"
  },
  {
    "seconds": 1168,
    "text": "AEEEEEEEEOOGOSOEOSESLSSSTESESEE N CCSCSCOCOLOLOLOLRLSSSS\n[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn JE\n@ # 06_music_sesign.md U ‘.MMLWUX - & Bos +~ 8 & x\n\nv #list method will ret 1L fasks added within the '\nme! Wl return a asl array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nCOE | @tracker << track 1w\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are ex| ed and do not affect r suite's status)\n11 def list i pect you\n1) MusicTracker list method will return all tracks added\n12 return @tracker # Tesporarily skipped with xit\nbk} end # ./spec/86_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n¥ ./spec/86_music_design_challenge_spec,rb:22\n(23012 H\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\n@5 a track’\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\ntock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n€ Oumecanstalingnspenso U X 90| peprecation Warnings:\nspec > l 06_music_design_challenge_spec.rb\n: 3 ; The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 nusic_tracker Hufchracker. new. ‘+. nt to “expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n© music_tracker.add('Hello — adele') ¥ ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect (music_tracker.list).to eq ['Hello - adele'] str.utlg a:\"a track\"’ not “expect(value).to raise Exception with “You cannot input an empty string\n= as a track\"’\n] end\n9 — - . — If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ lﬂen:gy ut;:z to nk: tuemsmmuﬁ.lyo:iﬁn conflg:re\n- “config.raise_errors_for_deprecat:. \" t turn t\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvma you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track\n13 end 1 deprecation warning total\n14 Finished in ©.9198 seconds (files took ©.12722 seconds to load)\n15 xit ‘list method will return all tracks added do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n(@) 17 TS TR - T LU L TR T R R T 1) ] rspec ./spec/06_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T T L IR S TR )\n| T i ST R ey AR Y = TR TSNS S RS WD S < 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [ |\n"
  },
  {
    "seconds": 1169,
    "text": "A5V T\n[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengesh u % - | & [P A=R\n\nv #list method will ret 1L fasks added within the '\nme! Wl return a asl array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ne 7 atracker << track 1w\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10 Pending: (Failures listed here are expected and do not affect your suite's status)\n11 def list\n1) MusicTracker list method will return all tracks added\n12 return @tracker # Tesporarily skipped with xit\nbk} [=,0] # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec,rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\n@5 a track’\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\ntock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n€ OlLmecdoanstalnonspnssn o X 90| peprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.rb\nmusic tri r= ieTr Y The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke HufJ.CT acker new. ‘+. nt to “expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n[ music_tracker.add('Hello - adele') ¥ ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(uusic tracker. list).to eq ['Hello - adele'] strhtlg a:\"a track\"’ not “expect(value).to raise Exception with “You cannot input an empty string\n= as a track\"’\n8 end |\ni I — e If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail® ¢ identify where to make the necessary changes, you can configure\n= “config.raise_errors_for_deprecations!”, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, givma you the full backtrace.\n12 expect(music_tracker.add('*)).to raise_error 'You cannot input an empty string as a track\n13 end 1 deprecation warning total\n14 Finished in ©.9198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do e i\n16 LTS TR S - T G T3 ot i g™ T {-T M (0] Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T T R S TR )\n. - e TR o e e g - T . < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Sk!.l\\_dlal £ | |\n"
  },
  {
    "seconds": 1170,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=xn N\n0 RN @ Otmuslergr shalengerd U:X -] B +-B8 8§ x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nE @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) I add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ng 7 @tracker << track 1)\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU R PR S ES L1 T T ted and do not affect r suite's status)\n1 def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 return etra‘:ker # Temporarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | AR TES TG P ST T P LT R A F AR S TS TR d - Td S 1 (T VS ) £ 38 TR Ta 1Y\n15 end # Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add( ‘)).to raise_error 'You cannot input an empty string\n@5 a track®\nexpected Exception with \"You cannot input an empty string as a track” but was not given a b\ntock\n# ./spec/@6_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n& e o sEalroaspait o X B0 peprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.rb\nmusic tr r= icTr. ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hu.f:.c acke ew' nt to “expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n[3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n- as a track\"’\n] end r\n9 — — — n If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, givin; you the full backtrace.\n12 expect(music_tracker.add('\"')).to raise_error 'You cannot input an empty string as a track®’\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do e\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 music_tracker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T T IR S TR )\nM | ey e N e T i v iy e 21 7 < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1171,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n() | ¥ Ofmsicgesgnmdy @ 06 music.design shallngeb U X Lo & B +-B8 8§ x\ne #list method will ret 11 tasks added within th '\nme W return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 ) list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\ng 7 @tracker << track !\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are expected and do not affect r suite's status)\n1 def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 return etra‘:ker # Temporarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nENERC Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in \"block (2 levels) in <top (required)>'\n€ Rt seckinshalansucoperats U ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= icTr. ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n[3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n- as a track\"’\n8 end r\ns — — — n If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, g.lvina you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track®\n13 end 1 deprecation warning total\n14 Finished in 8.0198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\nia -l ke~ o e i ST S— . < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1172,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengerb U X no- @ Ber ++- 8 & %\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 'I list method will return all tracks added (PENDING: Temporarily skipped with xit)\n3] lef add(track) ot add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n. - it\ng 7 @tracker << track !\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are expected and do not affect r suite's status)\n1 def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 return @tracker # Tengorarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\n€ Rt seckinhalansucoperats U ¢ ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= icTr. ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESERIC o\n8 end |...\n2 T— — — . If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track’\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [T TR 4T LU s IR S TR Y\no e T s e e e i e ot < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1173,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengerb U X no- @ Ber ++- 8 & %\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 'I list method will return all tracks added (PENDING: Temporarily skipped with xit)\n3] lef add(track) - add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n. - it\ng 7 @tracker << track !\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are expected and do not affect r suite's status)\n1 def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 return @tracker # Tengorarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\n€ Rt seckinhalansucoperats U ¢ ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= icTr. ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESERIC o\n8 end |...\n2 T— — — . If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track’\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [T TR 4T LU s IR S TR Y\no e T s e e e i e ot < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1174,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn N\n@ # 06_music_sesign.md U @ 06_music_design_challengerb U X no- @ Ber ++- 8 & %\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE pa def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 'I list method will return all tracks added (PENDING: Temporarily skipped with xit)\n] lef add(track & add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\npremma e it\nL4 7 @tracker << track !\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\nﬁ def list Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 return @tracker # Tengorarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\n€ Rt seckinshalansucoperats U 25 ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= ieTr ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n- ~ as a track\"\n8 end |\n- - _— . you need more of the backtrace for any of these deprecations to\n2 [ 1t eed f the back f f these d\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y i\nin o T ey g o =i i < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1175,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n() | ¥ Ofmsicgesgumdy @ 06 music.design shallngeb U Lo & B +-B8 8§ x\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\npa def initialize #remove method will remove the given task from the todo array\n%\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 'I list method will return all tracks added (PENDING: Temporarily skipped with xit)\n3] lef add(track & add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ne » it\ng 7 (14 Te (TS 4 r-Td § :\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are expected and do not affect r suite's status)\n1 def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 return @tracker # Tengorarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\nRt sockinshalansncperats U 2% ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= icTr. ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n- ESER I o\n8 end i\n2 T— — — . If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\nin o T P o i i < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1176,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengerb U X uo- @ Ber ++- 8 & %\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\ng 7 (14 Te (TS 4 -Td § :\n8 make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nPending: (Failures listed here are expected and do not affect r suite's status)\n1 def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 return @tracker 2 Tengorarily skipped with xit\nbk} end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | 2) MusicTracker add method will fail if music track already exists in array\n15 end # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\nRt sockinshalansncperats U 2% ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= icTr. ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESER I o\n8 end i\n2 T— — — . If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\nin o T P o i i < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1177,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U ® Lo & B +-B8 8§ x\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[} def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ne bi it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nnd\nﬁ € Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 | # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\nRt sockinshalansncperats U 2% ™ Deprecation Warnings:\nspec) @ 08_musia_design_challange_spec.rb\nmusic tr r= ieTr ron The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESER I o\n8 end i\n2 T— — — . If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!®, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 \"us‘lc—tnc\"er'add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\nin o T P o i i < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1178,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 08_music_gesignmd U ‘.val oo @ Do ++v B § X\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[} def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 [} make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nnd\nﬁ € Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 | # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\nRt sockinshalansncperats U 2% ™ Deprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\nmusic tr r= icTr. N The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acker ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESER I o\n8 end i\n2 — . — — \" If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; PLITIRGTIR (THR ST R TN\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 nusic_tracker.add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\no | o . Sk e 4 g o < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1179,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\na ¥ 08_music_gesignmd U ‘.va‘ oo @ Do ++v B § X\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tr: make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nnd\nﬁ € Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 | # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\nRt sockinshalansncperats U 2% ™ Deprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\nmusic tr r= ieTr N The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acker ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESER I o\n8 end i\n2 — . — — \" If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; PLITIRGTIR (THR ST R TN\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 nusic_tracker.add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\no | o . Sk e 4 g o < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1180,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\na ¥ 08_music_gesignmd U ‘.va‘ oo @ Do ++v B § X\ne #list method will ret 11 tasks added within th '\nmethod w: return a asi al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tr: make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nnd\nﬁ € Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 | # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add(‘)).to raise_error 'You cannot input an empty string\nR\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS LI E A GO TR T o B3 PES T B ) G T S 0 T3 € IS TS I (S TR D B\nRt sockinshalansncperats U 2% ™ Deprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\nmusic tr r= ieTr N The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n3 usic_tracke Hufxc acker ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(nusic tracker.list).to eq ['Hello - adele'] string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string\n- ESER I o\n8 end i\n2 — . — — \" If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' ¢ identify where to make the necessary changes, you can configure\n- “config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, glvln; PLITIRGTIR (THR ST R TN\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took €.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 music_tracker = MusicTracker.new Failed examples:\n® 17 nusic_tracker.add( 'Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 [ TS TR 4T LU s IR S TR Y\no | o . Sk e 4 g o < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1181,
    "text": "[- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ ¥ 08 rusic_gesgnmd V@ O8_music_design_challengesb u @ Lo & B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod wi return a as| al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh pa def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tra make_snippet method\nB return string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nig end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n] # ./spec/86_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/06_music_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>'\n& Oomae v shalencnapesid V= \" Dpeprecation Warnings:\nspec) @ 08_music_design_challenge_spec.rb\nmusic t r= ker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\nS usic_tracke MuficTrac er ew. nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n[3 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l] string as a track\"’ not “expect(value).to raise Exception with “You cannot input an empty string\n- — as a track\"\"\n8 end\n9 N — — — If you need more of the backtrace for any of these deprecations to\n10 it ‘adding empty string will fail' do identify where to make the necessary changes, you can configure\n= “config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect(music_tracker.add('\")).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LTS Tl - Tl T (715 Yol f =T () g 110 Failed examples:\n® 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nan PROPDRPULY SRORS [P P PO TS Pt A TYPN Y PR PSTR R 2 ~£11 © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill _Challenges % [] !\n"
  },
  {
    "seconds": 1182,
    "text": "- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb u @ nLo- @ Bwms +v B § x\ne #list method will ret 11 tasks added within th '\nmethod wi return a as| al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\n&C,’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tracker << track make_snippet method\nY L return string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end PARL St E T T L G R AA SR R AE S TS TR - Td QE N U LV S Y S LI T 1)\n15 # Temporarily skipped with xit\n16 end # ./spec/86_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/06_music_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>'\nR e Adinsamonppenis ) = ™ Deprecation Warnings:\nspec) @ 06 music_design_challenge_spec.(b\nmusic t r= ker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n8 usic_tracke MuficTrac ar ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n6 music_tracker.add('Hello — adele’) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect (music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- — as a track\"®\n8 end\n9 A ——— B— If you need more of the backtrace for any of these deprecations to\n10 it dding empty string will fail' do identify where to make the necessary changes, you can configure\n= “config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givln; you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.0198 seconds (files took 8.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LLUVES ol o - Tl T (715 Tol f o= o (=Y g 10 Failed examples:\n® 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nX, viim ot fmismd o dmmmbemm Vdod) b e FIUTY . ——tet LR S -1 © oswlnpmtmm—mln-?lnto—(i7mL4 sklll_chﬂlleﬂ’es hd [] |\n"
  },
  {
    "seconds": 1183,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U @ Lo & B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| al W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh pa def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\n&C,’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/06_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n; ] M_mdxn-:d - ™ \" Deprecation Warnings:\nspec esign_challenge_spec.\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n8 usic_tracke Hufic racke ew. nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 LUES ol 4T YT O TR T R TR T (Y R ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- — as a track\"\"\n-] [0\n9 A ——— S— If you need more of the backtrace for any of these deprecations to\n10 1t \"adding empty string will fail' do identify where to make the necessary changes, you can configure\n= “config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givln; you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 [VES ol 4 - Tol T (TS Yt g Tol (T [0 Failed examples:\n® 17 music_t racker.add('Hello - adele') rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\na s o fismd o bmmmbemm 1ok b e TILATY . m—dalal LR S -1 © oswlnplntmﬂﬂ'—(}swln-l’lnto—(ﬂm‘ MILChallmes hd [] !\n"
  },
  {
    "seconds": 1184,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengerb U @ no- @ Bes ++ 8 & %\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\n2 def initialize #remove method will remove the given task from the todo array\n%\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\n&C,’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e tosinsfalnouepesip > \" Deprecation Warnings:\nspec) @ 08 music_design_challenge_spec.(b\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n8 usic_tracke Hufic racke ew. nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 LUES ol 4T YT O TR T R TR T (Y R ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- — as a track\"\"\n-] [0\n9 . — If you need more of the backtrace for any of these deprecations to\n10 1t \"adding empty string will fail' do identify where to make the necessary changes, you can configure\n- *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givln; you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 [VES ol 4 - Tol T (TS Yt g Tol (T [0 Failed examples:\n® 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\na s b fismd o bmmmbemm VTdod) b am TILATY . —dalal 174 -1 © DWMPthm-mm-PMto-ci?m‘ SK11LCha11m’es hd [] !\n"
  },
  {
    "seconds": 1185,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U @ Lo & B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\n&C,’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\n]E expected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n. > aaq_.r-:d ) 'm \" Deprecation Warnings:\nspec esign_challenge_spec.\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n8 usic_tracke Hufic racke ew. nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 LUES ol 4T YT O TR T R TR T (Y R ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- — as a track\"\"\n-] [0\n9 . — If you need more of the backtrace for any of these deprecations to\n10 1t \"adding empty string will fail' do identify where to make the necessary changes, you can configure\n- *config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, givln; you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You cannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 [VES ol 4 - Tol T (TS Yt g Tol (T [0 Failed examples:\n® 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\na s b fismd o bmmmbemm VTdod) b am TILATY . —dalal 174 -1 © DWMPthm-mm-PMto-ci?m‘ sklll_challeﬂ’es hd [] !\n"
  },
  {
    "seconds": 1186,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ & O ymusic gesgnmd ¥ @ 08_music_design_challengesb U @ no- @ B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] | MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) | add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 (1T (TS 4 -Td § make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nig end | Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e toskinsfalnonepesid > \" Deprecation Warnings:\nspec) @ 08 music_design_challenge_spec.rb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n8 usic_tracke Hufic racke ew. nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 LUES ol 4T YT O TR T R TR T (Y R ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESERIC o\n-] [0\n9 R— — . \" If you need more of the backtrace for any of these deprecations to\n10 it ‘adding empty string will fail' do identify where to make the necessary changes, you can configure\n- *config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, givln; you the full backtrace.\n12 expect{music_tracker.add('')).to raise_error 'You]Icannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 [VES ol 4 - Tol T (TS Yt g Tol (T [0 Failed examples:\n® 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nPP il iR . — . © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1187,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 06_music_sesign.md U @ 06_music_design_challengesb U & B B EEA=R\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\n&C,’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) | add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e sknshallnorepesih U 26 © O peprecation Warnings:\nspec) @ 08 music_design_challenge_spec.rb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n8 usic_tracke Hufic racke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n3 LUES ol 4T YT O TR T R TR T (Y R ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESE RIS\n-] [0\n9 If you need more of the backtrace for any of these deprecations to\n19 it ‘adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\n3l nusiraer- sTrker.new s - . S . deprecation warnings into errors, givln; you the full backtrace.\n12 expect (music_tracker.add('*)).to raise_error ‘Youjcannot input an empty string as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 [VES ol 4 - Tol T (TS Yt g Tol (T [0 Failed examples:\n@ 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nB b — T s —— e — — . > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1188,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U @ B B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\nP 4 end = adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n; > .“J\"::ﬂ ) ‘m wme Deprecation Warnings:\npec esign_chalenge_spec.\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic agke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n3 LTS TR 4T T [ TR T R TR Te (Y R ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESE RIS\n-] [0\n9 If you need more of the backtrace for any of these deprecations to\n19 it ‘adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new . deprecation warnings into errors, givlna you the full backtrace.\n12 expect{music_tracker.add('*)).to raise_error ‘You EaRNOENINPUtRANNENPLy String as a track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LTS Tl - T T (715 Cal f o= Tof (T M [0 Failed examples:\n@ 17 LS T racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nan o 3 . - ST < . > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1189,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U ® B B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn str. es: en WO Ly ua\nt tring if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e snshallnoropesid U 3¢ @O peprecation Warnings:\nspec) @ 08_music_design_challange_spec.rb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic agke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n6 LIRS TR T TN LR TR TR LI A ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESERIC o\n-] end\n9 If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\n1 music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect{music_tracker.add('*)).to raise_error 'You —'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LTS Tl - T T (715 Cal f o= Tof (T g [0 Failed examples:\n@ 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nan — . > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] I\n=] 4 Ln 12, Col 97 (38 salsctac) F-8 LF 0\n"
  },
  {
    "seconds": 1190,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e toskinshalnanpesid @O peprecation Warnings:\nspec) @ 08_music_design_challange_spec.rb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic agke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n6 LIRS TR T TN LR TR TR LI A ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESERIC S\n-] end\n9 If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect(music_tracker.add('*)).to raise_error ‘You EHifOENNPUGNANNETOO/ISEnONasNaNtrackY\n13 1 daplj?cntinn warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LTS Tl - T T ) (7105 Cal f - Tof (T g [0 Failed examples:\n@ 17 music_t racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nan — . > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] I\n"
  },
  {
    "seconds": 1191,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e sknshallnoropesip U X @O peprecation Warnings:\nspec ) @ 08_music_design_challenge_spec.tb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic agke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n6 LU TR 4T CIPEL LR R LI G TR ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESERIC o\n-] end\n9 If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You —track'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LTS Tl - T T (715 Tal f o= Tof (T M [0 Failed examples:\n@ 17 LIS T racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nI e e e e L e T e B © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1192,
    "text": "(- N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nE @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellips\n9 fil 5 words of a 1 UL ded ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e sknshallnoropesip U X @O peprecation Warnings:\nspec ) @ 08_music_design_challenge_spec.tb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic agke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n6 LU TR 4T CIPEL LR R LI G TR ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESERIC o\n-] end\n9 If you need more of the backtrace for any of these deprecations to\n10 it ‘adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect(music_tracker.add('')).to raise_error 'You _rack'\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LIRS TR ST T, TS Yoy g Tol I Failed examples:\n@ 17 LIS T racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nI e e e e L e T e B © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n=] 4 Ln 12, Cal 93 (34 salectac) ¢ F-8 LF 0\n"
  },
  {
    "seconds": 1193,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e sknshallnoropesip U X @O peprecation Warnings:\nspec ) @ 08_music_design_challenge_spec.tb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n6 LU TR 4T CIMEL LR R G IR I TR ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n- ESERIC o\n-] end\n9 If you need more of the backtrace for any of these deprecations to\n10 it 'adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect{music_tracker.add('\"')).to raise_error 'You ck’\n13 end 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LVES ol 4 - T T (TS ot g Tol T [0 Failed examples:\n@ 17 LULE T racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\ne T e L A e N T T Y S A S 2 e — © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1194,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e sknshallnoropesip U X @O peprecation Warnings:\nspec ) @ 08_music_design_challenge_spec.tb\nmusic t r= Tracker.n The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n5 usic_tracke Hufic acke ew' nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n6 LU TR 4T IR LR R G IEE I TR) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n7 expect(music_tracker.list).to eq ['Hello - adele'l string as a track\"® not “expect(value).to raise Exception with “You cannot input an empty string\n= ESERIC o\n-] [0\n9 If you need more of the backtrace for any of these deprecations to\n10 it 'adding an empty string will fail' do identify where to make the necessary changes, you can configure\n= *config.raise_errors_for_deprecations!’, and it will turn the\nn music_tracker = MusicTracker.new deprecation warnings into errors, givlna you the full backtrace.\n12 expect (music_tracker.add('\")).to raise_error 'You EENNOEIINPUEHANNCHPEYASEranaNasant k\"\n13 end - 1 deprecation warning total\n14 Finished in ©.8198 seconds (files took ©.12722 seconds to load)\n15 xit 'list method will return all tracks added' do 12 exanples, 1 failure, 2 pending\n16 LTS Tl - T T (715 Col f o= Tof (T M [0 Failed examples:\n@ 17 LULE TS racker.add('Hello - adele') rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 18 music_tracker.add ('lie - nf')\nT U e S e Ve S Y N Y T S A S Y Ty © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1195,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ . 8 B ++ B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nBg’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# s snshallnoropesip U X @O peprecation Warnings:\nspec) @ 08 music_design_challenge_spec.rb\n16 music_tracker = MusicTracker.new The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n' Al [ nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n17 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n18 music_tracker.add ('lie - nf') string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] a5 8 track\nP [0\n21 If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n22 xit 'add method will fail if music track already exists in array' do “config.raise_errors_for_deprecations!®, and it will turn the\n23 nusic tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n24 LUES TR 4T T G TR AR G R T L A ) 1 deprecation warning total\n25 expect(msic_tracker. add('Hello - adele')).to eq 'Track already exists!\"' knlshad in 0.0198 seconds (files took ©.12722 seconds to load)\n26 end 12 examples, 1 failure, 2 pending\n27 >nd Failed examples:\n@ rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& . ——————————— . —_______ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % (] !\n"
  },
  {
    "seconds": 1196,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ . 8 B ++ B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nBg’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nas a track®\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# s snshallnoropesip U X @O peprecation Warnings:\nspec) @ 08 music_design_challenge_spec.rb\n16 music_tracker = MusicTracker.new The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n' Al [ nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n17 music_tracker.add('Hello - adele') ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n18 music_tracker.add ('lie - nf') string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] a5 8 track\nP [0\n21 If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n22 xit 'add method will fail if music track already exists in array' do “config.raise_errors_for_deprecations!®, and it will turn the\n23 nusic tracker = MusicTracker.new deprecation warnings into errors, giving you the full backtrace.\n24 LUES TR 4T T G TR AR G R T L A ) 1 deprecation warning total\n25 expect(msic_tracker. add('Hello - adele')).to eq 'Track already exists!\"' knlshad in 0.0198 seconds (files took ©.12722 seconds to load)\n26 end 12 examples, 1 failure, 2 pending\n27 >nd Failed examples:\n@ rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& . ——————————— . —_______ © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % (] !\n"
  },
  {
    "seconds": 1197,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 08 music_desgnmd U @ 06_music_design_challengesb U ® B B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e msnsallnoropsip U X @O peprecation Warnings:\nspec) @ 06_music_design_challange_spec.rb\nL4 €no The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n: ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\"\n12 expect (music_tracker.add('’}).to raise_error 'You EENNOGNINPUCIANNCHDEVISErangNasHanErsck\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘c%&n.ralse_ermrs_fur_deprecaums!‘, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 [T ol o = Tol (T L (718 Yol f =Tl (=) g [0 \" 1 deprecation warning total\n7 . L} P .\n& nusic_Cracker. addy ';Iello a?ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n(] - [ ] = []\n;g y expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& pr3 RELL LG L L RTARS B mus rack already exists. in array' do > 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [| 1\n"
  },
  {
    "seconds": 1198,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 08 music_desgnmd U @ 06_music_design_challengesb U ® B B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\nP 4 end = adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail |\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty stringl\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e msnsallnoropsip U X @O peprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\nL4 €na The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\ns ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty |\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with \"You cannot input an empty string |\n11 music_tracker = MusicTracker.new as a track\"\"\n12 expect (music_tracker.add('’}).to raise_error 'You SENNOCNINPUCIANNCHPEVISEringNasHantrs ck\n13 end 1[ If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 [T ol o = Tol (T L (718 Yol f =Tl (=) g [0 \" 1 deprecation warning total\n7 . L} P .\n& nusic_Cracker. addy ';Iello a?ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n] - Ll ] = [\n;g y expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l] P Yop——\nen |\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 *add, method will fail if music track.already exists. in acray! do © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1199,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e msnsallnoropsip U X @O peprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.rb\nL4 ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n< ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it .adding an empty string will fail' do string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n11 [LVES ol 4 - Tl T (715 Yt - Tod (Y M 10 as a track\"\"\n12 expect (music_tracker.add('*)).to raise_error ou EERNOEIINPUCIERNCHPEVISErangNasanETh K\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 [T ol o = Tel (T (71 Yol f =T () P 150 \" 1 deprecation warning total\n[l - .\ni3 nusic_tracker.addy .:'eu'o a?ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n[ 0 L) . = L)\n;: d expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Failed examples:\n(-]\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 *add, method will fail if music track.already exists. in acray! do © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1200,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh 2 def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e sinshallnoropsip U X @O peprecation Warnings:\nspec) @ 08 music_design_challenge_spec.rb\nL4 ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n9 nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n: ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'add:lng an empty string will fail' do string as a track\"' not “expect(value).to raise Exception with \"You cannot input an empty string\n11 [LVES ol 4 - Tol T (715 et - Ted (T M 10 as a track\"\"\n12 expect(music_tracker.add('\")).to raise_error 'f@lllcannot Jinput an empty string as a track\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n[ - [l\n37 nusic_tracker.addy ':eu'o a?ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n[] - [l [l - [}\n;2 ; expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Failed examples:\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 ‘add_method will fail if music track already e s._in array' do © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1201,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e msnsallnoropsip U X @O peprecation Warnings:\nspec) @ 08 music_design_challange_spec.rb\nL4 €on The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\nB . ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not “expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\"\n12 expect (music_tracker.add('\")).to raise_error ' {HliGARNOUINPUIAANEHD YIS EHINGNASISNERAcH' I\n13 end f you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 LTS Kl o Tl (T T3 = Tl TR 1 deprecation warning total\nL] - .\n47 nusic_tracker.add i.ieuo a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n. LS . . 3 .\n;z | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 ‘add method. will fail if music track already exists.in array' do © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1202,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e snshallnoropesip U X @O peprecation Warnings:\nspec) @ 08 music_design_challange_spec.rb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n- . . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not “expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\"\n12 expect (music_tracker.add('\")).to raise_error ' {liGARNOGINNPUIANNEHD YIS tHINGIASNaNERackY\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 [ UTE-3 Kol o o= T (3 S TE 3 Mo =T (-1 g (50 1 deprecation warning total\n[ - .\n47 nusic_tracker.add i.ieuo a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n. LS . . 3 .\n;z | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 ‘add method. will fail if music track already exists.in array' do © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1203,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e snshallnoropesip U X @O peprecation Warnings:\nspec) @ 08 music_design_challange_spec.rb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n- . . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not “expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\"\n12 expect (music_tracker.add('\")).to raise_error ' {GiliGARNOGIINPUCIARNEHD YRS rInGIaSNaRERackl\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15 xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 LTS Kl o Tl (T T3 = Tl TR 1 deprecation warning total\n[ Py .\n47 nusic_tracker.add i.ieuo a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n. LS . . 3 .\n;z | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 ‘add method. will fail if music track already exists.in array' do © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1204,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U ® B B+ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end —  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e snshallnoropesip U X W @O peprecation Warnings:\nspec) @ 08 music_design_challange_spec.rb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\n12| expect(music_tracker.add(*\")).to raise_error ' (EIEANNONEAPUISAISREIStRIRGISSISNEraER)\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 [ UTF-3 Kl o - T (3 S (11 M =T (T g (50 1 deprecation warning total\n[l P 0\n47 music_tracker.add{ t.leuo a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n| . e . . = [\n;g ; (0 o € TTES Tol §-Tod T B B IR VT I A S G- T (Y LU & TR A | Failed examples:\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& p73 ,' dd method LL Tail 1t m 3 alreagy e S 1n array % do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1205,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ ] B ++ B8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nd 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\n]I expected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¢ el v Qm- Deprecation Warnings:\nspec) @ 08 music_design_challange_spec.rb\n&  cha The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do ~ string as a track\" not “expect(value).to raise Exception with \"You cannot input an empty string\n11 [LTES Toll - T Tl TS g - Tl Y M T ‘ as a track\"\n12 expect (music_tracker.add(*')).to raise_error ' {iliCARNOUINPUIAANSHDEYNS EHINONaSNBNERackY\nbk} end \\ If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nL] - L]\n17 music_tracker.add( t‘eu'o a:’e\"e ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n. - . . = .\n;: ; expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Failed examples:\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& pr3 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1206,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06 music_designmd ¥ @ 06_music_design_challengesh U @ -] B +-B & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 ]I list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nAo> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e msinshallnoropesip U X @O peprecation Warnings:\nspec > @ 06_music_design_challenge_spec.tb\n&  cha The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"® not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 [LTES Toll - T Tl TS g - Tl Y M T i as a track\"\n12 expect (music_tracker.add(\"')).to raise_error ' {iliGANNOUIMNPUIAANSHD VNS EIINOIASNBNERackY\nbk} end ‘ ~ If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n' - '\n47 nusic_tracker.add{ t‘eu'o a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n| . . ] . = [l\n;z ; expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Failed examples:\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& pr3 xit 'add method will fail if music track alread exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1207,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na ¥ 06_music_gesign.md U @ 08_music_design_challengerb U ® Q Do +v B § X\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n4 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¢ el v Qm- Deprecation Warnings:\nspec > @ 06_music_design_challenge_spec.tb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"® not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\n12 expect (music_tracker.add(\"')).to raise_error ' filGANNOUIMNPUIAANEHDEYNSEIINONASNBNERackY\nbk} end | If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n' - [\n17 music_tracker.add( ':ello a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n' - . . = L]\n;: | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] T p——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& pr3 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1208,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\na ¥ 06_music_sesign.md U @ 06_music_design_challengesh U @ no- @ Bwms +v B § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\nadding an empty string will fail (FAILED - 1)\nBg’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%> 7 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e toskinsfalnonpsid \" Dpeprecation Warnings:\nspec > @ 06_music_design_challenge_spec.tb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"® not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\n12 | expect(nusic_tracker.add(*')).to raise_error 'FiUICARRGIRPUEISNISRRE/ISErnGIBSIAIEFSER\nbk} end | If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 [ U113 Kl o - T (Y G VL M =T (-1 g (50 1 deprecation warning total\n' - [\no wusic_tracker.add( i.ieuo atliele ! Finished in .8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n| 2 > ' - . . = L]\n;g | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1209,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ no- @ B +- 8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end =  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(tgack) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n&~ 7 e ey e 1 it)\nCl 7 You cannot input an empty string as a track'|['\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nn\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e toskinsfalnopsip VX \" Dpeprecation Warnings:\nspec > @ 06_music_design_challenge_spec.tb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"® not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\n12 | expect(nusic_tracker.add(*')).to raise_error *VSUICANRGIRPUEIBRISRRE/ISErinGIBSIAIEFSER\nbk} end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n' - [\n47 music_tracker.addy i.ie'llo a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n| . - . . = .\n;z | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1210,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ no- @ B +- 8 & x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as| Ll W e array\nR 1 class MusicTracker #add method will fail if given empty string\nh p def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end =  adds song to tracker\nadding an empty string will fail (FAILED - 1)\nag’ 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n4 e N K I ot [ (o ey Bt o e St it)\n© 7 fail ‘You cannot input an empty string a4 a track'®\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nn\n12 end Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEHER{r Y\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nEVET L TES T IS G E G UL T o B3 PR T B ) CTe S 0 T3 € IS TS I (=t TR D ER\n# e tosinsfalnonpsid N 2t \" Dpeprecation Warnings:\nspec > @ 06_music_design_challenge_spec.tb\n&  ena The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. ) ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"® not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 music_tracker = MusicTracker.new as a track\"\"\n12 | expect(nusic_tracker.add(*')).to raise_error 'ViUlCaNRGIRPUEIBRIEABE/ISERINGIBSIAIEFSERS\nbk} end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 ‘config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n' - [\n47 music_tracker.addy i.ie'llo a:’ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add ('lie - nf') 12 examples, 1 failure, 2 pending\n| . - . . = .\n;z | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] P Yop——\nen\n@ 21 rspec ./spec/06_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1211,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ # 06_music_design.md U @ 08_music_design_challengerb U @ wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nx‘ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n%D 7 ail *‘You cannot C‘\"lff’: an empty string as a track 1 it)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n[\nig | nd Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmae S ANenda: el ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\n8 em The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n9 nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 [LITES Tol =Tl STl TS Fog g Tl 3T L] as a track\"\n12 expect (music_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.nev 1 deprecation warning total\nl - [\no ‘ music_tracker.add( r.ielln a?e'l.e ) Finished in 8.0198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n;: ) expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'l] Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 72 S S -1 (Il TRV RN CR AN S VDS T f - T QRN - T A S o L - [l - ) A« o]  0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1212,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ # 06_music_design.md U @ 08_music_design_challengerb U wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nx‘ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nG 7 ail 'You cannot input an empty string as a track r i)\n8 @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n[\n10 nd Pending: (Failures listed here are expected and do not affect your suite's status)\n1 |\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmseSin Alensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA LU The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n9 nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 [LITES Tol =Tl STl TS Fog g Tl 3T L] as a track\"\n12 expect(music_tracker.add('')).to raise_error *¥oullcannot input an empty string as a rack! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.nev 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"Ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n;: ) expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'l] Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& P72 S S - T (Il G TURYA RN CR AN S VDS T o - T QRN - T D S o L - Tl - ) A« o] © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1213,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ # 06_music_design.md U @ 08_music_design_challengerb U wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nx‘ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ne 7 ail 'You cannot input an empty string as a track'| % 1t)\n- @tracker << track ) make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n[\nig | nd Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\n8 en The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T fog Tl =T 0] as a track\"\n12 expect (music_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n4 music_tracker.add( t‘elln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n;: ) expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'l] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& P72 SR T Ll T G TURYA R R A &g TES T o - T QRN - T A S o L - Tl - ) A o) > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1214,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nx‘ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n2 7 ail 'You cannot input an empty string as a track'| T Y\n- @tracker << track ) make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\n[\nig | nd Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\n8 en The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T fog Tl =T 0] as a track\"\n12 expect (music_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n4 music_tracker.add( t‘elln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n;: ) expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'l] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& P72 SR T Ll T G TURYA R R A &g TES T o - T QRN - T A S o L - Tl - ) A o) > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n® , Cal acas 4 T 0\n"
  },
  {
    "seconds": 1215,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nB P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n4 7 ail 'You cannot input an empty string as a track'| I i)\n8 @tracker << track ° make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig | d Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Alensacmemat ) ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\ns eny The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ 1ol =T L] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\nbk} end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n17 music_tracker.add( tﬂﬂlu a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'l] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1216,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nm P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ne 7 ail 'You cannot input an empty string as a track'| \";I:; 0\n8 @tracker << track e make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig | d Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( tﬂﬂln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1217,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n0 BTSN @ 00wl tesgnshalaget 0¥ uo- & [BEE A= I\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nm P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\ne 7 fail ‘You cannot input an empty string as a track' ]I\n8 r make_snippet method\nmh% return string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig | d Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( tﬂﬂln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n: 3 . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1218,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ ¥ 06 _music_design.md U @ 06_music_design_challengerb U X no- & B +v B8 § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nn P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n. s ol o T p— e it)\ns 7 fail ‘You cannot input an empty string as a track'\n] @tracker << track make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig d Pending: (Failures listed here are expected and do not affect your suite's status)\n[\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n& omsia_stedonsSlnatapecat O % \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add(\"')).to raise_error 'You cannot input an empty string as a track! —\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"u a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1219,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ # 06_music_design.md U @ 08_music_design_challengerb U nmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nB P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n2 T IEE=———., it)\nG 7 fail 'You cannot input an empty string as a track' if|\n8 @tracker << track < 11 make_snippet method\nreturn string if less then 5 words or equal\n9 nif if returns first 5 words of a longer string & appended ellipsis\n10 end Oif elsif if elsif\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n1 | 04f elsif else if elsif else s e yod\n1) MusicTracker list method will return all tracks added\n12 def list 0if else if else # Temporarily s e it\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( t‘e\"Ln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1220,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ # 06_music_design.md U @ 08_music_design_challengerb U @ nmom- @ [BEIE SN B\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n“ p def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nv Pt R P B ey e e ) it\n8 7 fail 'You cannot input an empty string as a track' if tracK !\n] @tracker << track «track ake_snippet method\n. return string if less then 5 words or equal\n9 = tracker returns first 5 words of a longer string & appended ellipsis\nen\n10 d = tracks Pending: (Failures listed here are expected and do not affect your suite's status)\n1 | = Track\n1) MusicTracker list method will return all tracks added\n12 def list «MusicTracker # Temporarily skipped with xit\n13 return @tracker music_tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n] - [\n1 music_tracker.add( t‘e\"Ln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n: n7,Col €8  Spaces 4 T Q4\n"
  },
  {
    "seconds": 1221,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ # 06_music_design.md U @ 08_music_design_challengesb U ® nmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n3‘ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\ne 7 fail *You cannot input an empty string as a track' if track.em 10\n] @tracker << track = enpt) snippet method\n= ———tumn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig ‘ d Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end 2) MusicTracker add method will fail if music track already exists in array\n15 | ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( tﬁﬂln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1222,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ ¥ 06 _music_design.md U @ 06_music_design_challengesb U @ no- & B +v B8 § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n“ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nP ’ D L e T y 2t ] P m—— it)\nCl 7 fall \"You cannot :J_x,l:,,;a,t,,,u empty string as a track’ f track.empty]\n8 (LT T S 4 -1 make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig d Pending: (Failures listed here are expected and do not affect your suite's status)\n[\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end PR TES TR T T e T P AR F AR Gl IS TR T QN U T VS € S DTl 31\n15 | # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n& omsia_stedonsSlnatapecat O % \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add(\"')).to raise_error 'You cannot input an empty string as a track! —\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"u a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1223,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ ¥ 06 _music_design.md U @ 06_music_design_challengesb U @ no- & B +v B8 § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n“ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nV= ; e T B Ryt o7 T | it)\nCl 7 fall \"You cannot :J_x,l:,,;a,t,,,u empty string as a track’ f track.empty]\n8 (LT T S 4 -1 make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig d Pending: (Failures listed here are expected and do not affect your suite's status)\n[\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end PR TES TR T T e T P AR F AR Gl IS TR T QN U T VS € S DTl 31\n15 | # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n& omsia_stedonsSlnatapecat O % \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add(\"')).to raise_error 'You cannot input an empty string as a track! —\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"u a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1224,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ ¥ 06 _music_design.md U @ 06_music_design_challengesb U @ no- & B +v B8 § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n“ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n-4 4 Ve cannot inout an emptv strina as a track' ] e | it)\nCl 7 fail \"You cannot 1nput an empty string as a track’ f track.empty:\n8 (LT T S 4 -1 make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig d Pending: (Failures listed here are expected and do not affect your suite's status)\n[\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end PR TES TR T T e T P AR F AR Gl IS TR T QN U T VS € S DTl 31\n15 | # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\n[ IR0\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n& omsia_stedonsSlnatapecat O % \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add(\"')).to raise_error 'You cannot input an empty string as a track! —\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"u a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1225,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nQ ¥ 06 _music_design.md U @ 06_music_design_challengesb U @ no- & B +v B8 § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n“ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n= ; R T e T e e e Sk o rEee 5 ) R e D e it)\nCl 7 fall \"You cannot :J_x,l:,,;a,t,,,u empty string as a track’ f track.empty?|\n8 (LT T S 4 -1 make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig d Pending: (Failures listed here are expected and do not affect your suite's status)\n[\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end PR TES TR T T e T P AR F AR Gl IS TR T QN U T VS € S DTl 31\n15 | # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n16 end\n[ IR0\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n& omsia_stedonsSlnatapecat O % \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add(\"')).to raise_error 'You cannot input an empty string as a track! —\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"u a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1226,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ ¥ 06 _music_design.md U @ 06_music_design_challengerb U X no- & B +v B8 § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\no 1 class MusicTracker #add method will fail if given empty string\n“ P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) o add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n=4 Y [Rvn rannad { _I_*f 1 an amntyv ctrina ac a *rack! rack amntu? it)\nCl 7 Tfall You cannot Imput an empty string as a track’ [ track.empty?,\n8 (LT T S 4 -1 make_snippet method\nreturn string if less then 5 words or equal\n9 returns first 5 words of a longer string & appended ellipsis\nen\nig d Pending: (Failures listed here are expected and do not affect your suite's status)\n[\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/@6_music_design_challenge_spec.rb:15\n14 end PR TES TR T T e T P AR F AR Gl IS TR T QN U T VS € S DTl 31\n15 | # Temporarily skipped with xit\n16 end # ./spec/06_music_design_challenge_spec.rb:22\n[ IR0\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n& omsia_stedonsSlnatapecat O % \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add(\"')).to raise_error 'You cannot input an empty string as a track! —\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n1 music_tracker.add( t‘e\"u a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1227,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\nIQ # 06_music_design.md U @ 08_music_design_challenge.rb U ‘& wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nI_& P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\ne 7 fail ‘You cannot input an empty string as a track' if track.empty?\n8 @tracker << track make_snippet method\nh .y return string if less then 5 words or equal\n9 I returns first 5 words of a longer string & appended ellipsis\n[\nig | nd Pending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n12 def list # Temporarily skipped with xit\n13 return @tracker # ./spec/06_music_design_challenge_spec.rb:15\n14 end AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 | ER TS ARSI ST RN AL IS R\n16 end # ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ ORmsesSin Atlensacmemat ! ' Deprecation Warnings:\nspec) @ 06_music_design_challenge_spec.rb\n8 en The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T fog Tl =T 0] as a track\"\n12 expect (music_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\nl - [\n4 music_tracker.add( t‘e\"Ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\n: 3 . - . \"i - .\n;: ) expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'l] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& P72 SR T Ll T G TURYA R R A &g TES T o - T QRN - T A S o L - Tl - ) A o) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1228,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? )\n8 rac) vel make_snippet method\nreturn string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/06_music_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\ns eny The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ 1ol =T L] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\nbk} end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n] - [\n17 music_tracker.add( t‘e‘lu a?ele ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ) expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'l] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1229,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\ne 7 fail 'You cannot input an empty string as a track' if track.empty? !\n8 | : .l‘irﬁj.k:j:rmj < track make_snippet method\nS B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def st s e yod\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( tﬂﬂln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1230,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\ne 7 fail 'You cannot input an empty string as a track' if track.empty? !\n8 | : .l‘irﬁj.k:j:rmj < track make_snippet method\nS B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def st s e yod\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( tﬂﬂln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1231,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ ¥ 06_music_designmd U @ 08_music_design_challengerb U X no- & B +v B § x\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nE @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? )\n8 ‘@tracker << track make_snippet method\ne DR return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list s xpee yed\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily skipped with xit\n13 end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/@6_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n# Ohumsie. s slenerapeein B ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 [LITES Tol =Tl STl T3 Fog g Tol =T T as a track\"\"\n12| expect(music_tracker.add(*)).to raise_error *YGillEaNNOY HApUEIaNERFEySEFING A aIEracK! -\n13 end BT T I LT R R T R T T T ) R 4 T W e 1 L R )\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.nev 1 deprecation warning total\n| . - '\n17 music_tracker.add( t‘e\"Ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ; expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'] Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1232,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\n35 P def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? )\n8 @tracker << track make_snippet method\nB — B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/@6_nusic_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( t‘e\"ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ; expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1233,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE p def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? )\n8 @tracker << track make_snippet method\nB — B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/@6_nusic_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( t‘e\"ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ; expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1234,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE p def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? )\n8 @tracker << track make_snippet method\nB — B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/@6_nusic_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( t‘e\"ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ; expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1235,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wmom- @ [BETNE NI\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE p def initialize #remove method will remove the given task from the todo array\n3 @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? )\n8 @tracker << track make_snippet method\nB — B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list 9 xpec you\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily s ith xit\n13 end # ./spec/@6_nusic_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n¥ O msesSin Atlensacmemat ! ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n| . - '\n1 music_tracker.add( t‘e\"ln a?e.le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ; expect(music_tracker.list).to eq ['Hello - adele’, ’'lie - nf'] Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] 1\n"
  },
  {
    "seconds": 1236,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ # 06_music_design.md U @ 08_music_design_challengerb U X wnmo- @ [BEIE SN B\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE 2 def initialize #remove method will remove the given task from the todo array\nE @tracker = [] MusicTracker\n& 4 end adds song to tracker\n‘ adding an empty string will fail (FAILED - 1)\nE:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? I !\n8 @tracker << track make_snippet method\nT B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list s xpee yed\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily skipped with xit\n13 end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding-an empty string will fail\nFailure/Error: expﬁg(mslc_tncker.ndd(\")).to raise_error 'You cannot input an empty string|\nEEE R4 &\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\n# ./spec/@6_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n# Ohumsie. s slenerapeein B ' Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, you should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation matcher or the matcher must implement ‘suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty.\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 [LITES Tol =Tl STl T3 Fog g Tol =T T as a track\"\"\n12| expect(music_tracker.add(*)).to raise_error *YGillEaNNOY HApUEIaNERFEySEFING A aIEracK! -\n13 end BT T I LT R R T R T T T ) R 4 T W e 1 L R )\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.nev 1 deprecation warning total\n| . - '\n17 music_tracker.add( t‘e\"Ln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 | music_tracker.add (*’lie - nf'} 12 examples, 1 failure, 2 pending\n. . . - . \"i - .\n21’: ; expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'] Failed examples:\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1237,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n0 BTN @ 00w tegnshaaggest U X uo- & [BEE A= I\ne #list method will ret 11 tasks added within th '\nmethod w: return a as El W e array\nR 1 class MusicTracker #add method will fail if given empty string\nE P def initialize #remove method will remove the given task from the todo array\nk] @tracker = [] MusicTracker\n& 4 end | adds song to tracker\n‘ 8 adding an empty string will fail (FAILED - 1)\na:? 5 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n[ def add(track) add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit\nG 7 fail 'You cannot input an empty string as a track' if track.empty? )\n8 @tracker << track make_snippet method\nB — B return string if less then 5 words or equal\n9 end returns first 5 words of a longer string & appended ellipsis\n10\nLU UG SAUT R S LT T T ted and do not affect r suite's status)\n11 | def list s e yod\n1) MusicTracker list method will return all tracks added\n12 | return @tracker # Temporarily skipped with xit\n13 end # ./spec/@6_music_design_challenge_spec.rb:15\n14 | AR TES TG T T e T P T AR O E AR Gl IS TR T QN U T VS E S DTl 31\n15 end ER TS ARSI ST RN AL IS R\n# ./spec/06_music_design_challenge_spec.rb:22\nFailures:\n1) MusicTracker adding an empty string will fail\nFailure/Error: expect(music_tracker.add('')).to raise_error 'You cannot input an empty string|\nEE R4\nexpected Exception with \"You cannot input an empty string as a track\" but was not given a b\nlock\nVAT L TES T IS I R A GO SR T o B P T B ) G T S 0 T3 € IS TS I (-t TR D B\n¥ O must s saenaxepeto M 7% \" Deprecation Warnings:\nspec ) @ 06_music_design_challenge_spec.tb\nLA UL The implicit block expectation syntax is deprecated, should pass a block rather than an argume\n] nt to ‘expect’ to use the provided block expectation yrn?égher or the matcher must implement 'suppor\n. . ) ts_value_expectations?'. e.g ‘expect { value }.to raise Exception with \"You cannot input an empty.\n10 it 'adding an empty string will fail' do string as a track\"' not ‘expect(value).to raise Exception with “You cannot input an empty string\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] as a track\"\n12 expect (nusic_tracker.add('')).to raise_error *¥oulcannot input an empty string as a track! -\n13 end If you need more of the backtrace for any of these deprecations to\nidentify where to make the necessary changes, you can configure\n14 “config.raise_errors_for_deprecations!’, and it will turn the\n15  xit 'list method will return all tracks added' do deprecation warnings into errors, giving you the full backtrace.\n16 music_tracker = MusicTracker.new 1 deprecation warning total\n] - [\n1 music_tracker.add( tﬁﬂln a?e'le ) Finished in ©.8198 seconds (files took 8.12722 seconds to load)\n18 music_tracker.add (’lie - nf'} 12 examples, 1 failure, 2 pending\ns : . - . \"MNie = Ll\n21’: ) DA CTE TR T T S 3 I ST I TI R R T AR SR | A Pt Yop——\nen\n® 21 rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n& 22 xit 'add method will fail if music track already exists in array' do > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1238,
    "text": "o000 06_music_design_challenge.rb — Skill_Challenges DBEmlos\n@'Mb'\\-mmwmux no- @ Don ++ B & x\nb > @ 06_music_design_challenge.rb\n0 1 class MusicTracker - 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ '\n% 2 | def initialize\nk] [T S|\n& 4 ‘ end [\nEI i\n6 def add(track)\n? 7 fail 'You cannot input an empty string as a track' if track.empty?\n8 _\n] end\n10\n11 | def list\n12 [ return @tracker\n13 end\n14 |\n15 end\n@ 06_music_design_challenge_spec.rb U %\nspec) @ 06_music_design_challenge_spec.tb\n8 enu\n9 b\n10 it 'adding an empty string will fail' do\n11 [LTTES Kol - Tl TR T Do A =Tl (T g L]\n12 expect(music_tracker.add('')).to raise_error ‘Yol cannot) input an empty string as a track! —\n13 end\n14\n15  xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.nev\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add (*lie - nf*}\n19 | DA CTE TR T T S 3 I ST I TI R R T AR SR | A\n) p{] end\npal\n& P2 S AT I TR AR AN § i VS T o o Tl RN -1 S G 0 S - Tl ARG )\n"
  },
  {
    "seconds": 1239,
    "text": "o000 06_music_design_challenge.rb — Skill_Challenges DBEmlos\n@'Mb'\\-mmwmux no- @ Don ++ B & x\nb > @ 06_music_design_challenge.rb\nfel 1 class MusicTracker - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rsped] !\n% 2 | def initialize\nk] [T S|\n& 4 end [\nEI i\n6 def add(track)\n? 7 fail 'You cannot input an empty string as a track' if track.empty?\n8 _\n] end\n10\n11 | def list\n12 [ return @tracker\n13 end\n14 |\n15 end\n@ 06_music_design_challenge_spec.rb U %\nspec) @ 06_music_design_challenge_spec.tb\n8 enu\n]\n10 it 'adding an empty string will fail' do\n11 [LTTES Kol - Tl TR T Do A =Tl (T g L]\n12 expect(music_tracker.add('')).to raise_error ‘Yol cannot) input an empty string as a track! —\n13 end\n14\n15  xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.nev\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add (*lie - nf*}\n19 | DA CTE TR T T S 3 I ST I TI R R T AR SR | A\n) p{] end\npal\n& P2 S AT I TR AR AN § i VS T o o Tl RN -1 S G 0 S - Tl ARG )\n"
  },
  {
    "seconds": 1240,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn N\n@ SOt debami R @ 06 mulo.tesign shallengesh U X no- & [BETIE =1 I\nb > @ 06_music_design_challenge.rb\nJel 1 class MusicTracker - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\nk 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n‘ Tod\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1ist method will return all tasks added within the array\n#add method will fail if given empty strin\n? 7 fil ‘You ca\"no input an empty string as a track' if track.empty? #remove method will remvg the glzez task gmm the todo array\n— tracker << track\nbt Sl B MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1 def list list method will return all tracks added (PENDING: Temporarily skipped with xit)\n1 \\ add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker e\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 | d returns first S words of a longer string & appended ellipsis\neni\nDU R SRR SRS I T Ty T T B LT G R 1) ) i (' R TTTTE TR RO R S £1 T\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:15\nAR TS T p T T g O S T AR R B B TES T T Q) T VA S € S T Tl 1Y)\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n@ 06_music_design_challange_spec.rb U X IR P A U\no) & “J\"\"‘;{)\"\"L\"\"\"m-m 1) MusicTracker adding an empty string will fail\ne & Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nB : N RuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 (LTI Tol - 1o YA T3 fog ™ Tl =T M ] H 'nm/asgmm‘d:ﬂgn“mﬂﬁ\" g bt lock {2 levels) in red\n) | # . Wrbz12:in '\n12| expect(music_tracker.add(*\")). to raise_srror *fGilcaRNOEISNPUEIaAIEHFEy SEring asIalErack! pspec/obsic sestycratiense spe rbelzein plock (2 levls) dn <tp (required):\n13 end Finished in ©.80492 seconds (files took ©.12887 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.nev rspec ./spec/06_music_design_challenge_spec.rb:1® # MusicTracker adding an empty string will fail\n17 LU Rl d Tl ST L O Y R T [ (3 1\nv oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 ‘ music_tracker.add (*lie - nf*} P 9 1\n19 DA CTE TR T T S 3 I ST I TI R R T AR SR | A\n) 20 end\n21\n& P22 SR - TR RN G R A g VRS ol f - To QR N T S ) 3 LTl ) A ]\n"
  },
  {
    "seconds": 1241,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nb > @ 06_music_design_challenge.sb\nfel 1 class MusicTracker * » 0SWinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far:that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\nP ; #add method will fail if given empty string\n© 7 ll 'You cannot input an empty string as a track' if track.empty? #remove method will remove the given task from the todo array\n8 _ ttracker << track\n=LA 2iE MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nLCUUETT E (G TAUT R ST Y YR T S Y SO BT G DT S 4 Y3 VT TR C A2 14T )\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\npao2 ; “JWW* 1) MusicTracker adding an empty string will fail\ni Failure/Error: fail 'You cannot input an empty string as a track' it track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 nusic_tracker = MusicTracker.new § -/Lb/SG_muslc. design._chalienge, rb:7:in ok (2 level (regiitred)s®\n12 expect(music_tracker.add('')).to raise_error '_ r ~/APRCIVE_RARE JRSI0N ChaL1g0g8. Specs MiLZLN “Blogk (2 Teykta) 4 <top {ragiired)>\n13 end Finished in 8.88492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1 # MusicTracker adding an empty string will fail\n17 [LTES LR - T I [ [ T A R [ A 1\n- - DSWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') 4 . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1242,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nb > @ 06_music_design_challenge.sb\nfel 1 class MusicTracker * » 0SWinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far:that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\nP ; #add method will fail if given empty string\n© 7 ll 'You cannot input an empty string as a track' if track.empty? #remove method will remove the given task from the todo array\n8 _ ttracker << track\n=LA 2iE MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nLCUUETT E (G TAUT R ST Y YR T S Y SO BT G DT S 4 Y3 VT TR C A2 14T )\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\npao2 ; “JWW* 1) MusicTracker adding an empty string will fail\ni Failure/Error: fail 'You cannot input an empty string as a track' it track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 nusic_tracker = MusicTracker.new § -/Lb/SG_muslc. design._chalienge, rb:7:in ok (2 level (regiitred)s®\n12 expect(music_tracker.add('')).to raise_error '_ r ~/APRCIVE_RARE JRSI0N ChaL1g0g8. Specs MiLZLN “Blogk (2 Teykta) 4 <top {ragiired)>\n13 end Finished in 8.88492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1 # MusicTracker adding an empty string will fail\n17 [LTES LR - T I [ [ T A R [ A 1\n- - DSWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') 4 . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1243,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker * 0swinpinto@ASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n#add method will add task as a string to an array. returns string + a\ng° 5 dd method will add task 1 i dded\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 11 ‘You canot input an empty string as a track' if track.empty? #remove ruth:d will remvg the mez task gmm the todo array\n8 | @tracker << track\n: . - MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\n’P\"’; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€r Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [ VES Kol - T ST (T8 Lot Tl (T g () # ./11b/06_music_design_challenge.rb:7:in ‘add’\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/@6_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.88492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/06_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n17 LTES LR 1o O [ [ T AT R T [ A 1\n- - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add (‘'lie - nf') P 9 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 7 S ST o o TR AN R AR VTS T o - Tel Q- R0 - T S G S U Tl ARG )\n"
  },
  {
    "seconds": 1244,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker * 0swinpinto@ASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n#add method will add task as a string to an array. returns string + a\ng° 5 dd method will add task 1 i dded\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 11 ‘You canot input an empty string as a track' if track.empty? #remove ruth:d will remvg the mez task gmm the todo array\n8 | @tracker << track\n: . - MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\n’P\"’; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€r Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [ VES Kol - T ST (T8 Lot Tl (T g () # ./11b/06_music_design_challenge.rb:7:in ‘add’\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/@6_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.88492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/06_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n17 LTES LR 1o O [ [ T AT R T [ A 1\n- - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add (‘'lie - nf') P 9 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 7 S ST o o TR AN R AR VTS T o - Tel Q- R0 - T S G S U Tl ARG )\n"
  },
  {
    "seconds": 1245,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) :::jt _t:h:d \\R{lfrﬁuz a}l taskstadd:di:ithln the array\nmethod w. a ven str.\n8 7 ail You cannot input an empty string as a track' if track.empty? #remove method will nemvg the ;EE'Y‘ task gmm the todo array\n8 @tracker << track\nSESE < MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 4 returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\nspec ) : Wﬁmm 1) MusicTracker adding an empty string will fail\n9 €l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\nLULES I T\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add’\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12887 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - Tl T T [ [ T A G IR T [ Y\n18 mus ic_tracker ad d( (*lie - nf') ) - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % Jj !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 7 S ST o o TR AN R AR VTS T o - Tel Q- R0 - T S G S U Tl ARG )\n"
  },
  {
    "seconds": 1246,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=0n NN\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) :::jt _t:h:d \\R{lfrﬁuz a}l taskstadd:di:ithln the array\nmethod w. a ven str.\n8 7 ail You cannot input an empty string as a track' if track.empty? #remove method will nemvg the ;EE'Y‘ task gmm the todo array\n8 @tracker << track\nSESE < MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 4 returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\nspec ) : Wﬁmm 1) MusicTracker adding an empty string will fail\n9 €l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\nLULES I T\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add’\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12887 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - Tl T T [ [ T A G IR T [ Y\n18 mus ic_tracker ad d( (*lie - nf') ) - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % Jj !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 7 S ST o o TR AN R AR VTS T o - Tel Q- R0 - T S G S U Tl ARG )\n"
  },
  {
    "seconds": 1247,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nib> @ 08_music_design_challenge.sd\n© oswinp: (] |_Cha ges % rspec\np 1 class MusicTracker inpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challen %\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) ﬂﬁt rn:h:d :{'{lfrﬁum a}l tasks addedi:lthln the array\n#add method w. a ven empty str\n8 7 ail YOU cannot input an empty string as a track' if track.empty? #remove method will rvermvg the ;Eel{ task 2rﬂ|‘l the todo array\n8 @tracker t rack\nLo - MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % PR P A U H\nspao) ; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_nusic_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LTES LR 1o O [ [ T AT R T [ A 1\n= © 0Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add (‘'lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 7 S ST o o TR AN R AR VTS T o - Tel Q- R0 - T S G S U Tl ARG )\n"
  },
  {
    "seconds": 1248,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nib> @ 08_music_design_challenge.sd\n© oswinp: (] |_Cha ges % rspec\np 1 class MusicTracker inpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challen %\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) ﬂﬁt rn:h:d :{'{lfrﬁum a}l tasks addedi:lthln the array\n#add method w. a ven empty str\n8 7 ail YOU cannot input an empty string as a track' if track.empty? #remove method will rvermvg the ;Eel{ task 2rﬂ|‘l the todo array\n8 @tracker t rack\nLo - MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % PR P A U H\nspao) ; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_nusic_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LTES LR 1o O [ [ T AT R T [ A 1\n= © 0Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add (‘'lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 7 S ST o o TR AN R AR VTS T o - Tel Q- R0 - T S G S U Tl ARG )\n"
  },
  {
    "seconds": 1249,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nb > @ 06_music_design_challenge.sb\nJo! 1 class MusicTracker * » DSwinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far:that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\ni #add method will fail if given ty strin\n8 7 11 ‘You canot input an empty string as a track' if track.empty? #remove rnth:d will rernovg the mez task gmm the todo array\n8 @tracker << track\nMusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\n’P\"’; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€ Failure/Error: fail 'You cannot input an empty stl]!.nq as o track' it track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [ VES Kol - T ST (T8 Lot Tl (T g ) # ./11b/06_music_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/@6_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.88492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- - 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') 4 . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1250,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nb > @ 06_music_design_challenge.sb\nJo! 1 class MusicTracker * » DSwinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far:that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\ni #add method will fail if given ty strin\n8 7 11 ‘You canot input an empty string as a track' if track.empty? #remove rnth:d will rernovg the mez task gmm the todo array\n8 @tracker << track\nMusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\n’P\"’; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€ Failure/Error: fail 'You cannot input an empty sti[inq as o track' it track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [ VES Kol - T ST (T8 Lot Tl (T g ) # ./11b/06_music_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/@6_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.88492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- - 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') 4 . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1251,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n NEif\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 Bil 'You cannot input an empty string as a track' if track.empty? #remove method will nemvg :he ;EE'Y‘ task gmm the todo array\n8 _ tracker << track\ne _SRIAERE = MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 4 returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\nspec ) : ou-;ﬁ_g-vwm 1) MusicTracker adding an empty string will fail\nFailure/Error: fail 'You cannot input an empty sti[lnq as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./11b/06_nusic_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n12 examples, 1 failure, 2 pending\n14\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n= o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1252,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n NEif\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 Bil 'You cannot input an empty string as a track' if track.empty? #remove method will nemvg :he ;EE'Y‘ task gmm the todo array\n8 _ tracker << track\ne _SRIAERE = MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 4 returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\nspec ) : ou-;ﬁ_g-vwm 1) MusicTracker adding an empty string will fail\nFailure/Error: fail 'You cannot input an empty sti[lnq as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./11b/06_nusic_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n12 examples, 1 failure, 2 pending\n14\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n= o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1253,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n NEif\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 Bil 'You cannot input an empty string as a track' if track.empty? #remove method will nemvg :he ;EE'Y‘ task gmm the todo array\n8 _ tracker << track\ne _SRIAERE = MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 4 returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\nspec ) : ou-;ﬁ_g-vwm 1) MusicTracker adding an empty string will fail\n9 Failure/Error: fail 'You cannot input an empty str]Inq as a track' if track.empty?\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./11b/06_nusic_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:1@ # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n= o 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1254,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 K =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 LCE (. canot input an empty string as a track' if track.empty? #remove method will rvemvg the ;EEI): task gmrn the todo array\n8 @tracker << track\n'Lrackel ‘fack MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % .. Failures:\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty strjfng EERE IR AT S R {- T - T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 LIS Dol - Tl TRl (T Tof g Tol TN To] # -Illb/ﬂgawsli_d:slsn.chzl{!{nge-rb=7=1nrb‘!gd;\" “block (2 levels) in ired)st\n12| expect(nusic_tracker.add(\"*)).to raise_error fGlGANNOTISNUEIaN CHDEY SEFINGIBSIANERACRY ~ © /e melcseslnutiengespec iidiin Dlock (2 levels) iy <op (required\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1255,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 K =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 LCE (. canot input an empty string as a track' if track.empty? #remove method will rvemvg the ;EEI): task gmrn the todo array\n8 @tracker << track\n'Lrackel ‘fack MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % .. Failures:\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty strjfng EERE IR AT S R {- T - T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 LIS Dol - Tl TRl (T Tof g Tol TN To] # -Illb/ﬂgawsli_d:slsn.chzl{!{nge-rb=7=1nrb‘!gd;\" “block (2 levels) in ired)st\n12| expect(nusic_tracker.add(\"*)).to raise_error fGlGANNOTISNUEIaN CHDEY SEFINGIBSIANERACRY ~ © /e melcseslnutiengespec iidiin Dlock (2 levels) iy <op (required\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1256,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\ne 7 fail 'You cannot input an empty str:l.ng as a track' if track.empty? #remove method will remvg the ;Eez task grurn the todo array\n8 — tracker track\nRt : : LU T f - T T\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker iv)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 g returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % IR - A U H\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l LESAUTEYIST ST -3 A S VIR LT 4 BT - L 141 strif\\g EERE IR AT S R { T -, T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n12 examples, 1 failure, 2 pending\n14\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1257,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\ne 7 fail 'You cannot input an empty str:l.ng as a track' if track.empty? #remove method will remvg the ;Eez task grurn the todo array\n8 — tracker track\nRt : : LU T f - T T\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker iv)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 g returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % IR - A U H\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l LESAUTEYIST ST -3 A S VIR LT 4 BT - L 141 strif\\g EERE IR AT S R { T -, T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n12 examples, 1 failure, 2 pending\n14\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1258,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\ne 7 fail 'You cannot input an empty str:l.ng as a track' if track.empty? #remove method will remvg the ;Eez task grurn the todo array\n8 — tracker track\nRt : : LU T f - T T\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker iv)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 g returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % IR - A U H\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l LESAUTEYIST ST -3 A S VIR LT 4 BT - L 141 strif\\g EERE IR AT S R { T -, T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n12 examples, 1 failure, 2 pending\n14\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1259,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 08_music_design_challenge.rb 1 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\ne 7 fail 'You cannot input an empty str:l.ng as a track' if track.empty? #remove method will remvg the ;Eez task grurn the todo array\n8 — tracker track\nRt : : LU T f - T T\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker iv)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 g returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % IR - A U H\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l LESAUTEYIST ST -3 A S VIR LT 4 BT - L 141 strgEg EERE IR AT S R { T -, T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LTES DR - Tl O [ [ T A G I [ TN\n18 mus ic_tracker ad d( (*le - nf') ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1260,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B ++ B8 & x\nb > @ 08_music_design_challenge.rb 1 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nBg’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\ne 7 fail 'You cannot input an empty str:l.ng as a track' if track.empty? #remove method will remvg the ;Eez task grurn the todo array\n8 — tracker track\nRt : : LU T f - T T\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker iv)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 g returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_gdesign_challenge_specsb U % IR - A U H\nspao) ; Wﬂ“*;-a‘w* 1) MusicTracker adding an empty string will fail\n€l LESAUTEYIST ST -3 A S VIR LT 4 BT - L 141 strjE‘g EERE IR AT S R { T -, T 44\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 expect (nusic_tracker.add('')).to raise_error ._ | # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LTES DR - Tl O [ [ T A G I [ TN\n18 mus ic_tracker ad d( (*le - nf') ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1261,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challenge.rb U X nuo- @ Bos ++ B & x\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker * » 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\ni #add method will fail if given ty strin\n2 7 f.ll 'You Canot input an empty string as a track' if track.empty? #remove rnth:d will remvg the mez task gmm the todo array\n8 — tracker << track\n- Slod L MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsb U % Failures:\n’P\"’; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new ]E M -lllb/ﬂg‘fwsici_desia\".ch:IﬁHQE-rb:7=inrb‘ﬂdd;n “block (2 level (required)s'\n12 expect (nusic_tracker.add(*')).to raise_error 'YoUlCaANOTIIAPULIan enpty String asia tracky — = ¢ °/spec/fe-musicdesign challenge_spec.rbiiz:in “black (2 levels) in <top (required)>\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n= - 0Swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') P . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 22  xit 'add method will fait if music track already exists in array' do\n"
  },
  {
    "seconds": 1262,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challengerb U X nuo- @ Bos ++ B & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker * » 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\ni #add method will fail if given ty strin\n8 7 a.ll ‘You canot input an empty string as a track' if track.empty? #remove rnth:d will remvg the mez task gmm the todo array\n8 _ tracker << track\n- e L MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\n\"‘\"’; “Jﬂﬂﬁ-g\"'w\" 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [LVES Rl - T ST (T Lot - Tel (T g ) # ./1ib/06_music_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ,_ LA L S Tl S T LI DR GO IR YN 1 By S T ) T S 2 VY ) B TS O TR UL D B\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 ]E 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- ~ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') P . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1263,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\ni8] ¥ 06_music_designmd U @ 08_music_design_challengerb U X nuo- @ Bos ++ B & x\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker * » 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\ni #add method will fail if given ty strin\n8 7 a.ll ‘You canot input an empty string as a track' if track.empty? #remove rnth:d will remvg the mez task gmm the todo array\n8 _ tracker << track\n- e L MusicTracker\n9 ‘ end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U % .. Failures:\n\"‘\"’; “Jﬂﬂﬁ-g\"'w\" 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [LVES Rl - T ST (T Lot - Tel (T g ) # ./1ib/06_music_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ,_ LA L S Tl S T LI DR GO IR YN 1 By S T ) T S 2 VY ) B TS O TR UL D B\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 ]E 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- ~ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %.\n18 music_tracker.add ('lie - nf') P . 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1264,
    "text": "A R\n[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\n\nib> @ 08_music_design_challenge.sd\n© oswinp; _Challenges % rspec\np 1 class MusicTracker inpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challen %\nP def initialize GrammarStats\n“ = #check returns true or false if string starts with capital and ends with correct punctuation\n3 racker = []\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n] 5 #add method will add task as a string to an array. returns string + added\nB\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 aﬂ- 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;Eel): task gmrn the todo array\n8 — tracker << track\nil — MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge.specd U * .. Failures:\nspao) ; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nLULIS 1T T\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [ VES Kol - T ST (T8 Lot Tl (T g ) # ./1ib/06_music_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ VAT L S Tl CS T LI TR G T LN B S T ) U1 S 0 2 IV ) IS RS T W TP T D PR\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 ]E 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n- © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 1\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1265,
    "text": "A R\n[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\n\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\nB def add{track) #add method will fail if gi ty strin\nmethod w. a ven str.\n8 7 aﬂ- 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;Eel): task gmrn the todo array\n8 — tracker << track\nil — MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge.specd U * .. Failures:\nspao) ; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nLULIS 1T T\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 [ VES Kol - T ST (T8 Lot Tl (T g ) # ./1ib/06_music_design_challenge.rb:7:in ‘add'\n12 expect (nusic_tracker.add('')).to raise_error ._ VAT L S Tl CS T LI TR G T LN B S T ) U1 S 0 2 IV ) IS RS T W TP T D PR\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 IE 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - Tl T [ [ T A G IR T [ Y\n18 music tracker.ad d( (*le - nf') ) © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1266,
    "text": "# . o . o\n[ N N ] 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n@ ¥ 06_music_designmd U @ 06_music_design_challenge.rb U X noe @ B +- 8 & x\n\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\nE:? 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\ne 7 LCEL (UL inPUt an empty String as a track' if track.empty? #remove method will rernovg the ;Eez task grorn the todo array\n8 — tracker Erack\nLo s MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\nbk} end make_snippet method\n14 return string if less then 5 words or equal\n15 4 returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsb U % Failures:\nspao) ; “Jﬂ\"*;-g\"'w* 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_nusic_design_challenge.rb:7:in “add'\n12 expectﬁ!usic tracker.add(*')).to raise error ._ # ./spec/@6_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 pPA-ET LI U -3 R UL L B T ]\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES LR - Tel T [ [ T AT T [ A 1\n= © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P 9 1\n19 DO LT CITES Dol T TR B £ 0 I LT I L AN DT L LR S I o |\n) 20 end\n21\n"
  },
  {
    "seconds": 1267,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn J\n© ¥ 06 music_designmd U @ 08_music_design_challenge.rb U X ] B +- B & x\nb > @ 06_music_design_challenge.sb .\np 1 class w © 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n5 — Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\ncl 7 ail 'You cannot input an empty string as a track' if track.empty? #remove method will rermvg the :Eeryl task 2ml‘l the todo array\n@tracker << track\n& ‘ B MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music._design_challenge_specsb U X @ m. Failures:\nspao) ; “J\"'*;-a’-\"w\"’ 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You canmnot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 LS Gl o - Tl TR (T8 Do =T (T M [0 # ./1ib/@6_music_design_challenge.rb:7:in ‘add’\n12 expect iy usic_tracker.add('\")).to raise_error K ey # ./spec/06_music_design_challenge_spec.rb:12:in \"block (2 levels) in <top (required)>'\nexpectpnusic_tracker.aad( J-to raise_error ; ‘ Lra\n13 end Finished in ©.0@492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - Tl T [ [ T A G IR T [ Y\n18 rlusic_tracker add( (*lUe - nf') ) © 0Swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1268,
    "text": "- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn J\nQWp | @ 08_music_design_challenge.rb U X% ] B +- 8 & x\nib> @ 08_music_design_challenge.sd .\np 1 class MusicTracker © 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\ncl 7 ail 'You cannot input an empty string as a track' if track.empty? #remove method will rermvg the :Eeryl task 2ml‘l the todo array\n@tracker << track\n& ‘ B MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 | return @tracker i)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsb U @ m. Failures:\nspao) ; “J\"'*;-a’-\"m\"’ 1) MusicTracker adding an empty string will fail\n€ Failure/Error: fail 'You canmnot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 LS Gl - Tl TR (T Do =Tl (T oM [0 # ./1ib/@6_music_design_challenge.rb:7:in ‘add’\n12 pectiis T tracker adatimite ralselerror i Yol PR ‘ iR Sy # ./spec/06_music_design_challenge_spec.rb:12:in \"block (2 levels) in <top (required)>'\nexpectmusic_tracker.add: to raise_error 'You cannot inpi n empty sf g a trac!\n13 end Finished in ©.0@492 seconds (files took ©.12867 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - Tl T [ [ T A G IR T [ Y\n18 mus 1c_tracker ad d( (*le - nf') ) - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1269,
    "text": "A E——————————————————_—_—”———————————\n[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQWp | @ 08_music_design_challenge.rb U % ] B +- 8 & x\n\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\ncl 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task 2m|‘l the todo array\n& MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsb U @ m. Failures:\n\"‘\"’; “J\";ﬁ-g\"'m\"’ 1) MusicTracker adding an empty string will fail\nFailure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 ] usic tracker.add(**)).to raise_error ‘Yo T = i track! # ./spec/06_music_design_challenge_spec.rb:12:in 'block (2 levels) in <top (required)>'\nexpect music_tracker.add('')).to raise_error Ou cannot inp n empty string as Lrac\n13 end Finished in ©.80492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 [LTES Kol o o Tl (T T3 Hat f g Tl =TGR L] rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LTES LR - To O T [ [ T AT R [ (A ) 1\n- © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 music_tracker.add ('lie - nf') P : U\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1270,
    "text": "8 . . \" =]\n[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nawp | @ 08_music_design_challenge.rb U % ] B +- 8 & x\n\nb > @ 06_music_design_challenge.sb\np 1 class MusicTracker * » swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\ncl 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task 2m|‘l the todo array\n& MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsd U @ @ m. Failures:\nspao) ; “J\"'*;-a’-\"w\"’ 1) MusicTracker adding an empty string will fail\ng €l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in ‘add’\n12 p ST e e SiSelerrorE Yol eanno tian enptvistrd EPaoKY # ./spec/06_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\nXpect 1S 1 [racker.adad! ) (0 raise_error 0 (o= [y lplepummuiyle] an empty ring as track\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 [LTES Rellh o o Tl (T T3 Hat f = Tl =T M T rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 music_tracker.add('Hello -~ adele') JR— R skill_Challenges % [] |\n18 music_tracker.add ('lie - nf\")\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1271,
    "text": "8 . . \" =]\n[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n(g SO msseaGund O] @ 08 munic duson shaliongns U X - B Bon +- B & x\n\nib> @ 08_music_design_challenge.sd\np 1 class MusicTracker © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\ncl 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task 2m|‘l the todo array\n& MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 a returns first 5 words of a longer string & appended ellipsis\nern\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.b U @ @ m. Failures:\nspao) ; “J\"'*;-a’-\"w\"’ 1) MusicTracker adding an empty string will fail\n€l Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n]\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in ‘add’\n12 xpect! [Misic tracker.add('\")i.to raise error ‘You cannot input an empty strin ; T Ty # ./spec/06_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\nexpect pIS1C_tracker.adal ) !.TO raise_error ou cannot 1npui { mpty str g as a track\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 [LTES Kol o o Tl (T T3 Hat f o Tl =TGR T rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - Tl T [ [ T A G IR T [ Y\n18 mus 1c_tracker ad d( (*le - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1272,
    "text": "(- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn g\nQ ¥ 06 music_gesignmd U @ 06 music_design challenge.h u % ] B+ B & x\nb > @ 06_music_design_challange.rb 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GranmarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will removg the ;f.l'\\;ez task grorn the todo array\n-]\nLU TageTd Gl\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\nPR ISt e T T g T P T AR O A G IS TR - Td G T T VS £ S T Tl 31\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsd U ® @ m. Failures:\nspac) 8 “J\"-T;MM\"’ 1) MusicTracker adding an empty string will fail\n; eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\nRuntimeError:\n19 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 (LTS Rl - T Y L (TE Lof f = Tol {-Y o 12 # ./1ib/@6_music_design_challenge.rb:7:in “add'\n12 sacti T | ddi*\") -.,Iﬂ, ise error 'You cannot input an empt 7 Py ERVET L TS Tl S LIS CIR COT IR YN B PAS T ) U1 S R TV C S RS L TR UL D P\nexpecti music_tracker.add(\"\")jxto raise_error \"You cannot input an empty string as a track\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15 xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - T LT L (G T A G T [ Y\n18 ‘ mus 1c_track:r :: d(( \"Ue - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n"
  },
  {
    "seconds": 1273,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n(Q RN @ Ot shrsigreshalengeh 0 ] Don ++ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task gmrn the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsd U @ @ m. Failures:\nspac) 8 “J\"-T;MM\"’ 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in ‘add'\n12 e T P s T TN .\"._‘ i CannoEiitut anics S T PR, EVES L T G S G IR EY USRS TTN B PES T I CT S P TV €3 IS LIRS T I (= VN D B\nexpect: music_tracker.addl  \"}.to raise_error \"You cannot input an empty siring as a track\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - T O T L [ T A G T [ Y\n18 ‘ mus 1c_track:r :: d(( \"Ue - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 2 : . R o\n"
  },
  {
    "seconds": 1274,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n(Q RN @ Ot shrsigreshalengeh 0 ] Don ++ B & x\nb > @ 06_music_design_challange.rb T 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n#add method will add task as a string to an array. returns string + a\nBg’ L] hod will add 13 i i dded\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task gmrn the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_specsd U @ @ m. Failures:\nspac) 8 “J\"-T;MM\"’ 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n19 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in “add'\n12 mectilisicitrackerlada Il talraise error \"|\"\" i eannot b Bnlcabty S trinaias i rack” # ./spec/06_music_design_challenge_spec.rb:12:in ‘block (2 levels) in <top (required)>'\n13 end Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 music_tracker = MusicTracker.new rspec ./spec/@6_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R T O T L [ T A G T [ Y\n18 ‘ mus 1c_track:r :: d( (*le - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 2 : . R o\n"
  },
  {
    "seconds": 1275,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n(@ N @ Ot shrgreshalengesh U ] Don ++ B & x\nB> @ 06_music_design_challenge.rd\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task gmrn the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U @ @ m. Failures:\nspac) 8 n;-ﬁmmm 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n10 it 'adding an empty string will fail' do You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new # ./1ib/06_music_design_challenge.rb:7:in ‘add'\n12 ectd music v dd(*\")i.to raise error 'You cannc R P E R e T3 TA ) EVES L T G S G IR EY UL NS TN B3 PES T I CT S P TV €3 IS LIS T I (= V= D B\nST n i VER ol o o Tol T LR B a1se_error \"You cannot input an empty string as a track’\n13 end IE Finished in ©.00492 seconds (files took ©.12807 seconds to load)\n12 examples, 1 failure, 2 pending\n14\n15  xit 'list method will return all tracks added' do Failed examples:\n16 LU Rl 1ol e TE 5 ey 1ol TN ] rspec ./spec/@86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 music_tracker.add('Hello - adele') 1\n- ) © 0swinpinto@MASTUDENT-0Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\n18 ‘ music_tracker.add ('lie - nf') P 9 U\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n6} 22 'add. _method g N 3 3 sady e n arrav' do\n"
  },
  {
    "seconds": 1276,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n(@ RS @ tmskbdgrshaugest U X ] B+~ B & x\nb > @ 06_music_design_challange.rb T 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task 2rur| the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge.specsd U @ Qm- Failures:\nspac) 8 “J\"-ﬁv\"\"w\"’ 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n10 it 'adding an empty string will fail' . You cannot input an empty string as a track\n11 [LVES Kol - T (T (VI8 Lof Tl (T oM 2] # ./1ib/06_music_design_challenge.rb:7:in ‘add' ,\n12 expect{ music_tracker.add('*)}.Jo raise_error 'You cannot input an empty string as a track’ # +/spec/06_nusic_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>\n13 : Finished in ©.60492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 LU Rl 1ol e TE 5 ey 1ol TN ] rspec ./spec/@86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 [LTES R - T O T L [ T A G T [ Y\n18 I n:s 1c_track:r :: d( (*le - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n& 2 t 'add method will fail if music track already exists inarray'do ...\n"
  },
  {
    "seconds": 1277,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'m-,-gv | @ 0 music.design.shallengesb U ] B+~ B & x\nb > @ 06_music_design_challange.rb T 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\nP @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if given ty strin\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task 2rur| the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge.specsd U X Qm- Failures:\nspac) 8 “J\"-ﬁv\"\"w\"’ 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n10 it 'adding an empty string will fail' . You cannot input an empty string as a track\n11 [LVES Nl - T (T (T8 Lo Tl (T M T # ./1ib/06_music_design_challenge.rb:7:in ‘add' ,\n12 expect{ music_tracker.add('')}.to raise_error 'You fannot input an empty string as a track’ # +/spec/06_nusic_design_challenge_spec.rb:12:in “block (2 levels) in <top (required)>\n13 : Finished in ©.60492 seconds (files took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 LU Rl 1ol e TE 5 ey 1ol TN ] rspec ./spec/@86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LITES R - Tl O T L [ T A G I T [ TR\n18 I n:s 1c_track:r :: d( (*le - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) 20 end\n21\n"
  },
  {
    "seconds": 1278,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'m-,-gv | @ 0 music.design.shallengesb U ] B+~ B & x\nb > @ 06_music_design_challange.rb T 18\np 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\n“ 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\nP @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n55’ #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\nB def add(thack) #add method will fail if gi ty strin\nmethod w. a ven str.\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remvg the ;f.l'\\;ez task 2rur| the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music._design_challenge.specsd U X Qm- Failures:\nspac) 8 “J\"-ﬁv\"\"w\"’ 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n10 it 'adding an empty string will fail' . You cannot input an empty string as a track\n11 nusic_tracker = MusicTracker.new ¥ -/Ub/06 usic design chalienge. rb:7in ‘add. ek (2 tevels) in Lred)s®\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’ R e L e L ock (2 levels) in <top (required)>\n13 Finished in ©.60492 seconds (files_took ©.12807 seconds to load)\n14 12 examples, 1 failure, 2 pending\n15  xit 'list method will return all tracks added' do Failed examples:\n16 LU Rl 1ol e TE 5 ey 1ol TN ] rspec ./spec/@86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LIRS R Tl O T L [ T A G T [ TR\n18 I n:s 1c_track:r :: d( (*le - nf*) ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n"
  },
  {
    "seconds": 1279,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'m-,-gv | @ 0 music.design.shallengesb U ] B+~ B & x\nB> @ 06_music_design_challenge.rd\n© oswinp a es % rspec\np 1 class MusicTracker inpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges %\nP def initialize GrammarStats\nE 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\nP @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n5 _ Todo\n] #add method will add task as a string to an array. returns string + added\nB\n[ def add(track) #1list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,mx n:tn:u \\m: ,,,.,,,2 ::2 ;';';e{ :,;k 2m the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail (FAILED - 1)\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker iv)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 p returns first 5 words of a longer string & appended ellipsis\neni\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n@ 06_music_design_challenge_spec.ib U X @ m. Failures:\nspac) 8 “J\"-ﬁv\"\"w\"’ 1) MusicTracker adding an empty string will fail\no eha Failure/Error: fail 'You cannot input an empty string as a track' if track.empty?\n9\nRuntimeError:\n10 it 'adding an empty string will fail' . You cannot input an empty string as a track\n11 music_tracker = MusicTracker.new 1 ¥ -/Ub/06 usic design chalienge. rb:7ein ‘add. ek (2 tevels) in ired)st\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track'.: R e L e L ock (2 levels) in <top (required)>\n13 Finished in ©.60492 seconds (files took ©.12807 seconds to load)\n14 | 12 examples, 1 failure, 2 pending ]I\n15  xit 'list method will return all tracks added' do | Failed examples:\n16 LU Rl 1ol e TE 5 ey 1ol TN ] rspec ./spec/@86_music_design_challenge_spec.rb:10 # MusicTracker adding an empty string will fail\n17 LIRS R Tl O T L [ T A G T [ TR\n18 I n:s 1c_track:r :: d((\"l. ie - nf\") ) © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % | !\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1280,
    "text": "[ X N ] 06_music_design_challenge_spec.rb — Skill_Challenges In=Nn Rl\n() | % Otmssmsnmy | 4 06 i s shsbengest U ¢ - Don +-8 8 x\nb > @ 06_music_design_challenge.sd\no) 1 class MusicTracker © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspecl] !\nR 2 def initialize\nk] | @tracker = []\n& 4 end\noo I\n[ def add(track)\ng 7 fail 'You cannot input an empty string as a track' if track.empty?\n8\n9 L] .\n10\n11 def list\n12 return @tracker\n13 ‘ end\n14\n15 end\n@ 06_music_design_chalienge_spec.rd U X Qo\nspec > @ 06 music_design_challenge_spec.rb\n8 eha\n9\n10 it 'adding an empty string will fail' §8\n11 [LUVES ol o - Tl T (T Lo f =Tl =T g 1)\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track'.\n13\n14\n15  xit 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1281,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n() | Obmsic smsgnmay | @ 06 musc desshalergest U X - Hes ++ 8 8 x\nb > @ 06_music_design_challenge.sd '\nfo 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.8€37 seconds (files took ©.11053 seconds to load)\n-oa.):-:-mmuwmu xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_ spec.\n; ena oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % JI !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’.\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1282,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n() | Obmsic smsgnmay | @ 06 musc desshalergest U X - Hes ++ 8 8 x\nb > @ 06_music_design_challenge.sd '\nfo 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.8€37 seconds (files took ©.11053 seconds to load)\n-oa.):-:-mmuwmu xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_ spec.\n; ena oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % JI !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’.\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1283,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'mp:‘amw-mux -] Blor ++ B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nE 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\né) @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11853 seconds to load)\n¢ ““) :\"\"\"\"“\" SnarapmIO M xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % i !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1284,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'mp:‘amw-mux -] Blor ++ B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nE 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\né) @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11853 seconds to load)\n¢ ““) :\"\"\"\"“\" SnarapmIO M xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % i !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1285,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'mp:‘amw-mux -] Blor ++ B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nE 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\né) @tracker = returns a interger the percentage of text checked so far that passed\n4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11853 seconds to load)\n¢ ““) :\"\"\"\"“\" SnarapmIO M xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % i !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1286,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'mpi‘amwmux ] Boh +~ 5 & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker » oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@trac - returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\n1ist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\no S s B0 1) exanples, 0 failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % Jj !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1287,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'mp:‘amw-mux -] Blor +~ B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ \") - b - \" xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena  oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % Jj !\n=)\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1288,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Bew ++ 8 8\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\n2 def initialize (el =T £l\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15 ]E\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ \") - b - \" xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena  oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % Jj !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1289,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Bew ++ 8 8\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\n2 def initialize (el =T £l\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit 1[\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n.. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ \") - b - \" xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena  oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % Jj !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1290,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Ber ++ 8 & x\nb > @ 06_music_design_challenge.sd '\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nh 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né) @trac - returns a interger the percentage of text checked so far that passed\n4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if‘g;:s then 5 words or equal\n15 d returns first 5 s of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1291,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Ber ++ 8 & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né) T G returns a interger the percentage of text checked so far that passed\n4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) ms!.cTrackeI[ list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1292,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Ber ++ 8 & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will retul!i all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec> @ 08 smusic. design_challenge_spec.\n; ena © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i !\n10 it 'adding an empty string will fail' §8\n11 [LTES ol o - Tod TR [T Hog f g Tol =T M 1] 1\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 22  xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1293,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Ber ++ 8 & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec. 06_music_design_challenge_spec.\n; ena ][ - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % ] !\n10 it 'adding an empty string will fail' §8\n11 (LTS Collh - T TR (VL Lo =Tl =Y g 1)\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 2 +add. method. will fa usic. track. already. exists.in array’.do\n"
  },
  {
    "seconds": 1294,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Ber ++ 8 & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec. 06_music_design_challenge_spec.\n; ena - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % ] !\n10 it 'adding an empty string will fail' §8\n11 (LTS Collh - T TR (VL Lo =Tl =Y g 1)\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14 X\n15  xit 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n& 2 +add. method. will fa usic. track. already. exists.in array’.do\n"
  },
  {
    "seconds": 1295,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'mpi‘amwmux -] Boh +~ B § x\nb > @ 06_music_design_challenge.sd '\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec. 06_music_design_challenge_spec.\n; ena  oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [j !\n10 it 'adding an empty string will fail' §8\n11 (LTS Collh - T TR (VL Lo =Tl =Y g 1)\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13\n14\n15 xii[ 'list method will return all tracks added' do\n16 [LITES Kol o o Tl (T i TE5 Hag f o Tl =T M L]\n17 music_tracker.add('Hello - adele')\n18 ‘ music_tracker.add ('lie - nf')\n19 | expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n"
  },
  {
    "seconds": 1296,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@'m-,-gv | @ 08 music.design_challengeb U X -8 Bos +- B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nZ‘ 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given empty string\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remove the given task from the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec. 06_music_design_challenge_spec.\n; eha © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n10 it 'adding an empty string will fail' do\n11 (LTS Collh - T TR (VL Lo =Tl =Y g 1)\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13 end\n14\n15 | Hit JUist method will return all tracks added* d\n16 [LITES Kol o o Tl (T i TE5 Hat f o Tl =T M L)\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) 20 end\n21\n© 22 xit_ladd method Will fail if music,track already. exists i aEray edo\n"
  },
  {
    "seconds": 1297,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nD | ¥ Otmsic sesgnmdy | @ 08 musicsdesign shallengest U ¥ - Der +- 8 & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nZ‘ 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\nT G returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given empty string\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remove the given task from the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a \" xm am 12 examples, @ failures, 2 pending\nspec. 06_music_design_challenge_spec.\n; ena - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n10 it 'adding an empty string will fail' do\n11 (LTS Collh - T TR (VL Lo =Tl =Y g 1)\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track’\n13 end\n14\n15 | xit 'list method will return all tracks added\n16 [LTES Kol o o Tl (T i V5 Hat f = Tl =T M ] 5\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl :\n21\n© 22 xit_ladd method Will fail if music,track already. exists i aEray edo\n"
  },
  {
    "seconds": 1298,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\ng'mpi‘amwmux -] Boh +~ B § x\nB> @ 06_music_design_challenge.rd '\no) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given empty string\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remove the given task from the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a “'m am 12 examples, @ failures, 2 pending\nspec 06 smusic_design_challenge_spec.|\n; £ © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n19 it 'adding an empty string will fail’ do\n11 music_tracker = MusicTracker.new\n12 expect{ music_tracker.add(\"'')}.to raise_error 'You cannot input an empty string as a track\n13 end\n14\n15 it 'list method will return all tracks added ]\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end\n21\n© 22 it iaddmetbod.will fail if music track. already.exists.in.acray..do\n"
  },
  {
    "seconds": 1299,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\nQ'mp:‘amw-mux -] Blos ++ B & x\nB> @ 06_music_design_challenge.rd\no) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\n— Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\n#add method will fail if given empty string\n8 7 fail 'You cannot input an empty string as a track' if track.empty? #remove method will remove the given task from the todo array\n8 MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\nbk} [0} make_snippet method\n14 return string if less then 5 words or equal\n15 d returns first 5 words of a longer string & appended ellipsis\nen\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a “'m am 12 examples, @ failures, 2 pending\nspec 06 smusic_design_challenge_spec.|\n; e N © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n19 it 'adding an empty string will fail’ do\n11 music_tracker = MusicTracker.new\n12 expect{ music_tracker.add(\"'')}.to raise_error 'You cannot input an empty string as a track\n13 end\n14\n15 it 'list method will return all tracks added ]\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end\n21\n© 22 it iaddmetbod.will fail if music track.already.exists.in.acray..do\n"
  },
  {
    "seconds": 1300,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\nQ'mpi\\-mmwm«- uo- & Qe+ B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker » oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec '\n2 def initialize (el =T £l\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ - ELL IR 14 9] #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 ra [ 4 -\nL . MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 returns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a % .m 12 examples, @ failures, 2 pending\nspec 06 smusic_design_challenge_spec.|\n; €na © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n10 it ‘adding an empty string will fail’ do\n11 LUTES Ui o o To TG | (TR5 T f - [of (- g L1 |\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track!'\n13 end \"\\\n14\n15\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'l]\n) Pl end\n21\n& 22 . xit 'add method will fail if music track. already.exists- in array' do\n"
  },
  {
    "seconds": 1301,
    "text": "(- N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\nQ'mpi\\-mmwm«- uo- & Qe+ B & x\nB> @ 06_music_design_challenge.rd\nfo) 1 class MusicTracker * 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nh 3 ki =11 #check returns true or false if string starts with capital and ends with correct punctuation\n@tracker = returns a interger the percentage of text checked so far that passed\n& 4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ - ELL IR 14 9] #list method will return all tasks added within the array\n#add method will fail if gi ty strin\ng 7 fail 'You cannot input an empty string as a track' if track.empty? ,m‘: ,.:t,,:., \\m: ,,,.,,2 ::: m,_.: :,,;k 2,‘,,, the todo array\n8 racker =< track\nL L MusicTracker\n9 end adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 returns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n6 kit .. Finished in ©.0037 seconds (files took ©.11053 seconds to load)\n¢ v a S ‘m 12 examples, @ failures, 2 pending\nT 06.smusic_design_challenge_spec.\n; ena © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n10 it ‘adding an empty string will fail’ do\n11 LUTES Ui o - To TR (TS Tof f g Tof (-1 oM T | ]E\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track'\n13 end \"‘\n14\n15\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 ST (TS TR - T TG T3 I I I - CE-T: ) RS 6 TR i |\n) Pl end\n21\n& 22 . xit 'add method will fail if music track already.exists- in array' do\n"
  },
  {
    "seconds": 1302,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\ngm-,-gv \\au_mm._mmu- Lo @ B+~ B & x\nB> @ 06_music_design_challenge.rd '\n0 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nh 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\nP T G ‘l returns a interger the percentage of text checked so far that passed\n4 end\n| Todo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ - ELL IR =14 9] #list method will return all tasks added within the array\n#add method will fail if given ty strin\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? #renove method will remove the oives task trom the todo array\n8 @tracker << track\nMusicTracker\n9 end T adds song to tracker\n10 adding an empty string will fail\nlist method will return all tracks added (PENDING: Temporarily skipped with xit)\n11 def list add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n12 return @tracker it)\n13 end make_snippet method\n14 return string if less then 5 words or equal\n15 returns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n# ./spec/86_music_design_challenge_spec.rb:22\n.. Finished in ©.8637 seconds (files took €.11053 seconds to load)\n\"\"‘\")\"‘\"\"\"\". sAalnoaipeetd’y ’m 12 exanples, © failures, 2 pending\nspec 06 smusic_design_challenge_spec.|\n; wie © oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspedll !\n10 it 'adding an empty string will fail’ do\n11 LTS Tl d - T T (TS (o g T T QRO\n12 expect{ music_tracker.add(’')}.to raise_error 'You cannot input an empty string as a track'\n13 end -\n14\n15 it 'list method will return all tracks added*\n16 music_tracker = MusicTracker.new\n17 music_tracker.add('Hello - adele')\n18 music_tracker.add {'lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl 0]\n21\n& pri xit 'add method will fail if music track already exists in array' do\n"
  },
  {
    "seconds": 1303,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQ ¥ 06_music_gesign.md U ‘aouuh.hbuhﬂw-vhu- Lo @ Glnby ++ B & x\nB> @ 06_music_design_challenge.rd . : : \" : : .\np 1 class MusicTracker I nx;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\nB P def initialize ‘ g nod\n= make_snippet met|\n3 @tracker = 1 | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 - Pending: (Failures listed here are expected and do not affect your suite's status)\n3 ELLIR T 9\nP 1) MusicTracker list method will return-all tracks added\n© 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n11 def list pec/06_music_design_ ge_spec\n12 return @tracker Finished in ©.8@37 seconds (files took ©.11853 seconds to load)\nbk} end 12 examples, ® failures, 2 pending\ni; * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\n¢ mee sl Selarapsriol) = adding an empty string will fail\n\"‘\"; “ﬁﬂ’“ﬁw\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nbl add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n10 it 'adding an empty string will fail' do make_snippet method\n11 LTS (ol d - T TG 715 oy - Tl (T g [ ne:urn s:zlng ;f 1esrds tlf\\en 5{ words :r 1:“;1 ded elliosis\n12 expect{ music_tracker.add(*')}.to raise_error 'You cannot input an empty string as a track' o ¢ TArst 3 words of @ longer string & appended ellips\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker 1ist method will return all tracks added\n15 it 'list method will return all tracks added* # Temporarily skipped with xit\n. n - T # ./spec/06_music_design_challenge_spec.rb:15\n16 music_tracker = MusicTracker.new pec/obmsic_design ge_spec\n' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 LTS TR Tl LT TR T R T (Y TR * Tenporarity s uie xit\n18 LTS TR - Tl YT IR B TSR 1) D ] # ./spec/@6_music_design_challenge_spec.rb:22\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 12 examples, @ failures, 2 pending\n& 22 xit 'add method will fail if music track already exists in array' do - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1304,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQ\"M? \\aou-wmu- Lo @ Bles ++ B ® x\nB> @ 06_music_design_challenge.rd . : : \" : : .\np 1 class MusicTracker nx;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\nE P def initialize g hod\n= make_snippet met|\n3 @tracker = 1 | return string if less then 5 words or equal\né} 4 end | returns first 5 words of a longer string & appended ellipsis\n55’ 5 - Pending: (Failures listed here are expected and do not affect your suite's status)\n3 ELLIR T 9\nP 1) MusicTracker list method will return-all tracks added\n© 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 1o (S 4 =T # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/Bbusicdesion chatienge_spec\n12 return @tracker Finished in ©.8@37 seconds (files took ©.11853 seconds to load)\nbk} end 12 examples, ® failures, 2 pending\ni; * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\n& mee sl sHelarapsrio ) = adding an empty string will fail\n\"‘\"; “ﬁﬂ’“ﬁw\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nbl add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n10 it 'adding an empty string will fail' do make_snippet method b\n11 music_tracker = MusicTracker.new ne:urn s:zlng ;f 1esrds tlf\\en 5{ words :r 1:“;1 ded ellipsis\n12 expect{ music_tracker.add(*')}.to raise_error 'You cannot input an empty string as a track' o TArst 3 words of @ longer string & appended ellips\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker 1ist method will return all tracks added\n15 it 'list method will return all tracks added* # Temporarily skipped with xit\n. n - T # ./spec/06_music_design_challenge_spec.rb:15\n16 music_tracker = MusicTracker.new pec/obmsic_design ge_spec\n' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 LTS TR T I T U 1 Ilieuo ELE T * Jenporarity s uie xit\n18 LTS TR - Tl YT IR B TSR 1) D ] # ./spec/@6_music_design_challenge_spec.rb:22\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl (6] Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 12 examples, @ failures, 2 pending\n& 22 xit 'add method will fail if music track already exists in array' do - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1305,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQc—mg | @ 08 music.design._challengesb u % Lo &8 Blon +~ B # x\nB> @ 06_music_design_challenge.rd . : : \" : : .\np 1 class MusicTracker nx;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\nP def initialize\nE = make_snippet method\n3 @tracker = 1 | return string if less then 5 words or equal\né} 4 end | returns first 5 words of a longer string & appended ellipsis\n55’ 5 - Pending: (Failures listed here are expected and do not affect your suite's status)\n3 ELLIR T 9\n1) MusicTracker list method will return-all tracks added\n2 7 fail ‘You cannot input an empty string as a track' if track.empty? ! # ;m;,;ri{y sup:d :it: m\" urn-atl trac ©\n8 1o (S 4 =T # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n1 def list # ./spec/06_music_design_challenge_spec.rb:22\n12 return @tracker Finished in ©.8@37 seconds (files took ©.11853 seconds to load)\nbk} end 12 examples, ® failures, 2 pending\ni; * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\n@ Ok stalncapesio U = N adding an empty string will fail\n\"‘\"; “ﬁﬂ’“ﬁw\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nbl add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n10 it 'adding an empty string will fail' do make_snippet method\n11 LUVES (ol d - T CTE (115 Lot - [l (-1 g [N return string if less then 5 words or equal\n12 expect{ music_tracker.add(*')}.to raise_error 'You cannot input an empty string as @ track' 'crums first 5 words of a langer string & appended ellipsis\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker 1ist method will return all tracks added\n15 it 'list method will return all tracks added’ # Tempom;ély sldn:ed with x{{\ni N \" — # ./spec/ sic_design_challenge_spec.rb:15\n16 music_tracker = MusicTracker.new pec/obmsic_design ge_spec\n17 music_tracker.add('Hello - adele') 2) MusicTracker add method will fail if music track already exists in array\n# Temporarily skipped with xit\n18 LTS TR - Tl YT IR B TSR 1) D ] # ./spec/@6_music_design_challenge_spec.rb:22\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl (6] Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 12 examples, @ failures, 2 pending\n& 22 xit 'add method will fail if music track already exists in array' do - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1306,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nchmp | @ 08 music.design._challengesb u % Lo &8 Blon +~ B # x\nv dd method will fail if ic track alread ] (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar:'s : lemporarily s Wil x\n2 1 class MusicTracker T3]\nE P def initialize o5 hod\n= make_snippet met|\nE @tracker = [ | return string if less then 5 words or equal\né} 4 end | returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/Bbpusicdesion- 9e-spec\n12 return @tracker Finished in ©.8@37 seconds (files took ©.11@53 seconds to load)\nbk} end 12 examples, © failures, 2 pending\n:: * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\n“' Werwigps+ o dds song to tracker\n’ . Igddl.ng an empty string will fail\n\"‘\"; “ﬁ’hﬁa\"m\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\n® add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n10 it 'adding an empty string will fail' do make_snippet method\n11 LUES (ol d - T CT G (Vo5 o B - Tof (-1 g (1N ) s:;lng ;f Ier:s tlfwen :; words or l:quzl ded el\n12 expect{ music_tracker.add(’')}.to raise_error 'You cannot input an empty string as a track' 'CumMs first 5 words of a longer string & appended ellipsis\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 it *list method will return all tracks added’ ELC L CLETSAVAS ST R RIS A\ni - - — # ./spec/86_music_design_challenge_spec.rb:15\n16 music_tracker =MusicTracker.new e i ge-spec\n. ' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 LITES TR - Te LT G Iliello a('iele ) + Tenporarily s it xit\n18 music_tracker.add {'lie - nf') # ./spec/@6_music_design_challenge_spec.rb:22\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie — nf']\n) Pl [ Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 12 examples, @ failures, 2 pending\n& 22 xit 'add method will fail if music track already exists in array' do = 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % I\n"
  },
  {
    "seconds": 1307,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQ!—mp ‘aou-h.hm_mm«- oo @ Bl ++v B & X\nv dd method will fail if ic track alread ists in {PENDING: Te ily skipped with x'\na method wi a music track already exists Elar s : lemporarily s Wil x\n2 1 class MusicTracker T3]\nn P def initialize o5 hod\n= make_snippet met|\nE @tracker = [ | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-all trac e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\nEARYES L TES T I G LI EY A CL TR T Ry\n1 def list pec/obm 9 9e-spec\n12 return @tracker Finished in ©.8@37 seconds (files tock ©.11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\n;; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\ng adds song to tracker _\n’ ve Mladding an empty string will fai\n\"‘\"; “J\"’;ﬁa\"m\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n10 it 'adding an empty string will fail' do make_snippet method\n11 LUVES (ol d - T G (TS ol f o [ (-1 aM (5] return s:;lng if 1er:s tlfwen ,'; words or‘:quzl sed o1t\n12 | expect{ music_tracker.add(’')}.to raise_error 'You cannot input an empty string as a track' 'c UM first 5 words of a longer string & appended ellipsis\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 | it 'list method will return all tracks added’ ¥ Tenporardly skipped with xit\ni . \" — # ./spec/86_music_des challenge_spec.rb:15\n16 music_tracker = MusicTracker.new Pec/06_usic_design. gespec\n. ' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 music_tracker.add( Iliel'lo at'ie'l.e ) * Tenporarily s e i\n18 music_tracker.add {'lie - nf') # ./spec/06_music_design_challenge_spec.rb:22\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie — nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 12 examples, @ failures, 2 pending\n& 22 xit 'add method will fail if music track already exists in array' do - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % I\n"
  },
  {
    "seconds": 1308,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQ\"Mﬂhﬂ? | @ 08 music.design_challenge.h U X Lo @ Blon +~ B # x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\nbk} end 12 examples, © failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\noa sosin_ct . adds song to tracker\n‘ v adding an empty string will fail\n\"‘\"; “ﬁ'gﬁ:\"m\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n19 it 'adding an empty string will fail’ do make_snippet method\n11 LU Tl o - T T L (V15 o =Tl (- g [N return s:;.lng ;f Ier:s tlfwen ,'{ words orl:quzl fed elliosis\n12 expect{ music_tracker.add(’')}.to raise_error 'You cannot input an empty string as a track' 'ctumms first 5 words of a longer string & appended ellips\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 it 'list method will return all tracks added' # Temporarily skipped with xit\ni N - — # ./spec/86_music_des challenge_spec.rb:15\n16 [T Tl =Tl S ) (718 Ml f = (T M [0 pec/06puisic_design ge-spec\n17 music_tracker.add('Hello - adele') 2) MusicTracker add method will fail if music track already exists h;Earray\n' ' # Temporarily skipped with xit\n18 music_tracker.add {'lie - nf') # ./spec/06_music_design_challenge_spec.rb:22\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 pPACVET M COMC IR E A U A LB ]\n& 22 xit 'add method will fail if music track already exists in array' do - 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill _Challenges % I\n"
  },
  {
    "seconds": 1309,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nQ\"Mﬂhﬂ? | @ 08 music.design_challenge.h U X Lo @ Blon +~ B # x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\nbk} end 12 examples, © failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\noa sosin_ct . adds song to tracker\n‘ v adding an empty string will fail\n\"‘\"; “ﬁ'gﬁ:\"m\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n19 it 'adding an empty string will fail’ do make_snippet method\n11 LU Tl o - T T L (V15 o =Tl (- g [N return s:;.lng ;f Ier:s tlfwen ,'{ words orl:quzl fed elliosis\n12 expect{ music_tracker.add(*')}.to raise_error 'You cannot input an empty string as a track! 'ctume first 3 words of a langer string & appended ellips\n13 end = Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 it 'list method will return all tracks added' # Temporarily skipped with xit\ni N - — # ./spec/86_music_des challenge_spec.rb:15\n16 [T Tl =Tl S ) (718 Ml f = (T M [0 IE pec/06puisic_design ge-spec\n17 music_tracker.add('Hello - adele') 2) MusicTracker add method will fail if music track already exists in array\n' ' # Temporarily skipped with xit\n18 music_tracker.add {'lie - nf') # ./spec/06_music_design_challenge_spec.rb:22\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 pPACVET M COMC IR E A U A LB ]\n& 22 xit 'add method will fail if music track already exists in array' do - 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill _Challenges % I\n"
  },
  {
    "seconds": 1310,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\nP 1 class MusicTracker T3]\nE P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\noa soskn_ct . adds song to tracker\n‘ v adding an empty string will fail\n’P\"; “J'“gﬁa‘vm\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n19 it 'adding an empty string will fail’ do make_snippet method\n11 LU Tl o - T T L (V15 o =Tl (- g [N return s:;lng ;f Ier:s tlfwen r{ words ori:quzl ded ellipsis\n12 expect{ music_tracker.add(*')}.to raise_error 'You cannot input an empty string as a track} 'cium¢ first 5 words of a longer string & appended ellips\n13 end Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 it 'list method will return all tracks added' # Temporarily skipped with xit\n: : . - LY DL TS T CS LIRS EI GO TR N S\n16 [T Tl =Tl S ) (718 Ml f = (T M [0 pec/06puisic_design ge-spec\nN ' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 music_tracker.add( Iliel'lo atliele ) jI * Tenporarily s e i\n18 music_tracker.add {'lie - nf') # ./spec/06_music_design_challenge_spec.rb:22\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 pPACVET M COMC IR E A U A LB ]\né} 22 t_'add hod 3 mi o o Tel SRR N QET) (VAN (T o | VARG T - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1311,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\nP 1 class MusicTracker T3]\nE P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\noa soskn_ct . adds song to tracker\n‘ v adding an empty string will fail\n’P\"; “J'“gﬁa‘vm\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n19 it 'adding an empty string will fail’ do make_snippet method\n11 LU Tl o - T T L (V15 o =Tl (- g [N return s:;lng ;f Ier:s tlfwen r{ words ori:quzl ded ellipsis\n12 expect{ music_tracker.add(*')}.to raise_error 'You cannot input an empty string as a track} 'cium¢ first 5 words of a longer string & appended ellips\n13 end Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 it 'list method will return all tracks added' # Temporarily skipped with xit\n: : . - LY DL TS T CS LIRS EI GO TR N S\n16 [T Tl =Tl S ) (718 Ml f = (T M [0 pec/06puisic_design ge-spec\nN ' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 music_tracker.add( Iliel'lo atliele ) jI * Tenporarily s e i\n18 music_tracker.add {'lie - nf') # ./spec/06_music_design_challenge_spec.rb:22\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 pPACVET M COMC IR E A U A LB ]\né} 22 t_'add hod 3 mi o o Tel SRR N QET) (VAN (T o | VARG T - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1312,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\nP 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\n4 end returns first 5 words of a longer string & appended ellips\n& I fi 5 words of a 1 ing & ded ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st adds song to tracker\n‘ v adding an empty string will fail\n’P\"; “J'“gﬁa‘vm\" list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n9 it)\n19 it 'adding an empty string will fail’ do make_snippet method\n11 LU Tl o - T T L (V15 o =Tl (- g [N return s:;lm ;f Ier:s tlfwen r{ words ori:quzl ded ellipsis\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track returns first S words of a langer string & appended ellips\n13 end Pending: (Failures listed here are expected and do not affect your suite's status)\n14 1) MusicTracker list method will return all tracks added\n15 it 'list method will return all tracks added' # Temporarily skipped with xit\n: : . - LY DL TS T CS LIRS EI GO TR N S\n16 [T Tl =Tl S ) (718 Ml f = (T M [0 pec/06puisic_design ge-spec\nN ' - ' 2) MusicTracker add method will fail if music track already exists in array\n17 music_tracker.add( Iliel'lo atliele ) ]I * Tenporarily s e i\n18 music_tracker.add {'lie - nf') # ./spec/06_music_design_challenge_spec.rb:22\nL] expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n) Pl end Finished in ©.88429 seconds (files took .1138 seconds to load)\n21 pPACVET M COMC IR E A U A LB ]\n8 1 add h . ack._already. e n_array' do - 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6LA Skill_Challenges % i\n"
  },
  {
    "seconds": 1313,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nlg ¥ 08_music_designmd U ‘GWMU)- Lo @ Blen +~ B & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEELL VIR G 4\n¢ e v 'm adding an empty string will fail\npec’ @ 08 dusign challenge_tpec.d o Feduny sae iyt Chor . oL e e Ly s avn list method will return all tracks added (PENDING: Temporarily skipped with xit)\n13 = SAPELEL St bR * MaI Y AL SMEnAL il W Ny 10 S0Y 0> < e add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\n14\ns e e Tk o e T 3 55ie adAaHi VA make_snippet method\n15 1t \" list method will return all tracks added’ do return string if less then 5 words or equal\n16 music_tracker = MusicTracker.new returns first 5 words of a longer string & appended ellipsis\n17 music_tracker.add('Hello - adele') Pending: (Failures listed here are expected and do not affect your suite's status)\n. - .\n18 '051C-tracker\"add (*le - nf*) 1) MusicTracker list method will return all tracks added\n19 expect(music_tracker.list).to eq ['Hello - adele’, 'lie - nf'] # Temporarily skipped with xit\n20 end # ./spec/06_music_design_challenge_spec.rb:15\npi ) 3 2) MusicTracker add method will fail if music track already exists in array\n. . . M . # Temporarily skipped with xit\n22 xit 'add method will fail if music track already exists in ZIrray' da # ./spec/@6_music_design_challenge_spec.rb:22\n23 music_tracker = MusicTracker.new\n® 24 music_tracker.add('Hello - adele') Finished in 0.80429 seconds (files took ©.1138 seconds to load)\n25 expect(music_tracker.add('Hello - adele')).to eq ‘Track already exists!' 12 examples, @ failures, 2 pending\nﬁ} 26 A - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1314,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\nP 1 class MusicTracker it)\nE P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-all trac e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/Be 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\nbk} end 12 examples, © failures, 2 pending\ni; * oswinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\nB T e e e Mt s sy 1440 fmmmomat 1 ve v emne e alEMe Wi ey wes ey we w vowee LSt method will return all tracks added (PENDING: Temporarily skipped with xit)\n13 end add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\n14 |\nR R Al S T e T TR A T A A | make_snippet method\n15 AT \"L1ST method will return all tracks added’ do return string if less then 5 words or equal\n16 music_tracker = MusicTracker.new returns first 5 words of a longer string & appended ellipsis\n17 LES TR - T CTET [ [ Y R C -1 [ A Pending: (Failures listed here are expected and do not affect your suite's status)\n1 music_t re ' - nf'\n& usic_tracker.add (*lie at') i i z 1) MusicTracker list method will return all tracks added\n19 expect(music_tracker,list).to eq ['Hello - adele', 'lie - nf'] # Temporarily skipped with xit\n20 end # ./spec/06_music_design_challenge_spec.rb:15\n21 2) MusicTracker add method will fail if music track already exists in array\n[ 4 PR | # Temporarily skipped with xit\np ¥ xit 'add method will fail if music track already exists 1n]§rray [+ [-] # ./spec/06_nusic. design.challenge_spec. rb:22\n23 music_tracker = MusicTracker.new\n[} = .\n® 24 music_tracker.add('Hello - adele’) Finished in 8.00429 seconds (files took 8.1138 seconds to load)\n25 expect{music_tracker.add('Helle - adele')).to eq 'Track already exists!® 12 examples, @ failures, 2 pending\n& 26 end— © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i\n"
  },
  {
    "seconds": 1315,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\nP 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-all trac e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n11 def list /spec/06_music_design_ ge_spec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\nbk} end 12 examples, © failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\no) § Oshaliibaiglomlergespecd list method will return all tracks added (PENDING: Temporarily skipped with xit)\n14 add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\nit 'list method will return all tracks added' do\n15 it 'list method will return all tracks added make_snippet method\n16 music_tracker = MusicTracker.new return string if less then 5 words or equal\n17 music_tracker.add('Hello - adele') returns first 5 words of a longer string & appended ellipsis\n18 music_tracker.add ('lie - nf') Pending: (Failures listed here are expected and do not affect your suite's status)\n19 expect(music_tracker,list).to eq ['Hello - adele', 'lie - nf'] 1) MusicTracker 1ist method will return all tracks added\n20 end # Temporarily skipped with xit\n21 # ./spec/06_music_design_challenge_spec.rb:15\n22 xit 'add method will fail if music track already exists in array' dqﬂ 2) :u:l.cTracki{ add ruthod_\\::lll :ail if music track already exists in array\n= emporarily skipped wit\npi; music_tracker = MusicTracker.new # ./spec/86_nusic_design_challenge_spec. rb:22\n24 LTS TR Ve LT [ TR T R R T [ L\no) 25 | expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!® Finished in 8.80429 seconds (files took .1138 seconds to load)\nb13 end pPACVET M COMC IR E A U A LB ]\n& L - — © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i\n"
  },
  {
    "seconds": 1316,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nlg ¥ 08_music_designmd U ‘GWMU)- oo @ Bl ++v B & X\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/fbm 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\n\"‘\"’; B list method will return all tracks added (PENDING: Temporarily skipped with xit)\nX —— R—— . — . — add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n15 it 'list method will return all tracks added' do it)\n16 music_tracker = MusicTracker.new make_snippet method\n17 music_tracker.add('Hello - adele') N:\"m s:;mg ;1‘ 1855 t'f‘e\" i words :f 1:“;1 ded ellipsis\nreturns first 5 words of a longer str. a ellips\n18 music_tracker.add ('lie - nf') . ) 9 & appen P\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\n21 # Temporarily skipped with xit\n# ./spec/86_music_des challenge_spec.rb:15\n22 xit 'add method will fail if music track already exists in array' do pec/06msic_design ge-spec\ns = b 2) MusicTracker add method will fail if music track already exists in array\nbE] nus%c_tracker Hq?ic'rracker new. 1 # Tenporarily s it it\n24 LS Lol a- T T -0 L L T S VR To T L ) # ./spec/06_music_design_challenge_spec.rb:22\n25 expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!'\n) 26 | end Finished in .80429 seconds (files took €.1138 seconds to load)\npPACVET M COMC IR E A U A LB ]\n27 end\n& — © 0SWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % i\n"
  },
  {
    "seconds": 1317,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nb > @ 06_music_design_challenge.sd - B B s s .\np 1 class MusicTracker “x;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\nE P def initialize o5 hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\nBs g: (Failures listed here are expected and do not affect your suite's status\no 5 Pending: (Failures listed h ed and d 1t ite’ )\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-all trac e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n11 def list /spec/06_music_design_ ge_spec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\nspec> @ O6music design_chalenga spectd ... e meme e e eme meieve o g s magreg e mee @ e = eemen list method will return all tracks added (PENDING: Temporarily skipped with xit)\n13 end add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\n14\n15 R B e e make_snippet method\n] 1L T UST MELNOd Will Feturn att traCks added CO return string if less then 5 words or equal\n16 LTI Coll o o= Tol Y (703 Kol =T (- g (=] returns first 5 words of a longer string & appended ellipsis\n17 music_tracker.add('Hello - adele') Pending: (Failures listed here are expected and do not affect your suite's status)\n18 LTS TR { T T T IR B T ) 1) MusEErracker \\ist method vill ret 1 tracks added\nsicTracker method will return all tracks a\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf'] # Temporarily skipped with xit\n20 end # ./spec/06_music_design_challenge_spec.rb:15\n21 2) MusicTracker add method _wlll fail if music track already exists in array\n22 xit 'add method will fail if music track already exists in array' ddl L ‘;Tm'j;m:m‘:;tzh:{{mg&sm i3\n23 music_tracker = MusicTracker.new . - e\n. ) o .\n(@) 24 nusic_tracker.add(’Hello adele') } a Finished in ©.6@429 seconds (files took ©.1138 seconds to load)\n25 | expect(music_tracker.add('Hello - adele')).to eq 'Track already exists! 12 examples, @ failures, 2 pending\n& 26 end - 05WANP4Nto@MASTUDENT-Oswin-Pinto-C17GHAZ4Q6L4 SKiLL Challenges %\n"
  },
  {
    "seconds": 1318,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nb > @ 06_music_design_challenge.sd - B B s s .\np 1 class MusicTracker “x;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\nE P def initialize o5 hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/Be 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\nspec> @ O6music design_chalenga spectd ... e meme e e eme meieve o g s magreg e mee @ e = eemen list method will return all tracks added (PENDING: Temporarily skipped with xit)\n13 end add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\n14\n15 R B e e make_snippet method\n] 1L T UST MELNOd Will Feturn att traCks added CO return string if less then 5 words or equal\n16 LTI Coll o o= Tol Y G (705 Kol =T (- g (] returns first 5 words of a longer string & appended ellipsis\n17 music_tracker.add('Hello - adele') Pending: (Failures listed here are expected and do not affect your suite's status)\n18 music_tracker:aid. {*1de -~ nt'| 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return a racks a\n19 expect{music_tracker.list).to eq r-rilm - adele', 'lie - nf'] # Temporarily skipped with xit\n20 end # ./spec/06_music_design_challenge_spec.rb:15\n21 2) MusicTracker add method _wlll fail if music track already exists in array\n22 xit 'add method will fail if music track already exists in array' do L :Tm\";;é%:m G;tzh:{{mge_sm i3\n23 music_tracker = MusicTracker.new . - e\n. ) o .\n(@) 24 nusic_tracker.add(’Hello adele') } a Finished in ©.6@429 seconds (files took ©.1138 seconds to load)\n25 | expect(music_tracker.add('Hello - adele')).to eq 'Track already exists! 12 examples, @ failures, 2 pending\n& 26 end - 05WANP4Nto@MASTUDENT-Oswin-Pinto-C17GHAZ4Q6L4 SKiLL Challenges %\n"
  },
  {
    "seconds": 1319,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n() IS @ Ot skrsgreshalengesh U o & Blon +~ B & x\nB> @ 06_music_design_challenge.rd . A . . . ,\np 1 class MusicTracker “x;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\nE P def initialize o5 hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\nP 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n1 def lst # ./spec/06_music_design_challenge_spec.rb:22\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\n;; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\ni i - list method will return all tracks added (PENDING: Temporarily skipped with xit)\n13 end add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\nit)\n14\n15 i+ 11iet mathnd Will return 211 +racke added! do make_snippet method\n4 4T \" L1ST METNOod wWill return attl Tracks adaed co return string if less then 5 words or equal\n16 LITES Tl o =Tl T G 15 Kot f 0= Tef (-1 PR (0 returns first 5 words of a longer string & appended ellipsis\n17 LUTES Ul o - T T L L Y B T T F R Pending: (Failures listed here are expected and do not affect your suite's status)\n18 music_tracker.add ('lie - nf') 1) MusEErracker \\ist method vill ret 1 tracks added\nsicTracker method will return a racks a\n19 expect{music_tracker.list).to eq ['JLuo - adele', 'lie - nf'] # Temporarily skipped with xit\nb1} end # ./spec/06_music_design_challenge_spec.rb:15\npal 2) MusicTracker add method _wlll fail if music track already exists in array\n22 xit 'add method will fail if music track already exists in array' do # Temporarily skipped with xit\n23 music_tracker = MusicTracker.new # +/spec/B6_misic_design_challenge_spec.rb:22\n. ' P .\n(@) 2 music_tracker.add(!Hello i adele') \\ . . Finished in ©.6@429 seconds (files took ©.1138 seconds to load)\n25 | expect(music_tracker.add('Hello - adele')).to eq 'Track already exists! 12 examples, @ failures, 2 pending\n& 26 _end - 05WANP4Nto@MASTUDENT-Oswin-Pinto-C17GHAZ4Q6L4 SKiLL Challenges %\n"
  },
  {
    "seconds": 1320,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nlg ¥ 08_music_designmd U ‘GWMU)- oo @ Bl ++v B & X\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-all trac e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n11 def list /spec/06_nusic_design challenge_spec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\nspec) @ 06.music_design_chalenge_spec b list method will return all tracks added (PENDING: Temporarily skipped with xit)\n15 SR et metRad ST return Al Fracke added 1 Hs add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n) 1t \"List method will return atl Tracks added” do it)\n16 music_tracker = Huficrracker@new. nake_snippet method\n17 LTS TR - T TR G T Y R G- T [ A return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker,list).to eq ['Hello - adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end ZE 1) MusicTracker list method will return all tracks added\nbl # Temporarily skipped with xit\n22 xit 'add method will fail if music track already exists in array' do # ./5pec/06_usic_design challenge_spec.ri:1s\n23 music_tracker = MusicTracker.new 2) MusicTracker add method will fail if music track already exists in array\n[ - ' # Temporarily skipped with xit\n24 music_tracker.add('Hello gdele ) # ./spec/6_nusic_design_challenge_spec. rb:22\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n® end Finished in 8.00429 seconds (files took 0.1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\nﬁ} n - - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1321,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\nlg ¥ 08_music_designmd U ‘GWMU)- oo @ Bl ++v B & X\nb > @ 06_music_design_challenge.sd - B B s s .\np 1 class MusicTracker nx;dd method will fail if music track already exists in array (PENDING: Temporarily skipped with X'\n“ P def initialize o5 hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 - Pending: (Failures listed here are expected and do not affect your suite's status)\n3 ELLIR T 9\n1) MusicTracker list method will return-all tracks added\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? ! # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n1 def lst # ./spec/06_music_design_challenge_spec.rb:22\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n‘ v adding an empty string will fail\nspec) @ 06.music_design_chalenge_spec b list method will return all tracks added (PENDING: Temporarily skipped with xit)\n15 SR et metRad ST return Al Fracke added 1 Hs add method will fail if music track already exists in array (PENDING: Temporarily skipped with x\n) 1t \"List method will return atl Tracks added” do it)\n16 music_tracker = Huficrracker@new. nake_snippet method\n17 LTS TR - T TR G T Y R G- T [ A return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker,list).to eq ['Hello - adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\nbl # Temporarily skipped with xit\n22 xif *add method will fail if music track already exists in array' do # ./5pec/06_usic_design challenge_spec.ri:1s\n23 music_tracker = MusicTracker.new 2) MusicTracker add method will fail if music track already exists in array\n24 music_tracker.add('Hello - adele’) 4 Lohect muste esion ehallenge_spec.rbe22\n25 ’ expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!® -\n® end Finished in 8.00429 seconds (files took 0.1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\n*} n - - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1322,
    "text": "(- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn g\nlg # 08_music_gesign.md U @ 06_music_design_challengeb U X @ Bleor +~ 8 & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\n4 end returns first 5 words of a longer string & appended ellips\n& I fi 5 words of a 1 ing & ded ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\nk] @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n1 def list pec/06 pusic_design. 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\nbk} end 12 examples, © failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n¢ ve «B adding an empty string will fail\nspec ) @ 06.music_design_chalange_spec b list method will return all tracks added (PENDING: Temporarily skipped with xit)\nL Seeiyas o gy . add method will fail if music track already exists in array (PENDING: T rarily skipped with x\n15 it \"list method will return all tracks added' do it) 4 4 emporartly\n16 LTS ok 4y To] T ol HuficTrackergnew. nake_snippet method\n17 LTS TR - T TR G T Y R G- T [ A return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker,list).to eq ['Hello - adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\nbl # Temporarily skipped with xit\n22 At 'add methed will fail if music track already exists in array' do # ./spec/06_usic_design_challenge_spec.rb:15\n23 music_tracker = MusicTracker.new 2) MusicTracker add method will fail if music track already exists in array\n| [ - ' # Temporarily skipped with xit\n24 music_tracker.add(‘Hello gdele ) # ./spec/06_music_design_challenge_spec.rb:22\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!’\n® end Finished in 8.00429 seconds (files took 0.1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1323,
    "text": "(- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn g\nlg # 08_music_gesign.md U @ 06_music_design_challengeb U X @ Bleor +~ 8 & x\nB> @ 06_music_design_challenge.rd\na method wi a music track already exists Elar: s : lemporarily s Wil x\np 1 class MusicTracker n)dd thod will fail if ic track alread ists in {PENDING: T ily skipped with x'\nu P def initialize o5 hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 - Pending: (Failures listed here are expected and do not affect your suite's status)\n3 ELLIR T 9\n1) MusicTracker list method will return-all tracks added\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? ! # Temporarily skipped with xit\nk] @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n1 def lst # ./spec/06_music_design_challenge_spec.rb:22\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\nbk} end 12 examples, © failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added |\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n¢ ve «B adding an empty string will fail\nspec ) @ 06.music_design_chalange_spec b list method will return all tracks added (PENDING: Temporarily skipped with xit)\norecy-e. pez ' . add method will fail if music track already exists in array (PENDING: T rarily skipped with x\n15 it \"list method will return all tracks added' do it) 4 4 emporartly\n16 LTS TR 4 - T4 T Mu.ls.icTracker.new. nake_snippet method\n17 music_tracker.add('Hello - adele') return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker,list).to eq ['Hello -~ adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\n21 # Temporarily skipped with xit\n22 it 'add method will fail Hf music track already exists in array' da # ./spec/06_music_design_challenge_spec.rb:15\n23 music_tracker = MusicTracker.new 2) MusicTracker add method will fail if music track already exists in array\n24 nuipq_tracker.add( ‘Hello - adele') :Tmr;;é%:ic desA;:tzh:{{enge_spec.rnzzz\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n@ Finished in 8.00429 seconds (files took 0.1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\n& == —————— . ———— © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % (| !\n"
  },
  {
    "seconds": 1324,
    "text": "- N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn NN\nQ ¥ 06 music_gesignmd U @ 06_music_design_challenge.rb U X ] Blon +~ B8 8 x\ne dd method will fail if ic track alread ists in {PENDING: T ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker it)\nE P def initialize 8. Sn1ppe hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:22\n1 def list pec/Be 10 9espec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added \\\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n¢ ve 4o adding an empty string will fail\nspec ) @ 06.music_design_challenge_spec.b list method will return all tracks added (PENDING: Temporarily skipped with xit)\n| add method will fail if music track already exists in array (PENDING: T rarily skipped with x\n15 it *list method will return all tracks added' do it) 4 4 emporartly\n= Al\n16 music_tracker Huf.icTracker ew. nake_snippet method\n17 music_tracker.add('Hello - adele') return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\nb # Temporarily skipped with xit\n22 Xit 'add method will fail if music track already exists in array' do i # ./spec/06_music_design_challenge_spec.rb:15\npic LTS Tl = T (71 Koy ff =Tl () [0 2) MusicTracker add method will fail if music track already exists in array\n[ P ' # Temporarily skipped with xit\n24 mugfic_tracker.add('Hello - adele') # ./spec/6_nusic_design_challenge_spec. rb:22\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n@ Finished in 8.00429 seconds (files took 0.1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\né} - - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1325,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n(D | % Otmsicgesgnmd V| @ 06 music.design challengesh U X ] Blon +~ B8 8 x\nB> @ 06_music_design_challenge.rd\na method wi a music track already exists Elar: s : lemporarily s Wil x\np 1 class MusicTracker “)dd thod will fail if ic track alread ists in {PENDING: T ily skipped with x'\n“ P def initialize o5 hod\n_ make_snippet metl\nE @tracker = [] | return string if less then 5 words or equal\né} 4 end 1 returns first 5 words of a longer string & appended ellipsis\n55’ 5 - Pending: (Failures listed here are expected and do not affect your suite's status)\n3 ELLIR T 9\n1) MusicTracker list method will return-all tracks added\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? ! # Temporarily skipped with xit\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T 2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n1 def lst # ./spec/06_music_design_challenge_spec.rb:22\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added .\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n¢ ux a o adding an empty string will fail\nspec ) @ 06.music_design_challenge_spec.b list method will return all tracks added (PENDING: Temporarily skipped with xit)\n| add method will fail if music track already exists in array (PENDING: T rarily skipped with x\n15 it \"list method will return all tracks added' do it) 4 4 emporartly\nt = Tri r.n\n16 music_tracker Hufic acke ew. nake_snippet method\n7 music_tracker.add('Hello - adele') return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\n21 # Temporarily skipped with xit\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:15\n- At \"add method L fail 1f music track already exists in array\nb} music_tracker = MusicTracker.new 2) MusicTracker add method will fail if music track already exists in array\nb2 music_tracker.add('Hello - adele') :Tm'jgé%:m‘::tzh:{{mge_sm fbe22\n25 SO (VIS TR T CYE T L [ T R G Y AR B I T B (- To - T T S B S -\n® 26 end Finished in ©.80429 seconds (files took .1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\nﬁ} - - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n"
  },
  {
    "seconds": 1326,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ # 08_music_gesign.md U @ 06_music_design_challengeh U X @ Bleor +~ 8 & x\nv dd method will fail if ic track alread ists in (PENDING: Te ily skipped with x'\na method wi a music track already exists Elar: s : lemporarily s Wil x\n2 1 class MusicTracker T3]\n“ P def initialize o5 hod\n= make_snippet met|\nE @tracker = [] | return string if less then 5 words or equal\n4 end returns first 5 words of a longer string & appended ellips\n& I fi 5 words of a 1 ing & ded ellipsis\n55’ 5 Pending: (Failures listed here are expected and do not affect your suite's status)\nB - add{trak) 1) MusicTracker list method will ret 11 tracks added\nsicTracker method will return-a racl e\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit\nk] @tracker << track # ./spec/06_music_design_challenge_spec.rb:15\n9 end T  2) MusicTracker add method will fail if music track already exists in array\n10 # Temporarily skipped with xit\n# ./spec/@6_music_design_challenge_spec.rb:22\n1 def list pec/06usic_design_chatlenge.spec\n12 return @tracker Finished in ©.6@37 seconds (files took .11053 seconds to load)\n13 end 12 examples, @ failures, 2 pending\ni; * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nGrammarStats\n#check returns true or false if string starts with capital and ends with correct punctuation\nreturns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\no soslan st ELCEEL VIR G 4\n¢ ux a o adding an empty string will fail\nspec ) @ 06_music_design_challenge_spec.b list method will return all tracks added (PENDING: Temporarily skipped with xit)\nadd method will fail if music track already exists in array (PENDING: T rarily skipped with x\n15 it \"list method will return all tracks added' do it) 4 4 emporartly\nic_t [ Tracker.n\n16 LTS TR 4 =14 Hufic acke. ew. nake_snippet method\n17 music_tracker.add('Hello - adele') return string if less then 5 words or equal\n18 music_tracker.add ('lie - nf') returns first 5 words of a longer string & appended ellipsis\n19 expect(music_tracker,list).to eq ['Hello - adele', 'lie - nf'] ! Pending: (Failures listed here are expected and do not affect your suite's status)\n20 end 1) MusicTracker list method will return all tracks added\n21 # Temporarily skipped with xit\n22 it ‘add method will fail if music track already exists in array' do # ./spec/06_usic_design_challenge_spec.rb:15 X\n23 music_tracker = MusicTracker.new 2) MusicTracker add method will fail if music track already exists in array\n[l - ' # Temporarily skipped with xit\n24 music_tracker.add('Hello - adele') ¥ ./spec/06_nusic. design.challenge_spec. rb:22\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S\n® end Finished in 8.00429 seconds (files took 0.1138 seconds to load)\n27 end 12 examples, @ failures, 2 pending\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1327,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n& 8 sk gesgumiA U] @ 08 smuisio.esig shallengesth U X - 8 Cluby +~ B & x\n@ b > @ 06_music_design_challenge.sd '\n2 1 class MusicTracker\nE 2 def initialize Finished in ©.@@37 seconds (files took @.11853 seconds to load)\n3 @tracker = [] | 12 examples, @ failures, 2 pendhjg\n& 4 end | + 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n0 5 GrammarsStats\n& [ - ELL IR =14 9] tczeck retlltr:s truet:r false :f str;ng s:ar:s :::h cagita:ha:d endzdwlth correct punctuation\nreturns a interger the percentage of text checked so far that pass\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? e pe 9 P\n8 @tracker << track Todo\n#add method will add task as a string to an array. returns string + added\n9 end T  #list nethod will return all tasks added within the array\n10 #add method will fail if given empty string\n#remove method will remove the given task from the todo array\n11 def list\nMusicTracker\n12 return @tracker adds song to tracker\nbk} end adding an empty string will fail .\n14 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n15 ECCNCIGTRTARANE FRRSE & TES PR 3 To Q1 1o E T VAP T SRR TN T VAR €= 10k | \\[ch g 1 WG T RV S 11T WA R4\nit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add methed will fail if music track already exists in array\n@ 06_music_design_challenge.specsb U X o # Temporarily skipped with xit\nspec ) @ 0 susic_dusign_challenge_spec.b # ./spec/06_music_design_challenge_spec.rb:22\n15 it 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new | Pinished dn 0.00429 seconds {{1les tack 0.1138 seconds to lond)\n17 music_tracker.add('Hello - adele') ' ’ ~\n18 music_tracker.add ('lie - nf') !~ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] GrammarStats\n20 end #check returns true or false if string starts with capital and ends with correct punctuation\n21 returns a interger the percentage of text checked so far that passed\n22 it 'add method will fail if music track already exists in array' do Todo . . .\nI’ o e e = R e A T AT #add method will add task as a string to an array. returns string + added\n23 LUUTES Tl o =T T G 1S Mt ™ 1ot (=T (50 #list method will return all tasks added within the array\n[ a ' #add method will fail if given empty string\n24 music_tracker.add('Hello adele’) #remove method will remove the given task from the todo array\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S ‘\n26 erid MusicTracker\n@ ELGEEL IR G d T T\n27 end adding an empty string will fail\nﬁ} l 1list method will return all tracks added\n"
  },
  {
    "seconds": 1328,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n& 8 sk gesgumiA U] @ 08 smuisio.esig shallengesth U X - 8 Cluby +~ B & x\n@ b > @ 06_music_design_challenge.sd '\n2 1 class MusicTracker\nE 2 def initialize Finished in ©.@@37 seconds (files took @.11853 seconds to load)\n3 @tracker = [] | 12 examples, @ failures, 2 pendhjg\n& 4 end | + 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n0 5 GrammarsStats\n& [ - ELL IR =14 9] tczeck retlltr:s truet:r false :f str;ng s:ar:s :::h cagita:ha:d endzdwlth correct punctuation\nreturns a interger the percentage of text checked so far that pass\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? e pe 9 P\n8 @tracker << track Todo\n#add method will add task as a string to an array. returns string + added\n9 end T  #list nethod will return all tasks added within the array\n10 #add method will fail if given empty string\n#remove method will remove the given task from the todo array\n11 def list\nMusicTracker\n12 return @tracker adds song to tracker\nbk} end adding an empty string will fail .\n14 list method will return all tracks added (PENDING: Temporarily skipped with xit)\n15 ECCNCIGTRTARANE FRRSE & TES PR 3 To Q1 1o E T VAP T SRR TN T VAR €= 10k | \\[ch g 1 WG T RV S 11T WA R4\nit)\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nPending: (Failures listed here are expected and do not affect your suite's status)\n1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n# ./spec/06_music_design_challenge_spec.rb:15\n2) MusicTracker add methed will fail if music track already exists in array\n@ 06_music_design_challenge.specsb U X o # Temporarily skipped with xit\nspec ) @ 0 susic_dusign_challenge_spec.b # ./spec/06_music_design_challenge_spec.rb:22\n15 it 'list method will return all tracks added' do\n16 music_tracker = MusicTracker.new | Pinished dn 0.00429 seconds {{1les tack 0.1138 seconds to lond)\n17 music_tracker.add('Hello - adele') ' ’ ~\n18 music_tracker.add ('lie - nf') !~ 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] GrammarStats\n20 end #check returns true or false if string starts with capital and ends with correct punctuation\n21 returns a interger the percentage of text checked so far that passed\n22 it 'add method will fail if music track already exists in array' do Todo . . .\nI’ o e e = R e A T AT #add method will add task as a string to an array. returns string + added\n23 LUUTES Tl o =T T G 1S Mt ™ 1ot (=T (50 #list method will return all tasks added within the array\n[ a ' #add method will fail if given empty string\n24 music_tracker.add('Hello adele’) #remove method will remove the given task from the todo array\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S ‘\n26 erid MusicTracker\n@ ELGEEL IR G d T T\n27 end adding an empty string will fail\nﬁ} l 1list method will return all tracks added\n"
  },
  {
    "seconds": 1329,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn NN\n@ ¥ 08_music_gesignmd U ‘ @ 08_music_design_challengerb U x @ Do ++v B § X\ne T tri if tess then 5 word 18 '\nFeturn string 1 S [} words or equa\nR 1 class MusicTracker returns first 5 wards of a loager string & appended -llipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n)\né} 4 end 1 1) MusicTracker 1ist method will return all tracks added\n# Temporarily skipped with xit\n55’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na -add(traCk) 2) MusicTracker add method will faii if PR T U T S T O |\nsicTracker add method w. a; music track.already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit d ¥\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n9 end T\n10 Finished in 8.00429 seconds (files took ©.1138 seconds to load)\n1 def st 12 examples, @ failures, 2 pending\n12 return @tracker © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n|\n13 end GrammarStats\n14 #check returns true or false if string starts with capital aed ends with correct punctuation\n15 returns a intergec the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list methed will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in arrdy (FAILED - 1)\n€ Ol smbinsobmonapeeo s X B0 nake_snippet method\nspec ) @ 06_music_design_challenge_spec.b retufn string if less then 5 words or equal\n15 it 'list method will return all tracks added' do retums F1rst 3 wards of a longer string & appended elllpsis\n16 music_tracker = MusicTracker.new © Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] expectnd: “Track already exists!™\n20 end got: [\"Hello - adele”, “Mello - adale”)\n21 {compared using ==)\nby it ‘add method will fail if music track already exists in array' do i # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 LUUTES Nl of =T T G 1S et ™ 1ot (T (2 Finished in 6.819 seconds (files took 6.10478 seconds to.load)\nb2 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S Failed examples:\n@ 26 end rspec ./spec/06_music_design_challenge_spec.rb:22 # MusicTracker add metHod will fail if music tra\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1330,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=Nn NN\n@ ¥ 08_music_gesignmd U ‘ @ 08_music_design_challengerb U x @ Do ++v B § X\ne T tri if tess then 5 word 18 '\nFeturn string 1 S [} words or equa\nR 1 class MusicTracker returns first 5 wards of a loager string & appended -llipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n)\né} 4 end 1 1) MusicTracker 1ist method will return all tracks added\n# Temporarily skipped with xit\n55’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na -add(traCk) 2) MusicTracker add method will faii if PR T U T S T O |\nsicTracker add method w. a; music track.already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit d ¥\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n9 end T\n10 Finished in 8.00429 seconds (files took ©.1138 seconds to load)\n1 def st 12 examples, @ failures, 2 pending\n12 return @tracker © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n|\n13 end GrammarStats\n14 #check returns true or false if string starts with capital aed ends with correct punctuation\n15 returns a intergec the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list methed will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in arrdy (FAILED - 1)\n€ Ol smbinsobmonapeeo s X B0 nake_snippet method\nspec ) @ 06_music_design_challenge_spec.b retufn string if less then 5 words or equal\n15 it 'list method will return all tracks added' do retums F1rst 3 wards of a longer string & appended elllpsis\n16 music_tracker = MusicTracker.new © Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] expectnd: “Track already exists!™\n20 end got: [\"Hello - adele”, “Mello - adale”)\n21 {compared using ==)\nby it ‘add method will fail if music track already exists in array' do i # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 LUUTES Nl of =T T G 1S et ™ 1ot (T (2 Finished in 6.819 seconds (files took 6.10478 seconds to.load)\nb2 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S Failed examples:\n@ 26 end rspec ./spec/06_music_design_challenge_spec.rb:22 # MusicTracker add metHod will fail if music tra\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % I\n"
  },
  {
    "seconds": 1331,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ ¥ 08_music_gesignmd U ‘ @ 08_music_design_challengerb U x @ Do ++v B § X\ne 1 tri if less then 5 word 14 '\nreturn string X S en words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n)\né} 4 end 1 1) MusicTracker 1ist method will return all tracks added\n# Temporarily skipped with xit\no 5 # ./spec/06_music_design_challenge_spec.rb:15\nB\na -add(trac'() 2) MusicTracker add method will fail if ic track already exists i\nsicTracker add method w: a music track already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y 4\nk] @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n9 end T\n) Finished in ©.80429 seconds (files took ©.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 def list\n12 return @tracker © 05WANPANtORMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n|\n13 end GranmarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ o e stalnaaapscso U X QO pake_snippet method\nspec ) @ 06_music_design_challenge_spec.b return string if less then 5 words or equal\n3¢ first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums fArst 3 words of a longer string & appended ellips\n16 TS ok 4 0 To YR (V1 g g Yot - M Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] expected: \"Track already exists!\"\n20 P got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 1% Vadd method will il 1% misic track already exists dnlarravi do # ./spec/@6_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top {(required)>'\n23 LUUTES Nl of =T T G 1S et ™ 1ot (T (2 Finished in 6.819 seconds (files took ©.10478 seconds to load)\nb2 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1332,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ ¥ 08_music_gesignmd U ‘ @ 08_music_design_challengerb U x @ Do ++v B § X\ne 1 tri if less then 5 word 14 '\nreturn string X S en words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n)\né} 4 end 1 1) MusicTracker 1ist method will return all tracks added\n# Temporarily skipped with xit\no 5 # ./spec/06_music_design_challenge_spec.rb:15\nB\na -add(trac'() 2) MusicTracker add method will fail if ic track already exists i\nsicTracker add method w: a music track already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y 4\nk] @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n9 end T\n) Finished in ©.80429 seconds (files took ©.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 def list\n12 return @tracker © 05WANPANtORMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n|\n13 end GranmarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ o e stalnaaapscso U X QO pake_snippet method\nspec ) @ 06_music_design_challenge_spec.b return string if less then 5 words or equal\n3¢ first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums fArst 3 words of a longer string & appended ellips\n16 TS ok 4 0 To YR (V1 g g Yot - M Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf'] expected: \"Track already exists!\"\n20 P got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 1% Vadd method will il 1% misic track already exists dnlarravi do # ./spec/@6_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top {(required)>'\n23 LUUTES Nl of =T T G 1S et ™ 1ot (T (2 Finished in 6.819 seconds (files took ©.10478 seconds to load)\nb2 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 SO (VIS TR T CYE T L (R T R G Y AR B I T R - To - R T VS B S Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [\n"
  },
  {
    "seconds": 1333,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn J\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.rb u B Beor +~ 8 & x\nv t tring if less then 5 word 1 '\nreturn string S [y} words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracker add method will fail if ic track alread! ists in\nsicTracker a 0d W a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 Y\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in @.6@429 seconds (files took .1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mres pending\n12 return @tracker * 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atumonapecio ¥ 0 ake_snippet method\nspec) @ 08.music design_challenge_spec. b return string if less then 5 words or equal\n. . t first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums words of @ losger string & sppended elldps\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add {'lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello ~ adele', 'lie - nf'] expected: \"Track already exists!™\n20 end got: [\"Hello - adele”, “Mello - adele\")\n21 (compared using ==)\n2 # 40RO 1 e iga_Spca 510 \"Dk 2 Lvel) 31 <ep (reirch\nP music_tracker = MusicTracker.new Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 eximples, 1 foilure\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 CLE rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n@ > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1334,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn J\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.rb u B Beor +~ 8 & x\nv t tring if less then 5 word 1 '\nreturn string S [y} words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracker add method will fail if ic track alread! ists in\nsicTracker a 0d W a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 Y\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in @.6@429 seconds (files took .1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mres pending\n12 return @tracker * 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atumonapecio ¥ 0 ake_snippet method\nspec) @ 08.music design_challenge_spec. b return string if less then 5 words or equal\n. . t first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums words of @ losger string & sppended elldps\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add {'lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello ~ adele', 'lie - nf'] expected: \"Track already exists!™\n20 end got: [\"Hello - adele”, “Mello - adele\")\n21 (compared using ==)\n2 # 40RO 1 e iga_Spca 510 \"Dk 2 Lvel) 31 <ep (reirch\nP music_tracker = MusicTracker.new Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 eximples, 1 foilure\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 CLE rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n@ > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1335,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges =N fH\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.rb u % @ Do ++v B § X\ne t tring if less then 5 word 18 '\nreturn string S [} words or equa\n2 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [ Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracke dd method will fail if ic track alread ists in\nsicTracker a 0d W ] music track already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit v y\n8 [T SR A - Td § # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took 8.1138 seconds to load)\n1 def list BT ) CENE IR F A Uy AT LB T\n12 return @tracker © 05winpintoQMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumsmin.hatanonapecso ¥ © 0 rake_snippet method\npec) @ Ofumusic dusin challenge_spec. iy return string if less then 5 words or equal\n14 first 5 words of a 1 tring & LEL RS EY\n15 it \"list method will return all tracks added' do FEtirRS Tirst 5 words of & Tongor string & weended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LIUES ol - T LT D T Y R R T Y A 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie — nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n2 # 00 1 T\\ ga_ S 5110 Ak (2 Lvel) 31 <op (roetrdh\n23 music_tracker = MusicTracker.new Finished in 8.619 seconds (files took €.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examles, 1 failure\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1336,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn J\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.rb u B Beor +~ 8 & x\nv t tring if less then 5 word 1 '\nreturn string S [y} words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracker add method will fail if ic track alread! ists in\nsicTracker a 0d W a music track already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 Y\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in @.6@429 seconds (files took .1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mres pending\n12 return @tracker * 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atumonapecio ¥ 0 ake_snippet method\nspec) @ 08.smusic design_challenge_spec. b return string 1f less then 5 words or equal\n. . t first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums words of @ losger string & sppended elldps\n16 music_tracker = MusicTracker.new Failures:\n17 LTES TolR - T G0 [ LR T R R T ) 4] 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add {'lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello ~ adele', 'lie - nf'] expected: \"Track already exists!™\n20 end got: [\"Hello - adele”, “Mello - adele\")\n21 (compared using ==)\n2 # 40RO e aga_spca 5110 Ak 5 Lvel) 31 <ep (reirch\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 eximples, 1 foilure\n25 expect{music_tracker.add('Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 CLE rspec ./spec/86 musiz design challenge spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1337,
    "text": "o000 06_music_design_challenge_spec.rb — Skill_Challenges (Ing=Nn J\nfingl o R - B8 B+ B & x\nv t tring if less then 5 word 1 '\nreturn string S [y} words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracker add method will fail if ic track alread! ists in arra\nsicTracker a 0d W a music track already exists in ar\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 Y\n8 @tracker << track # ./spec/@6_music_design_challenge_spec.rb:22\n] end T\n10 Finished in @.6@429 seconds (files took .1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mres pending\n12 return @tracker * 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atumonapecio ¥ 0 ake_snippet method\nspec) @ 08.smusic design_challenge_spec. b return string 1f less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTES TolR - T G0 [ LR T R R T ) 4] 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add {'lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf'] expected: \"Track already exists!™\n20 end got: [\"Hello - adele”, “Mello - adele\")\n21 (compared using ==)\n22 it *add method wi fa2il if mues rack already exists in array i # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exaples, 1 foilure\n25 expect(music_tracker.add(jiﬂeuo - adele')).to eq 'Track already exists!' Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [l\n"
  },
  {
    "seconds": 1338,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n() | ¥ Ofmsicgesgumdy @ 06 music.design shallngeh u - B8 B +-B8 8§ x\ne t tring if less then 5 word 18 '\nreturn siring S ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [ Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracker add method will fail if ic track alread ists in\nsicTracker a od W a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ 4\n8 @tracker << track # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in @.88429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mres. pending\n12 return @tracker * 05Winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6LA Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ 06_music_design_challenge_spec.rb U X o Ke_snippet method\nspec) @ 08 smusic design_chalenge_spec.rb return string if less then 5 words or equal\n. . t first 5 words of a 1 tring & LIRSS EY\n15 it \"list method will return all tracks added' do FEtieRs F4rst 5 words of & Tonger string & wpended elltps |\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add {('lie — nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello ~ adele', 'lie - nf'] expected: \"Track already exists!™\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in array® do # ./spec/86_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\npi expect (music_tracker ~,‘-‘:'-‘\"‘.';t‘: fﬂ o - adele')|)).to eq 'Track alrez T{ exists!”’ Failed examples:\n@ 26 end I rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tm!\n27 end ck already exists in array |\nﬁ‘} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1339,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if less then 5 word 18 '\nreturn string S ) words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na - add(euek) 2) MusicTracker add method will fail if ic track alread ST\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ ¥\n8 (14 Te (T RS d-Td § # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in 8.88429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mres pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ 06_music_design_challenge_spec.b U X o Ke_snippet method\nspec ) @ 06.music_design_challenge_spec.b return string if less then 5 words or equal\n. . t first 5 words of a 1 tring & LIRS T.ESEY\n15 it \"list method will return all tracks added' do Fetirms 1irst § words of 3 Toager string & wpended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LTES Tolh 40 T G0 [ LR T R R To ) ] 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello -~ adele', 'lie - nf'] expected: “Track already exists!™\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in array' do # ./spec/86_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.819 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\niy expect (music_tracker.add('Hello - adele'])]).to ;i;g 'Track already exists!' Failed examples:\n@ 26 end - rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} — - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1340,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nO SRS @ ofmuldesgnshalegedt U -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atmonapecso ¥ B0 ake_snippet method\nspec ) @ 06.smusic_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums Tirst 5 words of  longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LB TR Y - T T G TR TR R T 1 A 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n22 it 'add method will fail if music track already exists in array. da # ./spec/86_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.819 seconds (files took 8.18478 seconds to load)\nb2 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect (n '.>EIELE‘ tracker.add(|'Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I R CD T T g B 2 TS T - T o - T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\nﬁ} © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1341,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nO SRS @ ofmuldesgnshalegedt U -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atmonapecso ¥ B0 ake_snippet method\nspec ) @ 06.smusic_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums Tirst 5 words of  longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LB TR Y - T T G TR TR R T 1 A 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n22 it 'add method will fail if music track already exists in array. da # ./spec/86_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.819 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele*) 12 exanples, 1 failure\n25 expect/{Jiusic_tracker.add('Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I R CD T T g B 2 TS T - T o - T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\nﬁ} © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1342,
    "text": "- N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\nO SRS @ ofmuldesgnshalegedt U -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\no 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\nF I addrrack) 2) MusicTracker add method will fail if music track already exists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker + 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumis s atmonapecso ¥ B0 ake_snippet method\nspec ) @ 06.smusic_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n22 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 ‘expect/(jusic_tracker.add('Hello - adele')).to eq 'Track already exists!® Failed examples:\n@ 26 end [ LA T L T ES Cl 23 T I AR CO T T g B 2 TS T - T o - T S DT R RGO - DA R VES Tl o -]\n27 end ck already exists in array\nﬁ} © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1343,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ v\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Olumes b stalingnpeio U 0 B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LB TR Y - T T G TR TR R T 1 A 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expectnusic_tracker.add(‘Hello - adele’):.to eq 'Track already exists!\" Failed exanples:\n@ 26 end [ LA T L W ES Cl 23 T I AR CO T T g B 2 TS T - T o i T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\né} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1344,
    "text": "[- N N J 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Olumes b stalingnpeo U B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expectmusic_tracker.add('Hello - adele'):.to eq 'Track already exists!® Failed examples:\n@ 26 end [ LA T L W ES Cl 23 T I AR CO T T g B 2 TS T - T o i T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\né} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1345,
    "text": "- N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n() I @ Ot skrreshdangeh U x -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\nF I addrrack) 2) MusicTracker add method will fail if music track already exists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Olmes b stalingnspeo U » B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hello - adele'):.to eq ‘Track already exists!' Failed examples:\n@ 26 end [ LA T L W ES Cl 23 T I AR CO T T g B 2 TS T - T o i T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\né} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1346,
    "text": "- N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n(Q IS @ Ot skrrshalengeh U x -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\nF I addrrack) 2) MusicTracker add method will fail if music track already exists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker + 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\ni3 expect{music_trp ‘4:::'!: add( 'Hello adele')).to eq 'Track already exists!' Failed examples:\n@ 26 end [ LA T L W ES Cl 23 T I AR CO T T g B 2 TS T - T o i T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1347,
    "text": "- N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n4 end 1) MusicTracker list method will return all tracks a\n& 1 ) MusicTracker lis hod will n ks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add|( 'Hello - adele')).to eq 'Track already exists! Failed examples:\n@ 26 end [ LA T L W ES Cl 23 T I AR CO T T g B 2 TS T - T o i T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\né} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1348,
    "text": "- N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n(Q IS @ Ot skrrshalengeh U x -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ v\n8 (14 Te (T RS d-Td § # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expect{music_tracker. add{|'Hello - adele')).to eq 'Track already exists! Failed examples:\n@ 26 end [ LA T L W ES Cl 23 T I AR CO T T g B 2 TS T - T o i T S DT R R R - DA R VES Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1349,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n4 end 1) MusicTracker list method will return all tracks a\n& 1 ) MusicTracker lis hod will n ks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ v\n8 (14 Te (T RS d-Td § # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nECCERLUNIRGIR T g\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add{'Hello agele')).to eq 'Track already exists!' Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1350,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hello - adele');|.to eq 'Track already exists!' Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1351,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n4 end 1) MusicTracker list method will return all tracks a\n& 1 ) MusicTracker lis hod will n ks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ v\n8 (14 Te (T RS d-Td § # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nECCERLUNIRGIR T g\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracke add (' Hello adele )il-to eq 'Track already exists!' Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1352,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n4 end 1) MusicTracker list method will return all tracks a\n& 1 ) MusicTracker lis hod will n ks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ v\n8 (14 Te (T RS d-Td § # ./spec/06_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nECCERLUNIRGIR T g\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hello adele');.to eq 'Track already exists! Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1353,
    "text": "- N J 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hello adele').to eq 'Track already exists! Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1354,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U ® B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hella adele')}H.to eq 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1355,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\n2 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapecd U B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hella adele')}H.to eq 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1356,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\n2 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n1‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapecd U X B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracke add( 'Helle adele')}.to pq 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1357,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n@ # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\n2 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nR 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapecd U X B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie = nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array' do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracke add( 'Helle adele')}.to eq 'Track already exists!’ Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1358,
    "text": "- N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n[(FY 5 R -] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nR 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread ists in arra\nsicTracker a od . a mus rack already exists in ar|\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker + 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Olumes b talingapeio U % B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LTES TolR 40 T G0 [ LR T R R T ) A ] 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect(music_tracker.list).to eq ['Hello ~ adele', 'lie - nf'] expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array* do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\npx] LU TR 4 Yo TR T Cay T T N Finished in 0.019 seconds (files took ©.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 failure\n25 ‘expectH [¢_tracl add( 'Hello adele')}.to rais| 'Track already exists!' Failed examples:\n(@) 26 end rai e_error = rspec ./spec/06_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} = - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1359,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\na # 06 music_designmd ¥ @ 08_music_design_challenge.sb U @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n5 # Temporarily skipped with xit\nBg’ EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Olumes b talingapeio U % B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 (DT £ VES Kol =T (T NS I ST I Y R T T3 PR § TR ) i | expected: \"Track already exists!\"\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array* do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hellc adele')}.to raise_error| 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1360,
    "text": "[ N N ] 06_music_design_challenge_spec.rb — Skill_Challenges Ing=2n N\n@'Mp | @ 08 music.design_shallengesh U -] Don +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end | 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end T\n10 Finished in ©.8@429 seconds (files took @.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker * 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofumi s hatanonapeco U B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . T first 5 words of a lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele*) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 (O I A0 VES Kol =T (T NS I ST I R Y R T T3 PR B TR ) il | expected: \"Track already exists!\"\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\npal (compared using ==)\n2 it 'add method will fail if music track already exists in array* do # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 Tailure\n25 expect{music_t 'I add ( 'Hello adele to raise_error| 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1361,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n@ ¥ 08_music_designmd U @ 08_music_design_challengerb U > @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n3‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ v\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end ]I\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\npic end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofuma s hatunonapeco U B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . t first 5 words of a lo tring & LIRS T.ES TS\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LTES TolR - T G0 [ LR T R R Te ) ] 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 (DI A0 VES Kol =T T RS I ST I R Y R T 1) PR B T ) ol | expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n2 it 'add method will fail if music track already exists in array* do \\ # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new 7 Finished in 0.019 seconds (files took 8.18478 seconds to load)\nb2 music_tracker.add('Hello — adele') | 12 examples, 1 Tallure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ‘} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1362,
    "text": "[ N N J 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n@ ¥ 08_music_designmd U @ 08_music_design_challengerb U > @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EARYES L N TE T I G LI EY A L TR T B\na - add(euek) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker a od . a mus rack already exists in arra\ne 7 fail ‘You cannot input an empty string as a track' if track.empty? ]I # Temporarily skipped with xit ¥ v\n8 @tracker << track # ./spec/86_music_design_challenge_spec.rb:22\n] end\n10 Finished in ©.8@429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list mores. pending\n12 return @tracker © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n1\npic end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n€ Ofuma s hatunonapeco U B0 ake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n. . t first 5 words of a lo tring & LIRS T.ES TS\n15 it \"list method will return all tracks added' do Fotirms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 LTES TolR - T G0 [ LR T R R Te ) ] 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 (DI A0 VES Kol =T T RS I ST I R Y R T 1) PR B T ) ol | expected: \"Track already exists!™\nb1} end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n2 it 'add method will fail if music track already exists in array* do \\ # ./spec/@6_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>’\n23 music_tracker = MusicTracker.new 7 Finished in 0.019 seconds (files took 8.18478 seconds to load)\nb2 music_tracker.add('Hello — adele') | 12 examples, 1 Tallure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end (R Lo T L T ES Cl 23 T I ERR CO T T T g 2 TS T g - T o - T S DT R RGO - DA R VLS Tl o -]\n27 end ck already exists in array\nﬁ‘} - 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1363,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n(@ | % Obmusicsesgnmdy | @ 06 music_design shallngesb v Lo &8 B +-B8 8§ x\ne T tring if T then 5 word: 18 '\nreturn string ess ()] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nE P def initialize '\n3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\nP a dch add(meek) 2) MusicTracker add method will fail if ic track alread S T]\ne T T By . R e T o C— sicTracker add method w. a music track already exists in array\n© 7 fail ‘You cannot input an empty string as a track' track.empty? I # Temporarily skipped with xit Y\n8 @tracker << track © # ./spec/06_music_design_challenge_spec.rb:22\n9\n10 Finished in €.60429 seconds (files took €.1138 seconds to load)\n12 examples, @ failures, 2 din\n1 def list meess i\n12 return @tracker + 0SWNPiNtOGMASTUDENT-Oswin-Pinto-C17GMAZAQEL4 Skill _Challenges % rspec\n]\n13 end GrammarStats\n14 #check returns true or false if string starts with capital and ends with correct punctuation\n15 d returns a interger the percentage of text checked so far that passed\nen\nTodo\n#add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\n) B Ochaki MalGChalongei speciit return string if less then 5 words or equal\n14 first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do FEtms TArSE S words of 8 longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it \"add method will fail if music track already exists in array’ do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\n23 LUTES (ol o =Tl T o VS e - [ (=T 2 ™ Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!\"' Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| |\n"
  },
  {
    "seconds": 1364,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n(Y 5 R o & Don ++ B & x\ne t tring if less then 5 word 14 '\nreturn string S )] words or equa\n2 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n“ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\nP 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\n5 a9 add{tratk) 2) MusicTracker add method will fail if ic track alread: ists in\np sicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit Y Y\n8 # ./spec/86_music_design_challenge_spec.rb:22\n9 (e T CIEa A T\n10 end Finished in ©.60429 seconds (files took .1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n¥ def list + 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GranmarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec) @ O8.smuic dusign challange_spec.ib return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums first § words of a longer string & appended ellipsis\n16 | music_tracker = MusicTracker.new Failures:\n17 LTS Tol - T T D T T R R T T A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it \"add method will fail if music track already exists in array’ do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new ™ Finished in ©.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n6} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| [\n"
  },
  {
    "seconds": 1365,
    "text": "(- N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\nQw! | @ 08 music.design_challengerb u & wo- @ B+~ B & X\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\n2 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n“ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n55’ 5 EAVES L N TE T S G LI E A T TR T B\n5 4¢r add{tratk) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a mus rack already exists in arra\n? 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit y y\n8 # ./spec/86_music_design_challenge_spec.rb:22\n9 @t\n10 end Finished in €.88429 seconds (files took @.1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nk] return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\npec) @ O8.smusic dusign challenge_spec.b return string if less then 5 words or equal\n15 it *list method will return all tracks added’ do Fotirms tirst § words of a longor string & apponded ellipsts\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it *add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end [ G S ETO [ T )\n6} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1366,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n([ |% Ofmusicgesgnmdly | @ 06_music.design. shalengesh U % o & Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n“ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 det- add{tratk) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/86_music_design_challenge_spec.rb:22\n] @tracker << track\n10 end Finished in ©.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{ -7:\"g,”_ggj;;.\":'j;’ér r.add( 'Hello adele') }.to raise error 'Track already exists!' Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1367,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n([ |% Ofmusicgesgnmdly | @ 06_music.design. shalengesh U % o & Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n“ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 det- add{tratk) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/86_music_design_challenge_spec.rb:22\n] @tracker << track\n10 end Finished in ©.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{ -7:\"g,”_ggj;;.\":'j;’ér r.add( 'Hello adele') }.to raise error 'Track already exists!' Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1368,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n(g ISR @ O shrsigreshalengest ¢ o & Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 def- add{track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker << track\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\nPy it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 xpect{music_tr cker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1369,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n(g ISR @ O shrsigreshalengest ¢ o & Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nR 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 def- add{track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n9 (19 -1 IR 44T 3\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\ngot: [\"Hello - adele\", \"Hello - adele\"]\npL] end\n21 (compared using ==) R\nPy it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>\n23 | music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 xpect{music_tr cker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1370,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n() N @ Ot skrgrshalengect u @ o & Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nk 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 def- add{track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n9 (19 -1 IR 44 Te 3\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\nPy it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new ]I Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 xpect{music_tr cker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1371,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\nQ) N @ Ot shrhrshdlangech U @ o & Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n- # Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 def- add{track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n9 (19 -1 GRS 44-Te 3 {\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 . 12 examples, @ failures, 2 pending\n12 def list ' » 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\nPy it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 xpect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!f Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} Q > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1372,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\n(@ N @ Ot skrreshalengesh U 9 ] Don ++ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nL 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n- # Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\n5 def- add{track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n9 (19 -1 CIECR 44 Te 3 (\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list ' » 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n13 return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ohmye s stalindeapeid U X © 0 hake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\nPy it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 | music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\ni xpect{musi >_tri cker.add('Hello adele')}.to raise_error 'Track already exists ’I Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} 3 > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [| I\n"
  },
  {
    "seconds": 1373,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06_music_gesign.md U @ 06_music_design_challengesb U 8 B+~ B § x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n3‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n- # Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n] (19 -1 GRS 44-Te 3 |\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list | » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ o mye s stalndaaped U X @O hake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it *list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{nusic_tracker.add('Hello - adele')}.to raise_error JfiGCKNSITCAOYNERISTSNN Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1374,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ B [P A=R\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n3‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n- # Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n] (19 -1 GRS 44-Te 3 |\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list | » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ o mye s stalndaaped U X @O hake_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') ]E Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[iFSCKIBUTCAOVICRASESIY Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1375,
    "text": "[-N N ] 06_music_design_challenge_spec.rb — Skill_Challenges = fH\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U & B [P A=R\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n3‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 # ./spec/06_music_design_challenge_spec.rb:22\n9 (19 -1 GRS 44-Te 3\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 ]E 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalindeapecid U X QO ke snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add( 'Hello - adele')}.to raise error '[iRSCKIGLICAOYICRISERIN Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1376,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ wo- @ B+~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n3‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\nL4 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit ¥ ¥\n8 # ./spec/06_music_design_challenge_spec.rb:22\n] (19 -1 IS 44T 3\n10 end Finished in 8.8@429 seconds (files took .1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it *list method will return all tracks added’ do Fotirms tirst § words of a longor string & apponded ellipsts\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\nH\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') | 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frackialready existsis Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1377,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesh U @ no- @ [BECIE = B\ne t tring if 1 then 5 word: 18 '\nreturn string ess [} words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 3il 'Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track\n10 end Finished in €.€0429 seconds (files took €.1138 seconds to load)\n1 ZI 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\nPy it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new 7 Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[TFacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1378,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U % no- @ B+~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\n3‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 ail ’J\\'jj;\" F1l ready exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track\n10 end Finished in €.€0429 seconds (files took €.1138 seconds to load)\n1 ]I 12 examples, © failures, 2 pending\n12 def list © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndeaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new ™ Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[TFacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1379,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U % no- @ B+~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 ail ’J\\'jj;\" F1l ready exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track\n10 end ZI Finished in €.€0429 seconds (files took €.1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list © 0sWinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndeaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it *list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new ™ Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[TFacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1380,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n N\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U % no- @ B+~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 ail ’J\\'jj;\" 1 ready exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track\n10 end 1[ Finished in €.€0429 seconds (files took €.1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list * 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofme s stalndaapeid U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1381,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\n@ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U % no- @ B+~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 il 'Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track\n10 end 3[ Finished in €.€0429 seconds (files took €.1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it *list method will return all tracks added' do Foturms Tirst § words of 3 Toager string & sppended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1382,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06 music desgnmd U @ 06 music_design_challenge.b U @ wo- @ B +-B8 8§ x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nx‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 il 'Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track\n10 end Finished in €.€0429 seconds (files took €.1138 seconds to load)\n1 12 examples, © failures, 2 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1383,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\na ¥ 08_music_gesignmd U ‘.va‘ oo @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 3 Track already exists!' if ‘ # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track 11\n10 end oif if Finished in €.€0429 seconds (files took €.1138 seconds to load)\na . 12 examples, @ failures, 2 din\n1 Oif elsif 1f elsif meless » ¢ pending\n12 def list Oif elsif else if elsif else © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\n13 return @tracker O1if else if else GranmarStats :\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do Foturms Tirst § words of 3 Toager string & sppended ellips\n16 | music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 CLl rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] I\n"
  },
  {
    "seconds": 1384,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengerb U & wo- @ [P A=R\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n[} @tracker =< track 1if elsif i\n10 end Oif elsif else if elsif el Finished in ©.6@8429 seconds (files took .1138 seconds to load)\n\" — — - 12 examples, @ failures, 2 din\n1 aif else if else mplesy » 2 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1385,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nIQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ uo- &2 BDm +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n[} @tracker =< track 1if elsif i\n10 end Oif elsif else if elsif el Finished in ©.6@8429 seconds (files took .1138 seconds to load)\n\" — — - 12 examples, @ failures, 2 din\n1 aif else if else mplesy » 2 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1386,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ uo- &2 BDm +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n] @tracker =< track 1if elsif\n10 end 0if elsif else If elsif el Finished in €.8@429 seconds (files took @.1138 seconds to load)\nI EE— . . 12 examples, @ failures, 2 pendin\n1 Oif else if else metesy » 4 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1387,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\n'Q ¥ 06_music_gesign.md U @ 08_music_design_challengerh U @ oo @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track s & f\n10 end 0if elsif else f elsif el Finished in ©.8@429 seconds (files took .1138 seconds to load)\nST EE—— - 12 examples, @ failures, 2 pendin\n1 Oif else if else metesy » 4 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1388,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\n'Q ¥ 06_music_gesign.md U @ 08_music_design_challengerh U @ oo @ Do ++v B § X\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track s & f\n10 end 0if elsif else f elsif el Finished in ©.8@429 seconds (files took .1138 seconds to load)\nST EE—— - 12 examples, @ failures, 2 pendin\n1 Oif else if else metesy » 4 pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\n15 it 'list method will return all tracks added’ do retums 74rst 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1389,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ uo- &2 BDm +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track [ f\n10 end Dif elsif else f elsif el Finished in ©.0@429 seconds (files took ©.1138 seconds to load)\nO ——— . - . 12 examples, @ failures, 2 pendin\n1 Oif else if else meless » ¢ pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1390,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ uo- &2 BDm +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track [ f\n10 end Dif elsif else f elsif el Finished in ©.0@429 seconds (files took ©.1138 seconds to load)\nO ——— . - . 12 examples, @ failures, 2 pendin\n1 Oif else if else meless » ¢ pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1391,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ uo- &2 BDm +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track [ f\n10 end Dif elsif else f elsif el Finished in ©.0@429 seconds (files took ©.1138 seconds to load)\nO ——— . - . 12 examples, @ failures, 2 pendin\n1 Oif else if else meless » ¢ pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1392,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=2n NN\nQ ¥ 06 music_designmd U @ 06_music_design_challengesb U @ uo- &2 BDm +~ B & x\ne t tring if 1 then 5 word: 18 '\nreturn string ess )] words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nZ‘ 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\n& 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 EAVES L N TE T S G LI E A T TR T B\nB def- add(track) 2) MusicTracker add method will fail if ic track alread: ists in\nsicTracker add method w. a music track already exists in arra:\ng 7 | fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit 4 4\n8 B Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker =< track [ f\n10 end Dif elsif else f elsif el Finished in ©.0@429 seconds (files took ©.1138 seconds to load)\nO ——— . - . 12 examples, @ failures, 2 pendin\n1 Oif else if else meless » ¢ pending\n12 def list © 05WinpintoGMASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill _Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaaped U X \" make_snippet method\nspec ) @ 06.music_design_challenge_spec.rb return string if less then 5 words or equal\nt first 5 words of a 1 tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 5 words of & longer string & appended ellips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele')).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: “Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\"]\n21 (compared using ==)\n22 it 'add method will fail if music track already exists in arrayl da # ./spec/06_music_design_challenge_spec.rb:25:in \"block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[FacK already existsly Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1393,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ # 06 music_gesignmd U @ 06_music_design_challenge.b U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] LU CPUT R PR TR S TS T I TV TS T T T DR DY § T VTR R S £1 {7 )\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\n5 det add{trabk) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker add me W a music track already exists in arra:\ng 7 fail ‘You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit d 4\n8 fal Track already exist: # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d v Td §\n10 end 0if elsif else if elsif el Finished in ©.00429 seconds (files took ©.1138 seconds to load)\n. mE 12 examples, @ failures, 2 pendin\n11 =FT NPT if else meies, + 4 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid ¥ \" make_snippet method\npec) @ Of.smusic dusign challenge_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it *add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new ™ Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1394,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ # 06 music_gesignmd U @ 06_music_design_challenge.h U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\n5 daf add{trabk) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker add me W a music track already exists in arra:\ng 7 fail 'You cannot input an empty string as a track' if track.empty? # Temporarily skipped with xit d 4\n8 fai Track already exists # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d v Td §\n10 end 0if elsif else if elsif el Finished in ©.8@429 seconds (files took ©.1138 seconds to load)\n12 examples, @ failures, 2 din\n11 =FT ST if else meies, + 4 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nLTSGR AU SR RS g TES Tl T Q1 O TS S IS DRE T LS (RO R 3]\n@ ofmye s stalndaapeid U X \" make_snippet method\npec) @ Of.smusic dusign challnge_spec. return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it ‘add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n*} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1395,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06 music_gesignmd U @ 06_music_design_challenge.h U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\nB de? add{trabk) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker me! W a music trac ready exists in arra\n% 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrlly‘smm with xit 2 ¥ ¥\n8 fal Track already exist: # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T §\n10 end O0if elsif else If elsif el Finished in ©.8@429 seconds (files took 8.1138 seconds to load)\n\" 12 examples, @ failures, 2 din\n1 Oif else if else meles: + ¢ pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayl do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello — adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'TracK already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ'} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1396,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06 music_gesignmd U @ 06_music_design_challenge.b U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\nB agf additrack) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker me! W a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasmm with xit 2 d 4\n8 fal Track already exists # ./spec/86_music_design_challenge_spec.rb:22\n9 [ Td IR d - T4 3\n10 end nif elsif else If elsif el Finished in ©.8@429 seconds (files took 8.1138 seconds to load)\n. 12 examples, @ failures, 2 din\n1 Oif else if else meles: + ¢ pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayl do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\nPz} music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n'ﬁ'} © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1397,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06 music_gesignmd U @ 06_music_design_challenge.b U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\nB agf additrack) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker me! W a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasmm with xit 2 d 4\n8 fai Track already exists # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Oif elsif else if elsif el Finished in ©.00429 seconds (files took ©.1138 seconds to load)\n- 12 examples, @ failures, 2 din\n11 Oif else if else meles: + ¢ pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayl do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ'} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1398,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06 music_gesignmd U @ 06_music_design_challenge.b U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\nB agf additrack) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker me! W a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasmm with xit 2 d 4\n8 fai Track already exists # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Oif elsif else if elsif el Finished in ©.00429 seconds (files took ©.1138 seconds to load)\n- 12 examples, @ failures, 2 din\n11 Oif else if else meles: + ¢ pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayl do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ'} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1399,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 06 music_gesignmd U @ 06_music_design_challenge.b U @ nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nE:? 5 # ./spec/06_music_design_challenge_spec.rb:15\nB agf additrack) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker me! W a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasmm with xit 2 d 4\n8 fai Track already exists # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Oif elsif else if elsif el Finished in ©.00429 seconds (files took ©.1138 seconds to load)\n- 12 examples, @ failures, 2 din\n11 Oif else if else meles: + ¢ pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayl do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ'} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1400,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U @ uo- & B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fal 'Track already exists!' | # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayn do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n{'ﬁ © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1401,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U @ uo- & B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fal 'Track already exists!' | # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayn do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n{'ﬁ © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1402,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nIQ ¥ 08 music_desgnmd U @ 06_music_design_challengesb U @ uo- & B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\ne 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 ¥ ¥\n8 fal 'Track already exists!' v‘;} # ./spec/06_music_design_challenge_spec.rb:22\n9 [ Td IR d - T4 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ e stalndaapmid y X \" make_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\nturns first 5 words of a Lo tring & ded ellipsis\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in arrayn do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 fallure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1403,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges InE=xn fH\nQ ¥ 06_music_gesign.md U @ 08_music_design_challengerb U = @ Do ++v B § X\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? \" Tm\"mrllyasupm with xit 2 d 4\n8 fail 'Track already exists!' # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ohmye s stalindaapeid y & @0 hake_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\npat (compared using =)\n22 it 'add method will fail if music track already exists in arrayn do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[iESCKIBUNCAGYIEXISESIS Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1404,
    "text": "[- N N ] 06_music_design_challenge_spec.rb — Skill_Challenges InE=xn fH\nQ ¥ 06_music_gesign.md U @ 08_music_design_challengesb U « @ Do ++v B § X\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\ng 7 RCPANRS (TVR-CT L T LT T ) --I-- string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fail 'Track already “;‘F;rflw::‘}f“'»‘:ﬁ\" # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ohmye s stalindaapeid y & @0 hake_snippet method\npec) @ Of.smusic dusign challange_spec.b return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\npat (compared using =)\n22 it 'add method will fail if music track already exists in arrayn do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new T Finished in ©.619 seconds (files took 8.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error '[iESCKIBUNCAGYNEXISESIS Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1405,
    "text": "coee Skill_Challenges In=Nn Rl\nQ ¥ 06_music_sesign.md U @ 06_music_design_challengesb U = B [P A=R\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\n8 5 # ./spec/06_music_design_challenge_spec.rb:15\n; det aditrack) 2) MusicTracker add method will fail if music track already exists in\n; sicTracker me! W a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fal Track already exists!' i # ./spec/@6_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U X ™ make_snippet method\npec) @ 08 smusic dusign challenge_spec.b return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it \"list method will return all tracks ad retums Tirst 3 vords of 8 ongor string & appended e1Mips\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq [’ expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\nPy it ‘add method will fail if music track # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new Finished in ©.619 seconds (files took ©.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 fallure\n25 expect{music_tracker.add('Hello - ade Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1406,
    "text": "oee 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ wo- @ B+~ B & x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 faj Track already exists!' HI # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofme s stalindaaped U o \" make_snippet method\npec) @ 08 smusic dusign challenge_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks ad returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['l? expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\npat (compared using =)\nPy it ‘add method will fail if music track ‘ﬁ # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new A Finished in ©.619 seconds (files took ©.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 OGS LTS TR T CIEU 1 [ Y R CREET: [ Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} © 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1407,
    "text": "oee 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn JE\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ wo- @ B+~ B & x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fail 'Track already exists!' 8 # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofme s stalindaaped U o \" make_snippet method\npec) @ 08 smusic dusign challenge_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks ad returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['I'P expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\nPy it ‘add method will fail if music track ‘a # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new ol Finished in ©.619 seconds (files took ©.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - ade’ Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1408,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ wo- @ B+~ B & x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fal 'Track already exists!' @ # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nh add method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalndaapeid U make_snippet method\npec) @ 08 smusic dusign challenge_spec.b return string if less then 5 words or equal\n15 it 'list method will return all tracks ad returns first 5 words of a longer string & appended ellipsis\n16 music_tracker = MusicTracker.new Failures:\n17 LTS o 4T T TR TR BT (Y A ) 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['I'P expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\nPy it ‘add method will fail if music track ‘a # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\nbk} music_tracker = MusicTracker.new ol Finished in ©.619 seconds (files took ©.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - ade Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1409,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengesb U @ no- @ Ber ++- 8 & %\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fai 'Track already exists!' a # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11\n12 def list 1[ © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalindaaped U X \" make_snippet method\n> @ Of.cuiske Halgriallenge splc. o return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\nL] expect(music_tracker.list).to eq ['Hello -~ adele', 'lie = nf'] expected: “\"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new Finished in 0.019 seconds (files took ©.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1410,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengerb U @ no- @ Ber ++- 8 & %\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 fal 'Track already exists!' L\"‘\\ :‘I- # ./spec/06_music_design_challenge_spec.rb:22\n] [ - Tol T d 4T 3 )\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ofmye s stalindaaped U X \" make_snippet method\n0> @ O.cuiake Halgri:allange sple.d return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\nL] expect(music_tracker.list).to eq ['Hello -~ adele', 'lie = nf'] expected: “\"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\n}\n23 music_tracker = MusicTracker.new [ Finished in ©.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 Tailure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1411,
    "text": "AV GG~~~\n(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg # 08_music_gesign.md U @ 06_music_design_challengesb U @ no- @ Bwms ++ B § x\n\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail ‘You cannot input an empty stri g as a track' if track.empty? # Tm\"mrllyasupm with xit 2 d 4\n8 ~ *Track CRUTET VY ,”;,w‘.rc‘l;'_ :‘ I ‘ # ./spec/06_music_design_challenge_spec.rb:22\n2] @tracker << track\n10 end Finished in ©.06429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats !\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ot stalgrapmst U -X \" make_snippet method\ne @ O uidk ok in: Halenuapiic. return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello -~ adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new 7 Finished in 0.819 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\n{'ﬁ > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1412,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengerb U @ no- @ Ber ++- 8 & %\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail \"J—L,;;.\";\"_‘,,\\\",::_j“-, exists!' if { i_“‘f—i?\"—v*?! # ./spec/06_music_design_challenge_spec.rb:22\nEl @tracker << track = tracker\n10 end «MusicTracker Finished in 8.80429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 «music_tracker\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ol stoon shalnarapesin 1% \" make_snippet method\no) @ O stuiskc: sk el apic b return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello -~ adele', 'lie = nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in “block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1413,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengerb U @ no- @ Ber ++- 8 & %\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail ‘7’17[‘77;:_, {}_‘..;'F':;-j\"l; exists!' if { _\\_v;»j;;;.:_v\",j; # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker << track = tracker\n10 end «MusicTracker Finished in 8.80429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 «music_tracker\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it 'list method will return all tracks added' do Fotirms first 5 words of 3 Tonger string & sopended lhies\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1414,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengerb U @ no- @ Ber ++- 8 & %\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail u’ﬁ;’;;;,{}_‘..fi':';-;f\"l; exists!' if @tracker. ?Lf, # ./spec/06_music_design_challenge_spec.rb:22\n9 @tracker << track o\n10 end «initialize Finished in 8.80429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 «input\n12 def list TJclass init Class definition wit.. © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1415,
    "text": "AV GG~~~\n(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg # 08_music_gesign.md U @ 06_music_design_challengesb U @ no- @ Bwms ++ B § x\n\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty tring as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n-] fail 'Track already exists!' if @tracker.include ‘ # ./spec/06_music_design_challenge_spec.rb:22\n9 [T IS 4T §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1416,
    "text": "AV GG~~~\n(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg # 08_music_gesign.md U @ 06_music_design_challengesb U @ no- @ Bwms ++ B § x\n\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail 'Track already exists!' if @tracker.include? ‘ # ./spec/06_music_design_challenge_spec.rb:22\n] (14 - 1o IR 4 11l §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1417,
    "text": "AV GG~~~\n(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg # 08_music_gesign.md U @ 06_music_design_challengesb U @ no- @ Bwms ++ B § x\n\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail 'Track already exists!' if @tracker.include?|(] ‘ # ./spec/06_music_design_challenge_spec.rb:22\n] (14 - 1o IR 4 11l §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1418,
    "text": "(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg ¥ 06_music_sesign.md U @ 06_music_design_challengerb U @ no- @ Ber ++- 8 & %\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail 'Track already exists!' if ( i_,‘,'v;;;ih‘Iih'r,,,11;*;\";_;‘;\";;‘:\\ # ./spec/06_music_design_challenge_spec.rb:22\n9 [T IR 4 -1 3 =to\n10 end w« track Finished in €.06429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 « tracker\n12 def list P © 05WiNpNtOGMASTUDENT-Oswin-Pinto-C17GMAZAQ6LA Skill_Challenges % rspec\nbk return @tracker «Track GrammarStats '\n#check returns true or false if string starts with capital and ends with correct punctuation\n14 L ~MusicTracker returns a interger the percentage of text checked so far that passed\n15 =mnusic_tracker\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1419,
    "text": "AV GG~~~\n(- N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\nlg # 08_music_gesign.md U @ 06_music_design_challengesb U @ no- @ Bwms ++ B § x\n\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if rack.enpty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail 'Track ‘f_f;i_rwvr::—_.»ln; exists!' if @tracker.include?((it| g;;g:j;:j ‘ # ./spec/06_music_design_challenge_spec.rb:22\n] (14 - 1o IR 4 11l §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it 'list method will return all tracks added' do Fotirms first 5 words of 3 Tonger string & sopended lhies\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1420,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n@ ¥ 06_music_gesign.md U @ 08_music_design_challengerb U X oo @ Do ++v B § X\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if rack.enpty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail 'Track already exists!' if { ;_5‘1{'j§]f<£\\‘mfriﬁp,’l\"(J\"\"L_‘A:v‘ji“j_’_;}i\"\\;: ‘ # ./spec/86_music_design_challenge_spec.rb:22\n] (14 - 1o IR 4 11l §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\nT first 5 words of a lo tring & LELNIRELISEY\n15 it 'list method will return all tracks added' do Fotirms first 5 words of 3 Tonger string & sopended lhies\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1421,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n@ # 08_music_gesign.md U @ 06_music_design_challengesb U X no- @ Bwms ++ B § x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track' if track.empty? # Tm\"mrllyasupm with xit 2 4 4\n8 fail *Track already exists!' if @tracker.include?|(track) ‘ # ./spec/06_music_design_challenge_spec.rb:22\n] (14 - 1o IR 4 11l §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n1 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1422,
    "text": "[ N N 06_music_design_challenge.rb — Skill_Challenges Ing=xn NN\n@ # 08_music_gesign.md U @ 06_music_design_challengesb U X no- @ Bwms ++ B § x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nBg’ 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(track) 2) MusicTracker add method will fail if ic track already exists in\n; sicTracker method w. a music trac ready exists in arra\n2 7 fail 'You cannot input an empty string as a track if ck.enpty? # Tm\"mrllyasupm with xit 2 4 4\n] fail 'Track already exists!' if @tracker.include?(track) ‘ # ./spec/@6_music_design_challenge_spec.rb:22\n] (14 - 1o IR 4 11l §\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n12 examples, @ failures, 2 pending\n11 i\n12 def list © 0swinpinto@MASTUDENT-Oswin-Pinto~C17GMAZAQ6L4 Skill_Challenges % rspec\nbk} return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n@ ommeicstodon.shallnatapecit U \" make_snippet method\nB i return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do FYturRe first 5 vords of 3 longer string & sopended sllipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add('Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Helle - adele', 'lie = nf'l] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npxi music_tracker = MusicTracker.new T Finished in 0.019 seconds (files took 0.10478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi® Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\nﬁ} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] |\n"
  },
  {
    "seconds": 1423,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n(D | & Otrmsicgesgnmd | @ 06 music.design challengesh u X nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nB_.,D 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(eoek) 2) MusicTracker add method will fail if ic track already exists in\n. sicTracker add method w: a music track already exists in arra:\n? 7 fail ‘You cannot input an empty string as a track' if track.empty? # Tenporarily skipped with xit d 4\n8 fail \"Track already exists!' if @tracker.include?(track) # ./spec/06_music_design_challenge_spec.rb:22\n] @tracker << track\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n11 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n.90 mmje st ralinaaaperad |t \" make_snippet method\n9ec @ O8smuskc.dasign.chUMngR_Ow. return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do Feturme first 5 vords of 3 lomger string & spended silipsis\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add(‘Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie ~ nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it ‘add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new ~ Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele*) 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi‘ Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] [\n"
  },
  {
    "seconds": 1424,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n(D | & Otrmsicgesgnmd | @ 06 music.design challengesh u X nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nB_.,D 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(eoek) 2) MusicTracker add method will fail if ic track already exists in\n. sicTracker add method w: a music track already exists in arra:\n? 7 fail ‘You cannot input an empty string as a track' if track.empty? # Tenporarily skipped with xit d 4\n8 ‘ fail 'Track already exists!' if @tracker.include?(track) # ./spec/@6_music_design_challenge_spec.rb:22\n] @tracker << track\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n11 12 examples, @ failures, 2 pending\n12 def list © 0swinpinto@ASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n.90 mjc sl ralinaaaperid |l % \" make_snippet method\npec: @ O8muskc.dasion.chUMNgN_ION:. return string if less then 5 words or equal\n34 first 5 words of a lof tring & ded ell\n15 it \"list method will return all tracks added' do retums Tirst 3 vords of a longer string & appended ellipsisy\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add(‘Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie - nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie ~ nf'] expected: \"Track already exists!\"\nb1} end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it ‘add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\n23 music_tracker = MusicTracker.new ~ Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele*) 12 exanples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi‘ Failed examples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n"
  },
  {
    "seconds": 1425,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n(D | & Otrmsicgesgnmd | @ 06 music.design challengesh u X nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nB_.,D 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(eoek) I 2) MusicTracker add method will fail if ic track already exists in\n. T sicTracker add method w. a music track already exists in arra:\n? 7 fail ‘You cannot input an empty string as a track' if track.empty? # Tenporarily skipped with xit d 4\n8 ‘ fail 'Track already exists!' if @tracker.include?(track) # ./spec/06_music_design_challenge_spec.rb:22\n] @tracker << track A\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n11 12 examples, @ failures, 2 pending\n12 def list | © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n.00 mmejcstoskshplsndrapain |} % \" make_snippet method\nopec W O8mmusic._dedion chskmospve. return string if less then 5 words or equal\n15 it 'list method will return all tracks added' do retums first $ words of a longer string & appended eums%\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add(‘Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie — nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello -~ adele', 'lie =~ nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npx! music_tracker = MusicTracker.new ~ Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!‘ Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % |\n"
  },
  {
    "seconds": 1426,
    "text": "[ N N ) 06_music_design_challenge.rb — Skill_Challenges Ing=Nn NN\n(D | & Otrmsicgesgnmd | @ 06 music.design challengesh u X nuo- @ B +-B8 8§ x\ne t tring if 1 then 5 word 18 '\nreturn string ess ) words or equa\nR 1 class MusicTracker returns first 5 words of a longer string & appended ellipsis\nP def initialize\nE 3 @tracker = [] Pending: (Failures listed here are expected and do not affect your suite's status)\né} 4 end 1) MusicTracker list method will return all tracks added\n# Temporarily skipped with xit\nB_.,D 5 # ./spec/06_music_design_challenge_spec.rb:15\na def add(eoek) I 2) MusicTracker add method will fail if ic track already exists in\n. T sicTracker add method w. a music track already exists in arra:\n? 7 fail ‘You cannot input an empty string as a track' if track.empty? # Tenporarily skipped with xit d 4\n8 ‘ fail 'Track already exists!' if @tracker.include?(track) # ./spec/06_music_design_challenge_spec.rb:22\n] @tracker << track A\n10 end Finished in €.06429 seconds (files took 8.1138 seconds to load)\n11 12 examples, @ failures, 2 pending\n12 def list | © 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nbk return @tracker GrammarStats '\n14 end #check returns true or false if string starts with capital and ends with correct punctuation\n15 returns a interger the percentage of text checked so far that passed\nTodo\n16 end #add method will add task as a string to an array. returns string + added\n#list method will return all tasks added within the array\n#add method will fail if given empty string\n#remove method will remove the given task from the todo array\nMusicTracker\nadds song to tracker\nadding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array (FAILED - 1)\n.00 mmejcstoskshplsndrapain |} % \" make_snippet method\nopec W O8mmusic._dedion chskmospve. return string if less then 5 words or equal\nT first 5 words of a lof tring & ded ellipsis\n15 it 'list method will return all tracks added' do retums Tirst 5 words of a longer string & appended -ellips ]E\n16 music_tracker = MusicTracker.new Failures:\n17 music_tracker.add(‘Hello - adele') 1) MusicTracker add method will fail if music track already exists in array\n18 music_tracker.add ('lie — nf') Failure/Error: expect(music_tracker.add('Hello - adele’)).to eq 'Track already exists!®\n19 expect{music_tracker.list).to eq ['Hello -~ adele', 'lie =~ nf'] expected: \"Track already exists!\"\n20 end got: [\"Hello - adele\", \"Hello - adele\")\n21 (compared using =)\n22 it 'add method will fail if music track already exists in array' do # ./spec/06_music_design_challenge_spec.rb:25:in 'block (2 levels) in <top (required)>'\npx! music_tracker = MusicTracker.new ~ Finished in 0.619 seconds (files took 8.18478 seconds to load)\n24 music_tracker.add('Hello - adele') 12 examples, 1 failure\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!‘ Failed exanples:\n@ 26 end rspec ./spec/@6_music_design_challenge_spec.rb:22 # MusicTracker add method will fail if music tra\n27 end ck already exists in array\né} > 05winpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % |\n"
  },
  {
    "seconds": 1427,
    "text": "(XX ] 06_music_design_challenge.rb — Skill_Challenges In=Nn Rl\n[in G%g:‘amwmux nuo- @ B+~ B & x\nib > @ 06_music_design_challenge.rd\nJo) 1 class MusicTracker * pswinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [ '\n3 P def initialize\nk] [T CHIE |\n& 4 end\ngo 5\n6 def add(track) L\ng 7 fail ‘You cannot input an empty string as a track' if track.empty?\n8 ‘ fail \"Track already exists!' if @tracker.include?(track)\n-] @tracker << track\n10 end\n11\n12 def list\n13 return @tracker\n14 end\n15\n16 end\n@ 06_music_design_challenge_spec.ab U X\nW: __' 06_music_design_chalienge_spec.id\n15 it 'list method will return all tracks added' do i\n16 LTS Ul - Tol T e TS el o Tt (T g [\n17 ‘ music_tracker.add( ‘Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie ~ nf']\npL] [0 ]\n21\n22 | it 'add method will fail if music track already exists in array' do\npx] music_tracker = MusicTracker.new -\nb2 LTS Tl 4T YT L R T R T Y A\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi®\n® 26 end\n27 end\n&\n"
  },
  {
    "seconds": 1428,
    "text": "(XX ] 06_music_design_challenge.rb — Skill_Challenges In=Nn Rl\n[in} G%pi\\-mwmux nuo- @ [DETVE = I\np e -:‘Jﬂclass MusicTracker iwinpmtmm-mm-ﬂntn-cl1mu Skill_Challenges % rspec '\n“ P def initialize\n\nk] [T CHIE |\n& 4 end\ngo 5\n\n6 def add(track) L\ng 7 fail ‘You cannot input an empty string as a track' if track.empty?\n\n8 ‘ fail 'Track already exists!' if @tracker.include?(track)\n\n] @tracker << track\n\n10 end\n\n11\n\n12 def list\n\n13 return @tracker\n\n14 end\n\n15\n\n16 end\n\n#06_music_design_challenge_spec.ib U\nWl __' 06_music,_design_challenge_spec.rb\n\n15 ’ it 'list method will return all tracks added' do\n\n16 LTS TR - Tol T e (TS Ul o Tl (T M [\n\n17 ‘ music_tracker.add('Hello - adele')\n\n18 music_tracker.add ('lie - nf')\n\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n\npL] [0 ]\n\n21\n\n22 | it 'add method will fail if music track already exists in array' do\n\npx] (TS TR 4 -1 T . TS Uof o 1ot () Mo r\n\nb2 LS ol 4T T [ TR A R R T LY R )\n\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi®\n® 26 end\n\n27 end\n&\n"
  },
  {
    "seconds": 1429,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n() | ® Obmusic sesgnmd U | @ 06 music_design chalergesd U X no- & Blen ++ B & x\nsic_design_challenge.rb\nJel * ';U:;l ass MusicTracker * » 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nE 3 K = #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) L #1ist method will return all tasks added within the array\n1\nCO | fail ‘You cannot input an empty string as a track' if track.empty? Tronve mothed Wit remove the etoch task from the todo array\n8 ‘ fail \"Track already exists!' if @tracker.include?(track)\nMusicTracker\n] (1T T o - Tl 3 adds song to tracker\n10 end adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list make_snippet method\nbk} return @tracker return string if less then S words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in ©.8@386 seconds (files took @.1484 seconds to load)\n16 end 12 examples, ® failures\n oswinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % | !\n#06_music_design_challenge_spec.ib U\n“1 __' 06_music,_design_challenge_spec.rb\n15 it 'list method will return all tracks added' do\n16 LTS TR - Tol T e (TS Ul o Tl (T M [\n17 ‘ music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0 ]\n21\n22 | it 'add method will fail if music track already exists in array' do\npx] (TS TR 4 -1 T . TS Uof o 1ot () Mo r\n24 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi®\n26 end\n@ 27 end\n&\n"
  },
  {
    "seconds": 1430,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n() | ® Obmusic sesgnmd U | @ 06 music_design chalergesd U X no- & Blen ++ B & x\nsic_design_challenge.rb\nJel * ';U:;l ass MusicTracker * » 0swinpintogMASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nP def initialize GrammarStats\nE 3 K = #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) L #1ist method will return all tasks added within the array\n1\nCO | fail ‘You cannot input an empty string as a track' if track.empty? Tronve mothed Wit remove the etoch task from the todo array\n8 ‘ fail \"Track already exists!' if @tracker.include?(track)\nMusicTracker\n] (1T T o - Tl 3 adds song to tracker\n10 end adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list make_snippet method\nbk} return @tracker return string if less then S words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in ©.8@386 seconds (files took @.1484 seconds to load)\n16 end 12 examples, ® failures\n oswinpinto@MASTUDENT-0swin-Pinto-C17GMAZAQ6L4 Skill_Challenges % | !\n#06_music_design_challenge_spec.ib U\n“1 __' 06_music,_design_challenge_spec.rb\n15 it 'list method will return all tracks added' do\n16 LTS TR - Tol T e (TS Ul o Tl (T M [\n17 ‘ music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0 ]\n21\n22 | it 'add method will fail if music track already exists in array' do\npx] (TS TR 4 -1 T . TS Uof o 1ot () Mo r\n24 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi®\n26 end\n@ 27 end\n&\n"
  },
  {
    "seconds": 1431,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n() | ¥ Ofmsicsesgnmdy @ 06 music.design shalkrgesb U X no- & [EESEN= I\nib > @ 06_music_design_challenge.rd '\nJol 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE 3 racker = [] #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) :::sdt n::h:d ‘:{{1;3.“;: u}l taskstadd:d‘:ithln the array\nmethod w a ven e str\n6’ 7 fail ‘You cannot 1“9“ an empty Stl‘iﬂg as a track' if track.eupty? #remove method will remvg the gmez task grum the todo array\n] fail 'Track already exists!' if @tracker.include?(track) R\n9 @tracker << track adds song to tracker\n10 0] adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list\nmake_snippet method\nbk} return @tracker return string if less then 5 words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in ©.00386 seconds (files took ©.1404 seconds to load)\n16 end 12 examples, @ failures\n< 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % I !\n@ 06_music_design_challenge_spec.b U X\nspec > 1. 06_music_design_challenge_spec.rb\n15 | it 'list method will return all tracks added' do\n16 LLUVES U - Tel T (TS Cal o o= 1ol (T M [\n17 ‘ music_tracker.add('Hello - adele')\n18 music_tracker.add ('lie - nf')\n19 expect(music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 [0\n21\n22 | it 'add method will fail if music track already exists in array' do\npx) music_tracker = MusicTracker.new T\n24 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already existsi®\n26 end\n@ 27 end\n&\n"
  },
  {
    "seconds": 1432,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\n() | ¥ Ofmsicsesgnmdy @ 06 music.design shalkrgesb U X uo- & =R\nib > @ 06_music_design_challenge.rd '\nJol 1 class MusicTracker | » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE 3 K = #check returns true or false if string starts with capital and ends with correct punctuation\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) L #list method will return all tasks added within the array\n#add method will fail if given empty strin\ne 7 fail ‘You cannot i“p“t an empty Stl‘iﬂg as a track' if track. empty? #remove method will renmvg the gmez task gmm the todo array\n8 fail 'Track already exists!' if @tracker.include?(track) R\n] 1T TR o - T 9 adds song to tracker\n10 end adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list [ ——\nbk} return @tracker return string if less then 5 words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in ©.00386 seconds (files took ©.1404 seconds to load)\n16 end 12 examples, @ failures\n oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [ !\n@ 06_music_design_challenge_spec.b U X\nspec ) @ 06_music_design_chalenge_spec. .. .\n5 music_tracker = MusicTracker.new\n[:] music_tracker.add('Hello - adele'}\n7 expect{music_tracker.list).to eq ['Hello - adele'l\n-] end\n9 ‘ ]I\n10 | it 'adding an empty string will fail' do\n11 | music_tracker = MusicTracker.new\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track\n13 end E\n14\n15 it *list method will return all tracks added' do\n16 LTES Uollh 4 =T T 705 op f =Tl (TP S\n) 17 music_tracker.add('Hello - adele')\n& bt} \\ LLUTES ol o =Yl TP [ IR B TR 1\n"
  },
  {
    "seconds": 1433,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\nO | & Otmsicseigumdy | @ o8 music.designshallengesh U X nuo- @ Ben ++ B & %\nlib > @ 06_music_design_challenge.rb .\nJol 1 class MusicTracker | » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE = #check returns true or false if string starts with capital and ends with correct punctuation\nk] [3 [l\né} @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track | #list method will return all tasks added within the array\nPd Y ) ,ac ) P L #add method will fail if given empty string\n© 7 fail ‘You cannot 1“9“ an empty Stl‘iﬂg as a track' if track. empty? #remove method will remove the given task from the todo array\n] fail 'Track already exists!' if @tracker.include?(track) ——\n9 @tracker << track adds song to tracker\n10 end adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list | nake_snippet nethod\nbk} return @tracker return string if less then 5 words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in ©.00386 seconds (files took ©.1484 seconds to load)\n16 end 12 examples, @ failures\n oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [ !\n@ 06_music_design_challenge_spec.b U X\nspec ) @ 06_music_design_challenge_spec.r\n4 BRSRE-T [T 1y T B o - Tol (Y ol 0]\n5 music_tracker = MusicTracker.new\n[ music_tracker.add('Hello - adele')\n7 expect{music_tracker.list).to eq ['Hello - adele'] I\n8 end\n9\n10 it 'adding an empty string will fail® do\n11 LIUVES ol 4 - Tel 5 L 703 ot =Tl (- TP S0\n12 expect{ music_tracker.add('')}.to raise_error 'You cannot input an empty string as a track\n13 end\n14\n15 it 'list method will return all tracks added' do\n) 16 FITES Tolh - T LR 713 T =Tl (=T T\n17 IS Tofit o - T L TR T R R T [ R\n‘3} 18 S racke add ' o -~\n"
  },
  {
    "seconds": 1434,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\nsic_sesign.md U @ 08_music_design_challengerb U X Vo O Bew +- 8 & x\n@ Otmusicsesgnmay 2]\nib > @ 06_music_design_challenge.rd '\n0 1 class MusicTracker | » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE 3 K = #check returns true or false if string starts with capital and ends with correct punctuation\nP @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) L #list method will return all tasks added within the array\nO fail ‘You cannot input an empty string as a track' if track.empty? Srencve method Wit Temove the given teck fron the todo array\n8 fail 'Track already exists!' if @tracker.include?(track) [\n] 1T TR o - T 9 adds song to tracker\n10 end adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list {\nmake_snippet method\nbk} return @tracker return string if less then 5 words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in ©.00386 seconds (files took ©.1484 seconds to load)\n16 end 12 examples, @ failures\n oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [ !\n@ 06_music_design_challenge_spec.b U X\nspec) @ 06_music_design_chalenge_spec b\n18 music_tracker.add ('lie - nf')\n19 ‘ expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 it 'add method will fail if music track already exists in array' do\nPk ‘ VLS Tk 40T T e TS Rl o o Tod (- T o [N\n24 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack already exists!®\n26 end\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1435,
    "text": "[ N N ] 06_music_design_challenge.rb — Skill_Challenges (Ing=Nn g\ni} GM-,Q! | @ 0 music.design.shallengesb U X uo- & Do+ B & x\nib > @ 06_music_design_challenge.rd '\n0 1 class MusicTracker » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nP def initialize GrammarStats\nE 3 K = #check returns true or false if string starts with capital and ends with correct punctuation\nP @tracker = returns a interger the percentage of text checked so far that passed\n4 end\nTodo\n55’ 5 #add method will add task as a string to an array. returns string + added\n[ def add(track) #list method will return all tasks added within the array\nCO | fail ‘You cannot input an empty string as a track' if track.empty? Sromcve mothed witl remove. the eloch task from the todo array\n8 fail 'Track already exists!' if @tracker.include?(track) [ —\n] @tracker << track adds song to tracker\n10 [0 ] adding an empty string will fail\nlist method will return all tracks added\n11 add method will fail if music track already exists in array\n12 def list\nmake_snippet method\n13 return @tracker return string if less then 5 words or equal\n14 end returns first 5 words of a longer string & appended ellipsis\n15 Finished in @.00386 seconds (files took ©.1404 seconds to load)\n16 end 12 examples, @ failures\n oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [} !\n@ 06_music_design_challenge_spec.b U X\nspec) @ 06_music,design_chalenge_spec b\n18 music_tracker.add ('lie - nf')\n19 ‘ expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\npL] end\n21\n22 it 'add method will fail if music track already exists in array' do\nPk music_tracker = MusicTracker.new\nP2 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack already exists!®\n26 end ]\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1436,
    "text": "o000 06_music_design.md — Skill_Challenges Ing=Nn NN\n@ % 06_music_designmd U X @ 08 music_design_challengesb U ! neo- & B+~ B & %\n¥ 06 music_designmd > 5 ¥ ASding ks 10 trackes\nJo) P » 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % rspec '\n23 # Adding tracks to tracker PR—\nh 24 #1) music_tracker = MusicTracker.new #check returns true or false if string starts with capital and ends with correct punctuation\n!P 25 music_tracker.add('Hello - adele') returns a interger the percentage of text checked so far that passed\n26 music.list => ['Hello - adele’] Todo\nBf’ 27 #add method will add task as a string to an array. returns string + added\n#1list method will return all tasks added within the array\n= 28 #add method will fail if given empty string\n° 20 # Adding empty string will fail #remove method will remove the given task from the todo array\nELIE 73NN TTES Rl 4 - Ta (U TR Ul f=Tel T W) Mus::Trnckert crack\nv 5@ adds song to tracker\n31 \" music_tracker.add('') = adding an enpty string will fail\n32 list method will return all tracks added\n33 #3) # List method will return all tracks added add method will fail if music track already exists in array\n34 music_tracker = MusicTracker.new mkf:ﬁ:nlpg:: hr::ﬂi‘:dless D\n35 music_tracker.add('Hello - adele') returns first 5 words of a longer string & appended ellipsis\n36 music_tracker.add('lie - nf*)\n= . Finished in ©.00386 ds (files took .1404 LER TR UET)]\n32 LTS ol - T T BT E S S Y R T Y RS & TR | 12 examples, 0 f,uuf-::“ s es too seconds to loa\nki) 1\nc inpinto@ASTUDENT-0swin-Pinto-C17GMAZ4Q6L4 Skill_Challen: %\n30 #4) # add method will fail if music track already exists in array oswine W chatlenges &[]\n48 L TES R - Ta T IR T =Tl L T\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!*\n43\na8\n@ 06_music_design_challenge_spec.rb U %\nspec > @ 06_music_design_chabnge_spec.\n18 LTS TR - T T -1 R RR G TR ) 8\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npic music_tracker = MusicTracker.new\nb2 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!®\n26 end k\n27 end\n®\n&\n"
  },
  {
    "seconds": 1437,
    "text": "o000 06_music_design.md — Skill_Challenges Ing=Nn NN\n[ SOt stedgrand 0 | HEDE s dasye Hhalaossill neo- & B+~ B & x\n¥ 08music_design.md > (5] # Adding tracks 10 tracker\nJo) - » oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\n13 def add{track)\nGrammarStats\n35 14 # adds the tracks to the array as stri\"“’ EZ I S VT I TN T EY TN S S U E T SR AL IR CYMETL LG O R I T T TR IS OE S T\n15 end returns a interger the percentage of text checked so far that passed\nP 16 Todo\n8 17 def list #add method will add task as a string to an array. returns string + added\n#1list method will return all tasks added within the array\nP 18 # returns list of all music tracks added to array #add method will fail if given empty string\n° 19 end #remove method will remove the given task from the todo array\n20 MusicTracker\n21 3. Create Examples as Tests ]I adds song to tracker\nadding an empty string will fail\nb2 list method will return all tracks added\n23 F Mding tracks to tracker add method will fail if music track already exists in array\n24 #1) music_tracker = MusicTracker.new make_snippet method\n: . Py [ return string if less then 5 words or equal\ni: :::iz—:;::ker'a[?::t::lloade::?;\"e ) returns first 5 words of a longer string & appended ellipsis\n. => -\n27 Finished in ©.00386 seconds (files took ©.1484 seconds to load)\n28 12 examples, @ failures\n29 # Adding empty string will fail < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % [] !\n30 #2) music_tracker = MusicTracker.new\n31 \" music_tracker.add(*') = [NGUNCARNOENNPUEANIEAPEY NS ErIngUasaNEracky\n32\n33 #3) # List method will return all tracks added\n34 L UTES TR o - Te T L (TE o f =Tl T TV\n@ 06_music_tesign_challenge_specrb U X\nspec> @ 06_music_design_chalenge_spec b\n18 [T Tl 4 - Yo LY [+ R & TR D ]\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npxi music_tracker = MusicTracker.new\n24 music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Track already exists!®\n26 end =\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1438,
    "text": "[ N N ) 06_music_design.md — Skill_Challenges Ing=Nn NN\n@ ¥ 06_music_designmd U X @ 06_music_design_challengesb U neo- & B+~ B8 & x\n¥ 08_music_dosignmd > [E # Agding tracks to trackes ,\nJo) 1 1. Describe the Problem » oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nE 2 4 4 ver Gr:l!hurif:tut: t false if string starts with ital and ends with t tuatis\ncheck returns true or false if string starts with capital and ends with correct punctuation\n& i §° th:ttI c:: :eepk:r:?k 0{1.: .::1: ‘is;ening lst of th returns a interger the percentage of text checked so far that passed\nwan (- | rac ve sten 0 and see a o em.\nTodo\n5_1,3 5 #add method will add task as a string to an array. returns string + added\n[ #list method will return all tasks added within the array\n#add method will fail if given empty string\n? 7.2 Des-‘-g“. the Class Interface #remove method will remove the given task from the todo array\n8 class MusicTracker R\n9 def initalize ZI adds song to tracker\no adding an empty string will fail\n10 & stores tracks In an array list method will return all tracks added\n11 end add method will fail if music track already exists in array\n12\nmake_snippet method\n13 def add{track) return string if less then 5 words or equal\n14 # adds the tracks to the array as strlngs returns first 5 words of a longer string & appended ellipsis\n15 end Finished in ©.00386 seconds (files took ©.1484 seconds to load)\n16 12 examples, @ failures\n17 def list  oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n18 # returns list of all music tracks added to array\n19 end\n20\n2 S R of 7 3- ) {0 S €1 ) T T 1 €\np¥\n@ 06_music_design_challenge_spec.sb U X\nspec> @ 06_music_design_chalenge_spec b\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npxi music_tracker = MusicTracker.new\n24 LTES Tl Yo T L T TSI R R T [ K ]\nb1 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack already exists!®\n26 end |5\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1439,
    "text": "[ N N 06_music_design.md — Skill_Challenges Ing=Nn NN\n@ ¥ 06_music_designmd U X @ 08 music_design_challengerb U uREOo- & B+~ 8 & x\n¥ 08muslc,_design.md > [E) # ASding tracks 10 tracker\np 48 * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec '\nGrammarStats\nE #check returns true or false if string starts with capital and ends with correct punctuation\né} returns a interger the percentage of text checked so far that passed\nTodo\nB_.,D #add method will add task as a string to an array. returns string + added\n#1list method will return all tasks added within the array\nPd #add method will fail if given empty string\n© #remove method will remove the given task from the todo array\nMusicTracker\n31 adds song to tracker\n= adding an empty string will fail\nlist method will return all tracks added\nadd method will fail if music track already exists in array\nmake_snippet method\nreturn string if less then 5 words or equal\nreturns first 5 words of a longer string & appended ellipsis\nFinished in ©.80386 seconds (files took @.1484 seconds to load)\n12 examples, @ failures\n oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n@ 06_mwsic_design_challinge_specrb U X\nspec) @ 06_music_design_chalenge_spec b\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\n23 LTES (ol o =T I | TS ot f - T (-1 (2N\npZ ] music_tracker.add('Hello - adele')\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack already exists!®\n26 end =\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1440,
    "text": "[ N N ) 06_music_design.md — Skill_Challenges Ing=Nn NN\n@ ¥ 06_music_designmd U X @ 08_music_design_challengesb U . neRo- & Bwms +- B & x\nB opnpee-Aotizind > B Asdng vasta o tacky inpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % '\nB » OSW! L_Cha es rs|\nL s R TR of - - ST ) (T 1 g 9 pec\n22 GrammarStats\n35 EZ I S VT I TN T EY TN S S U E T SR AL IR CYMETL LG O R I T T TR IS OE S T\n23 # Adding tracks to tracker returns a interger the percentage of text checked so far that passed\n& 24 #1) music_tracker = MusicTracker.new Todo\n8 25 music_tracker.add('Hello - adele') #add method will add task as a string to an array. returns string + added\n#1list method will return all tasks added within the array\n» 28 nusic.list = [‘Hello - adele'] #add method will fail if given empty string\no 27 #remove method will remove the given task from the todo array\npi] MusicTracker\nb1 # Adding empty string will fail ]E a::in song to :raclt@;n S fail\n30 #2) music_tracker = MusicTracker.new Uet Rethod i\\ retusn 2Tl tracks added\n31 |' music_tracker.add(*'') => _ add method will fail if music track already exists in array\n32 make_snippet method\n33 #3) # List method will return all tracks added ::::ssggg ;fm‘;::: ;292 -‘{o:;:ss:: ;lguzlamnded elUpsis\nki L TES T o - Te (L | ITES Tef f =Tl T T\n35 music_tracker.add{'Hello - adele') Finished in ©.00386 seconds (files took ©.1484 seconds to load)\n- 12 les, @ fail\n36 music_tracker.add('lie - nf') exenetes. B Tarires .\n37 music_tracker.list = ['Hello - adele', 'lie - nf'l < 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % []\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTS TR - Te U | ITE Cof =T T\n41 music_tracker.add('Hello - adele')\n42 music_tracker.add('Hello - adele') => 'Track already exists!'\n@ 06_music_design_challenge_specrb U X\n99ec ) @ 06_music_design_chatenge_spec\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npxi music_tracker = MusicTracker.new\n24 LTES Tl Yo T L T TSI R R T [ K ]\n25 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack @lready exists!®\n26 end =\n27 end\n®\n&\n"
  },
  {
    "seconds": 1441,
    "text": "[ N N ) 06_music_design.md — Skill_Challenges Ing=Nn NN\n@ ® Otmsicdedgnmd X | @ 08 music desgn challengesb U neRo- & Bas ++ B & x\n¥ 08muslc_design.md > (5] # Ading tracks to tracker ,\np ;i 3 c t E 1 3 Yout * 0swinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n« Create Examples as Tests\n4 GrammarStats\n35 22 #check returns true or false if string starts with capital and ends with correct punctuation\n!P i F 3 Mding tracks to tracker returns a interger the percentage of text checked so far that passed\nPLINE U TS U 4T L (TS Hof o Tl T ) Todo\n0 i \" ' - ' #add method will add task as a string to an array. returns string + added\n& ¥8 IUS%C_U‘BCRGT a?d( Hello ad?\"e ) #1list method will return all tasks added within the array\no 26 LTSI B e O AT R L L T | #add method will fail if given empty string\n° 27 #remove method will remove the given task from the todo array\n28 MusicTracker\nL] # Adding empty string will fail 1 :ggin ;\":g :;p:;‘:::;ng Wil fail\n30 #2) music_tracker = MusicTracker.new list method will return all tracks added\n31 |' music_tracker.add('') => _ add method will fail if music track already exists in array\n32 make_snippet method\nreturn string if less then 5 words or equal\n;3‘ #3) # L:Sttmet::m’ wi':l ;::urnkatl tracks added returns first 5 words of a longer string & appended ellipsis\nmuslic_tracker = Mus racker.new\n35 music_tracker.add( 'Hello - adele') :;n::ml:z'oaa::ﬁu:::onds (files took .1464 seconds to load)\nk13 music_tracker.add(’'lie - nf') |\n37 [LITES Tl o - Te T B R S B Y R RT3 FLIR TR 1 i | © OSWINpANtogMSTUDENT-Osiein-Pinto-C17GMAZ406L4 Sill Challenges % []\n38\n39 #4) # add method will fail if music track already exists in array\n40 LTES TR -Te TR | (TES Lo f - T T MY (P\n41 LTES R =T LT [ [ IR -1 Y A\nLY music tracker.add('Hello - adele') => 'Track already exists!'\n@ 06_mwsic_design_challenge_specrb U\nspec> @ 06_music_design_chalenge_spec b\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npxi music_tracker = MusicTracker.new\n24 LTES Tl Yo T L T TSI R R T [ K ]\nb1 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack @lready exists!®\n26 end =\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1442,
    "text": "[ N N ) 06_music_design.md — Skill_Challenges Ing=Nn NN\n@ ¥ 06_music_designmd U X @ 06 music_design_challengerb U . neRo- & B+~ B & %\n¥ O8.music.design.md >E1wmlummw .\nJo) i 1. Describe the Problem » oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\nE ¥ Ad s user Gmuhnrif:tuts false if in ith ital and ends with 1\n#check returns true or false if string starts with capital and ends with correct punctuation\n3 So that I can keep track of my LELE I\"iStening returns a interger the percentage of text checked so far that passed\n& 4 I want to add tracks I've listened to and see a list of them. Tod\no\n5_1,3 5 nqd method will add task as a string to an array. returns string + added\n6 ]I #list method will return all tasks added within the array\n#add method will fail if given empty string\n? 7 2 nesj-g\" the Class Interface #remove method will remove the given task from the todo array\n8 class MusicTracker\nLU T f - T T\n] def initalize adds song to tracker\n10 # stores tracks in an array —  adding an empty string will fail\nlist method will return all tracks added\n11 | end add method will fail if music track already exists in array\n12\nmake_snippet method\n13 def add{track)} return string if less then 5 words or equal\n14 # adds the tracks to the array as str.'l.ngs returns first 5 words of a longer string & appended ellipsis\n15 end Finished in ©.00386 seconds (files took ©.1484 seconds to load)\n16 12 examples, @ failures\n17 def list  oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n18 # returns list of all music tracks added to array\n19 (1G]\n20\n21 3. Create Examples as Tests\n22\n@ 06_music_design_challange_spec.sb U X\nspec> @ 06_music_design_chalenge_spec b\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npxi music_tracker = MusicTracker.new\n24 LTES Tl Yo T L T TSI R R T [ K ]\nb1 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack already exists!®\n26 end =\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1443,
    "text": "[ N N ) 06_music_design.md — Skill_Challenges 1 Ing=Nn NN\n@ ¥ 06_music_designmd U X @ 08 music_design_challenge.sb U neo- & B+~ B & %\n¥ O8.music.design.md > () # Aoding tracks (o tracker .\nJo) i 1. Describe the Problem » oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZ4Q6L4 Skill_Challenges % rspec\n35 ¥ Ad 2 user Grml.:nrif:tuts false if in, ith ital and ends with 1\n#check returns true or false if string starts with capital and ends with correct punctuation\nP 3 So that I can keep track of my LELE I\"iStening returns a interger the percentage of text checked so far that passed\n4 I want to add tracks I've listened to and see a list of them. {\nTodo\n5_1,3 5 #add method will add task as a string to an array. returns string + added\n6 #list method will return all tasks added within the array\n#add method will fail if given empty string\ne 7 2 nesj-g\" LUCHAER G g BT #remove method will remove the given task from the todo array\n8 class MusicTracker [\n] def initalize adds song to tracker\nL adding an empty string will fail\n1 # gtores tracks in sn array list method will return all tracks added\n11 end add method will fail if music track already exists in array\n12\nmake_snippet method\n13 def add{track)} return string if less then 5 words or equal\n14 # adds the tracks to the array as stri“” returns first 5 words of a longer string & appended ellipsis\n15 end Finished in ©.80386 seconds (files took .1484 seconds to load)\n16 12 examples, @ failures\n17 def list < oswinpinto@MASTUDENT-Oswin-Pinto-C17GMAZAQ6L4 Skill_Challenges % [] !\n18 # returns list of all music tracks added to array\n19 (1G]\n20\nb S PR o T} W S €T T - TR 11 6\n22\n@ 06_mwsic_design_challinge_specsb U %\nspec) @ 06_music_desion_chalenge_spec.r\n18 music_tracker.add ('lie - nf')\n19 expect{music_tracker.list).to eq ['Hello - adele', 'lie - nf']\n20 end\n21\n22 it 'add method will fail if music track already exists in array' do\npxi music_tracker = MusicTracker.new\n24 LTES Tl Yo T L T TSI R R T [ K ]\nb1 expect{music_tracker.add('Hello - adele')}.to raise_error 'Frack @lready exists!®\n26 end =\n27 end\n(@)\n&\n"
  },
  {
    "seconds": 1444,
    "text": "Oswin Pinto\n"
  },
  {
    "seconds": 1445,
    "text": "Oswin Pinto\n"
  },
  {
    "seconds": 1446,
    "text": "Oswin Pinto\n"
  }
]
